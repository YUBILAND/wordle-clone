{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\wordle-clone\\\\Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Grid from './components/Grid';\nimport Header from './components/Header';\nimport Keys from './components/Keys';\nimport { KeyboardContext } from './Contexts/KeyboardContext';\nimport Login from './components/Login';\nimport LandingPage from './components/LandingPage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const[ letterColor, setLetterColor] = useState([]);\n\n  const [kbColor, setKbColor] = useState([]);\n  const [winPage, setWinPage] = useState(false);\n  const [tutorial, showTutorial] = useState(false);\n  const [settings, showSettings] = useState(false);\n  const [guestMode, setGuestMode] = useState(false);\n  const [userMode, setUserMode] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [token, setToken] = useState(false);\n  const [login, setLogin] = useState(false);\n  const [loginPage, showLoginPage] = useState(false);\n  const [registerPage, showRegisterPage] = useState(false);\n  if (guestMode) {}\n  useEffect(() => {\n    fetch('http://localhost:8081/users').then(res => res.json()).then(data => console.log(data)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'bg-[#121213] text-white' : 'bg-white text-black'}`,\n    children: /*#__PURE__*/_jsxDEV(KeyboardContext.Provider, {\n      value: {\n        kbColor,\n        setKbColor,\n        winPage,\n        setWinPage,\n        tutorial,\n        showTutorial,\n        settings,\n        showSettings,\n        guestMode,\n        setGuestMode,\n        userMode,\n        setUserMode,\n        darkMode,\n        setDarkMode,\n        loginPage,\n        showLoginPage,\n        registerPage,\n        showRegisterPage\n      },\n      children: !(guestMode || userMode) ? /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Keys, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WyJypJI6KCdRbRnZ0zNV/j54kR0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Grid","Header","Keys","KeyboardContext","Login","LandingPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","kbColor","setKbColor","winPage","setWinPage","tutorial","showTutorial","settings","showSettings","guestMode","setGuestMode","userMode","setUserMode","darkMode","setDarkMode","token","setToken","login","setLogin","loginPage","showLoginPage","registerPage","showRegisterPage","fetch","then","res","json","data","console","log","catch","err","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/david/wordle-clone/Client/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Grid from './components/Grid';\r\nimport Header from './components/Header';\r\nimport Keys from './components/Keys';\r\nimport { KeyboardContext } from './Contexts/KeyboardContext';\r\nimport Login from './components/Login';\r\nimport LandingPage from './components/LandingPage';\r\n\r\nfunction App() {\r\n  // const[ letterColor, setLetterColor] = useState([]);\r\n\r\n  const [kbColor, setKbColor] = useState([]);\r\n  const [winPage, setWinPage] = useState(false)\r\n  const [tutorial, showTutorial] = useState(false);\r\n  const [settings, showSettings] = useState(false);\r\n  const [guestMode, setGuestMode] = useState(false);\r\n  const [userMode, setUserMode] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [token, setToken] = useState(false);\r\n\r\n  const [login, setLogin] = useState(false);\r\n\r\n  const [loginPage, showLoginPage] = useState(false);\r\n  const [registerPage, showRegisterPage] = useState(false);\r\n\r\n\r\n\r\n  if (guestMode) {\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8081/users')\r\n    .then(res => res.json())\r\n    .then(data => console.log(data))\r\n    .catch(err => console.log(err));\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className={`App ${darkMode ? 'bg-[#121213] text-white' : 'bg-white text-black'}`}>\r\n\r\n      <KeyboardContext.Provider value={{kbColor, setKbColor, winPage, setWinPage, tutorial, showTutorial, settings, showSettings, guestMode, setGuestMode, userMode, setUserMode, darkMode, setDarkMode, loginPage, showLoginPage, registerPage, showRegisterPage}}>\r\n        {!(guestMode || userMode) ? <LandingPage /> :\r\n        <>\r\n        <Header />\r\n        <Grid />\r\n        <Keys />\r\n        </>\r\n        }\r\n      </KeyboardContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}