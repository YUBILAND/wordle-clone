{"ast":null,"code":"\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\nvar _rxjs = require(\"rxjs\");\nvar _errors = require(\"./errors\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nclass TokenObject {\n  constructor(authStorageName, authStorageType, refreshTokenName, debug, cookieDomain, cookieSecure) {\n    this.authStorageName = authStorageName;\n    this.authStorageType = authStorageType;\n    this.stateStorageName = `${authStorageName}_state`;\n    this.refreshTokenName = refreshTokenName;\n    this.cookieDomain = cookieDomain;\n    this.cookieSecure = cookieSecure;\n    this.debug = debug;\n    this.authStorageTypeName = `${this.authStorageName}_type`;\n    this.isUsingRefreshToken = !!this.refreshTokenName;\n    this.authValue = this.initialToken_();\n    this.authSubject = new _rxjs.BehaviorSubject(this.authValue);\n    this.log(`[Auth Kit] - Initial Value ${this.authValue}`);\n    this.authSubject.subscribe({\n      next: this.syncTokens\n    });\n  }\n  subscribe = (next, error, complete) => {\n    this.authSubject.subscribe({\n      next: next,\n      error: error,\n      complete: complete\n    });\n  };\n  set = data => {\n    this.log(`Set Function is called with`);\n    if (this.debug) {\n      console.dir(data);\n    }\n    this.log(`Set Function Old Data`);\n    if (this.debug) {\n      console.dir(this.value);\n    }\n    let obj = this.value;\n    if (data.userState !== undefined) {\n      obj.userState = data.userState;\n    }\n    if (data.auth) {\n      try {\n        const exp = this.getExpireDateTime(data.auth.token);\n        if (exp > new Date()) {\n          obj = {\n            ...obj,\n            auth: {\n              'token': data.auth.token,\n              'type': data.auth.type,\n              'expiresAt': exp\n            },\n            isSignIn: true\n          };\n        } else {\n          obj = {\n            ...obj,\n            auth: null,\n            isSignIn: false,\n            userState: null\n          };\n          new _errors.AuthError('Given Auth Token is already expired.');\n        }\n      } catch (e) {\n        obj = {\n          ...obj,\n          auth: null,\n          isSignIn: false,\n          userState: null\n        };\n        new _errors.AuthError('Error pursing the Auth Token. Make sure you provided a valid JWT.');\n      }\n    } else if (data.auth === null) {\n      obj = {\n        ...obj,\n        auth: null,\n        isSignIn: false,\n        userState: null\n      };\n    }\n    if (this.isUsingRefreshToken) {\n      if (obj.auth === null) {\n        obj = {\n          ...obj,\n          refresh: null\n        };\n      } else if (data.refresh) {\n        try {\n          const refreshExpireTime = this.getExpireDateTime(data.refresh);\n          if (refreshExpireTime > new Date()) {\n            obj = {\n              ...obj,\n              refresh: {\n                'token': data.refresh,\n                'expiresAt': refreshExpireTime\n              }\n            };\n          } else {\n            obj = {\n              ...obj,\n              auth: null,\n              isSignIn: false,\n              userState: null,\n              refresh: null\n            };\n            new _errors.AuthError('Given Refresh Token is already expired.');\n          }\n        } catch (e) {\n          obj = {\n            ...obj,\n            auth: null,\n            isSignIn: false,\n            userState: null,\n            refresh: null\n          };\n          new _errors.AuthError('Error pursing the Auth Token.' + ' Make sure you provided a valid JWT.');\n        }\n      } else if (data.refresh === null) {\n        obj = {\n          ...obj,\n          refresh: null\n        };\n      }\n    }\n    this.log(`[Auth Kit] - Set Function New Data`);\n    this.log(obj);\n    this.authValue = obj;\n    this.authSubject.next(obj);\n  };\n  get value() {\n    return this.authSubject.value;\n  }\n  initialToken_ = () => {\n    if (this.authStorageType === 'cookie') {\n      return this.initialCookieToken_();\n    } else {\n      return this.initialLSToken_();\n    }\n  };\n  initialCookieToken_ = () => {\n    const authToken = _jsCookie.default.get(this.authStorageName);\n    const authTokenType = _jsCookie.default.get(this.authStorageTypeName);\n    const stateCookie = _jsCookie.default.get(this.stateStorageName);\n    const refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? _jsCookie.default.get(this.refreshTokenName) : null;\n    return this.checkTokenExist_(authToken, authTokenType, stateCookie, refreshToken);\n  };\n  initialLSToken_ = () => {\n    const authToken = localStorage.getItem(this.authStorageName);\n    const authTokenType = localStorage.getItem(this.authStorageTypeName);\n    const stateCookie = localStorage.getItem(this.stateStorageName);\n    const refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? localStorage.getItem(this.refreshTokenName) : null;\n    return this.checkTokenExist_(authToken, authTokenType, stateCookie, refreshToken);\n  };\n  checkTokenExist_ = (authToken, authTokenType, stateCookie, refreshToken) => {\n    this.log('checkTokenExist_ is called');\n    this.log(`Params: authToken: ${authToken}, authTokenType: ${authTokenType},\n      stateCookie: ${stateCookie}, refreshToken: ${refreshToken}`);\n    try {\n      let refresh;\n      if (this.isUsingRefreshToken && !!refreshToken) {\n        this.log(`checkTokenExist - isUsingRefreshToken\n          = ${this.isUsingRefreshToken} refrehToken - ${refreshToken}`);\n        const refreshTokenExpiresAt = this.getExpireDateTime(refreshToken);\n        if (refreshTokenExpiresAt < new Date()) {\n          this.log(`checkTokenExist - refresh token is expired \n            ${refreshTokenExpiresAt} ${new Date()}`);\n          refresh = null;\n        } else {\n          this.log(`checkTokenExist - new refresh token is assigned \n            ${refreshToken}`);\n          refresh = {\n            token: refreshToken,\n            expiresAt: refreshTokenExpiresAt\n          };\n        }\n      } else {\n        this.log(`checkTokenExist - Refesh Token is invalid or not using\n           refresh feature ${this.isUsingRefreshToken} ${refreshToken}`);\n        refresh = null;\n      }\n      if (this.isUsingRefreshToken && !refresh) {\n        this.log(`checkTokenExist - Removing Refresh Token`);\n        this.removeAllToken();\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      }\n      let auth;\n      let authState;\n      if (!!authToken && !!authTokenType && !!stateCookie) {\n        this.log(`checkTokenExist - authToken, authTokenType, stateCookie exists`);\n        try {\n          const expiresAt = this.getExpireDateTime(authToken);\n          if (expiresAt < new Date()) {\n            this.log(`checkTokenExist - auth token is expired \n              ${expiresAt} ${new Date()}`);\n            auth = null;\n            authState = null;\n          } else {\n            try {\n              authState = JSON.parse(stateCookie.replaceAll('\\\\', ''));\n              auth = {\n                token: authToken,\n                type: authTokenType,\n                expiresAt: expiresAt\n              };\n            } catch (err) {\n              this.log('state cookie JSON parsing failed');\n              this.log(err);\n              auth = null;\n              authState = null;\n            }\n          }\n        } catch (e) {\n          this.log(`checkTokenExist - auth token or auth state is invalid \n            ${authToken} ${stateCookie}`);\n          this.log(e);\n          auth = null;\n          authState = null;\n        }\n      } else {\n        this.log(`checkTokenExist ` + `- authToken, authTokenType, stateCookie doesn't exists`);\n        auth = null;\n        authState = null;\n      }\n      if (refresh) {\n        if (!!auth && !!authState) {\n          this.log('checkTokenExist - Returning auth and refrsh');\n          this.log({\n            auth: auth,\n            refresh: refresh,\n            userState: authState,\n            isUsingRefreshToken: this.isUsingRefreshToken,\n            isSignIn: true\n          });\n          return {\n            auth: auth,\n            refresh: refresh,\n            userState: authState,\n            isUsingRefreshToken: this.isUsingRefreshToken,\n            isSignIn: true\n          };\n        }\n        this.log('checkTokenExist - Removing Auth Token');\n        this.removeAuth();\n        this.log({\n          auth: null,\n          refresh: refresh,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        });\n        return {\n          auth: null,\n          refresh: refresh,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      } else if (!this.isUsingRefreshToken && !!auth && !!authState) {\n        this.log('checkTokenExist - Returning auth');\n        this.log({\n          auth: auth,\n          refresh: null,\n          userState: authState,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: true\n        });\n        return {\n          auth: auth,\n          refresh: null,\n          userState: authState,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: true\n        };\n      }\n      {\n        this.log('checkTokenExist- removing all tokens. Returning null');\n        this.removeAllToken();\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      }\n    } catch (e) {\n      this.removeAllToken();\n      return {\n        auth: null,\n        refresh: null,\n        userState: null,\n        isUsingRefreshToken: this.isUsingRefreshToken,\n        isSignIn: false\n      };\n    }\n  };\n  parseJwt = token => {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  };\n  getExpireDateTime = token => {\n    const jwtData = this.parseJwt(token);\n    if (Object.prototype.hasOwnProperty.call(jwtData, 'exp')) {\n      const d = new Date(0);\n      d.setUTCSeconds(jwtData.exp);\n      return d;\n    } else {\n      throw new _errors.AuthError('JWT has no exp param');\n    }\n  };\n  syncTokens = authState => {\n    if (authState.auth) {\n      this.setAuthToken(authState.auth.token, authState.auth.type, authState.userState);\n    } else {\n      this.removeAuth();\n    }\n    if (!!authState.refresh && this.isUsingRefreshToken) {\n      this.setRefreshToken(authState.refresh.token);\n    } else {\n      this.removeRefresh();\n    }\n  };\n  setAuthToken = (authToken, authTokenType, authState) => {\n    if (this.authStorageType === 'cookie') {\n      const expiresAt = this.getExpireDateTime(authToken);\n      _jsCookie.default.set(this.authStorageName, authToken, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n      _jsCookie.default.set(this.authStorageTypeName, authTokenType, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n      if (authState) {\n        _jsCookie.default.set(this.stateStorageName, JSON.stringify(authState), {\n          expires: expiresAt,\n          domain: this.cookieDomain,\n          secure: this.cookieSecure\n        });\n      }\n    } else {\n      window.localStorage.setItem(this.authStorageName, authToken);\n      window.localStorage.setItem(this.authStorageTypeName, authTokenType);\n      if (authState) {\n        window.localStorage.setItem(this.stateStorageName, JSON.stringify(authState));\n      }\n    }\n  };\n  setRefreshToken = refreshToken => {\n    if (this.authStorageType === 'cookie') {\n      if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n        const refreshTokenExpiresAt = this.getExpireDateTime(refreshToken);\n        _jsCookie.default.set(this.refreshTokenName, refreshToken, {\n          expires: refreshTokenExpiresAt,\n          domain: this.cookieDomain,\n          secure: this.cookieSecure\n        });\n      }\n    } else if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n      localStorage.setItem(this.refreshTokenName, refreshToken);\n    }\n  };\n  removeAllToken = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeAllCookieToken_();\n    } else {\n      this.removeAllLSToken_();\n    }\n  };\n  removeAllCookieToken_ = () => {\n    _jsCookie.default.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      _jsCookie.default.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  removeAllLSToken_ = () => {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n  };\n  removeAuth = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeAuthCookie();\n    } else {\n      this.removeAuthToken();\n    }\n  };\n  removeAuthCookie = () => {\n    _jsCookie.default.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n  };\n  removeAuthToken = () => {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n  };\n  removeRefresh = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeRefreshCookie();\n    } else {\n      this.removeRefreshLocalStorage();\n    }\n  };\n  removeRefreshCookie = () => {\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      _jsCookie.default.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  removeRefreshLocalStorage = () => {\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n  };\n  log = (msg, ...optionalParams) => {\n    if (this.debug) {\n      console.log(`[Auth Kit] - ${msg}`, optionalParams);\n    }\n  };\n}\nvar _default = exports.default = TokenObject;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_jsCookie","_interopRequireDefault","require","_rxjs","_errors","obj","__esModule","TokenObject","constructor","authStorageName","authStorageType","refreshTokenName","debug","cookieDomain","cookieSecure","stateStorageName","authStorageTypeName","isUsingRefreshToken","authValue","initialToken_","authSubject","BehaviorSubject","log","subscribe","next","syncTokens","error","complete","set","data","console","dir","userState","undefined","auth","exp","getExpireDateTime","token","Date","type","isSignIn","AuthError","e","refresh","refreshExpireTime","initialCookieToken_","initialLSToken_","authToken","get","authTokenType","stateCookie","refreshToken","checkTokenExist_","localStorage","getItem","refreshTokenExpiresAt","expiresAt","removeAllToken","authState","JSON","parse","replaceAll","err","removeAuth","parseJwt","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","jwtData","prototype","hasOwnProperty","call","d","setUTCSeconds","setAuthToken","setRefreshToken","removeRefresh","expires","domain","secure","stringify","window","setItem","removeAllCookieToken_","removeAllLSToken_","remove","removeItem","removeAuthCookie","removeAuthToken","removeRefreshCookie","removeRefreshLocalStorage","msg","optionalParams","_default"],"sources":["C:/Users/david/wordle-clone/Client/node_modules/react-auth-kit/RxTokenObject.js"],"sourcesContent":["\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\nvar _rxjs = require(\"rxjs\");\nvar _errors = require(\"./errors\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nclass TokenObject {\n  constructor(authStorageName, authStorageType, refreshTokenName, debug, cookieDomain, cookieSecure) {\n    this.authStorageName = authStorageName;\n    this.authStorageType = authStorageType;\n    this.stateStorageName = `${authStorageName}_state`;\n    this.refreshTokenName = refreshTokenName;\n    this.cookieDomain = cookieDomain;\n    this.cookieSecure = cookieSecure;\n    this.debug = debug;\n    this.authStorageTypeName = `${this.authStorageName}_type`;\n    this.isUsingRefreshToken = !!this.refreshTokenName;\n    this.authValue = this.initialToken_();\n    this.authSubject = new _rxjs.BehaviorSubject(this.authValue);\n    this.log(`[Auth Kit] - Initial Value ${this.authValue}`);\n    this.authSubject.subscribe({\n      next: this.syncTokens\n    });\n  }\n  subscribe = (next, error, complete) => {\n    this.authSubject.subscribe({\n      next: next,\n      error: error,\n      complete: complete\n    });\n  };\n  set = data => {\n    this.log(`Set Function is called with`);\n    if (this.debug) {\n      console.dir(data);\n    }\n    this.log(`Set Function Old Data`);\n    if (this.debug) {\n      console.dir(this.value);\n    }\n    let obj = this.value;\n    if (data.userState !== undefined) {\n      obj.userState = data.userState;\n    }\n    if (data.auth) {\n      try {\n        const exp = this.getExpireDateTime(data.auth.token);\n        if (exp > new Date()) {\n          obj = {\n            ...obj,\n            auth: {\n              'token': data.auth.token,\n              'type': data.auth.type,\n              'expiresAt': exp\n            },\n            isSignIn: true\n          };\n        } else {\n          obj = {\n            ...obj,\n            auth: null,\n            isSignIn: false,\n            userState: null\n          };\n          new _errors.AuthError('Given Auth Token is already expired.');\n        }\n      } catch (e) {\n        obj = {\n          ...obj,\n          auth: null,\n          isSignIn: false,\n          userState: null\n        };\n        new _errors.AuthError('Error pursing the Auth Token. Make sure you provided a valid JWT.');\n      }\n    } else if (data.auth === null) {\n      obj = {\n        ...obj,\n        auth: null,\n        isSignIn: false,\n        userState: null\n      };\n    }\n    if (this.isUsingRefreshToken) {\n      if (obj.auth === null) {\n        obj = {\n          ...obj,\n          refresh: null\n        };\n      } else if (data.refresh) {\n        try {\n          const refreshExpireTime = this.getExpireDateTime(data.refresh);\n          if (refreshExpireTime > new Date()) {\n            obj = {\n              ...obj,\n              refresh: {\n                'token': data.refresh,\n                'expiresAt': refreshExpireTime\n              }\n            };\n          } else {\n            obj = {\n              ...obj,\n              auth: null,\n              isSignIn: false,\n              userState: null,\n              refresh: null\n            };\n            new _errors.AuthError('Given Refresh Token is already expired.');\n          }\n        } catch (e) {\n          obj = {\n            ...obj,\n            auth: null,\n            isSignIn: false,\n            userState: null,\n            refresh: null\n          };\n          new _errors.AuthError('Error pursing the Auth Token.' + ' Make sure you provided a valid JWT.');\n        }\n      } else if (data.refresh === null) {\n        obj = {\n          ...obj,\n          refresh: null\n        };\n      }\n    }\n    this.log(`[Auth Kit] - Set Function New Data`);\n    this.log(obj);\n    this.authValue = obj;\n    this.authSubject.next(obj);\n  };\n  get value() {\n    return this.authSubject.value;\n  }\n  initialToken_ = () => {\n    if (this.authStorageType === 'cookie') {\n      return this.initialCookieToken_();\n    } else {\n      return this.initialLSToken_();\n    }\n  };\n  initialCookieToken_ = () => {\n    const authToken = _jsCookie.default.get(this.authStorageName);\n    const authTokenType = _jsCookie.default.get(this.authStorageTypeName);\n    const stateCookie = _jsCookie.default.get(this.stateStorageName);\n    const refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? _jsCookie.default.get(this.refreshTokenName) : null;\n    return this.checkTokenExist_(authToken, authTokenType, stateCookie, refreshToken);\n  };\n  initialLSToken_ = () => {\n    const authToken = localStorage.getItem(this.authStorageName);\n    const authTokenType = localStorage.getItem(this.authStorageTypeName);\n    const stateCookie = localStorage.getItem(this.stateStorageName);\n    const refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? localStorage.getItem(this.refreshTokenName) : null;\n    return this.checkTokenExist_(authToken, authTokenType, stateCookie, refreshToken);\n  };\n  checkTokenExist_ = (authToken, authTokenType, stateCookie, refreshToken) => {\n    this.log('checkTokenExist_ is called');\n    this.log(`Params: authToken: ${authToken}, authTokenType: ${authTokenType},\n      stateCookie: ${stateCookie}, refreshToken: ${refreshToken}`);\n    try {\n      let refresh;\n      if (this.isUsingRefreshToken && !!refreshToken) {\n        this.log(`checkTokenExist - isUsingRefreshToken\n          = ${this.isUsingRefreshToken} refrehToken - ${refreshToken}`);\n        const refreshTokenExpiresAt = this.getExpireDateTime(refreshToken);\n        if (refreshTokenExpiresAt < new Date()) {\n          this.log(`checkTokenExist - refresh token is expired \n            ${refreshTokenExpiresAt} ${new Date()}`);\n          refresh = null;\n        } else {\n          this.log(`checkTokenExist - new refresh token is assigned \n            ${refreshToken}`);\n          refresh = {\n            token: refreshToken,\n            expiresAt: refreshTokenExpiresAt\n          };\n        }\n      } else {\n        this.log(`checkTokenExist - Refesh Token is invalid or not using\n           refresh feature ${this.isUsingRefreshToken} ${refreshToken}`);\n        refresh = null;\n      }\n      if (this.isUsingRefreshToken && !refresh) {\n        this.log(`checkTokenExist - Removing Refresh Token`);\n        this.removeAllToken();\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      }\n      let auth;\n      let authState;\n      if (!!authToken && !!authTokenType && !!stateCookie) {\n        this.log(`checkTokenExist - authToken, authTokenType, stateCookie exists`);\n        try {\n          const expiresAt = this.getExpireDateTime(authToken);\n          if (expiresAt < new Date()) {\n            this.log(`checkTokenExist - auth token is expired \n              ${expiresAt} ${new Date()}`);\n            auth = null;\n            authState = null;\n          } else {\n            try {\n              authState = JSON.parse(stateCookie.replaceAll('\\\\', ''));\n              auth = {\n                token: authToken,\n                type: authTokenType,\n                expiresAt: expiresAt\n              };\n            } catch (err) {\n              this.log('state cookie JSON parsing failed');\n              this.log(err);\n              auth = null;\n              authState = null;\n            }\n          }\n        } catch (e) {\n          this.log(`checkTokenExist - auth token or auth state is invalid \n            ${authToken} ${stateCookie}`);\n          this.log(e);\n          auth = null;\n          authState = null;\n        }\n      } else {\n        this.log(`checkTokenExist ` + `- authToken, authTokenType, stateCookie doesn't exists`);\n        auth = null;\n        authState = null;\n      }\n      if (refresh) {\n        if (!!auth && !!authState) {\n          this.log('checkTokenExist - Returning auth and refrsh');\n          this.log({\n            auth: auth,\n            refresh: refresh,\n            userState: authState,\n            isUsingRefreshToken: this.isUsingRefreshToken,\n            isSignIn: true\n          });\n          return {\n            auth: auth,\n            refresh: refresh,\n            userState: authState,\n            isUsingRefreshToken: this.isUsingRefreshToken,\n            isSignIn: true\n          };\n        }\n        this.log('checkTokenExist - Removing Auth Token');\n        this.removeAuth();\n        this.log({\n          auth: null,\n          refresh: refresh,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        });\n        return {\n          auth: null,\n          refresh: refresh,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      } else if (!this.isUsingRefreshToken && !!auth && !!authState) {\n        this.log('checkTokenExist - Returning auth');\n        this.log({\n          auth: auth,\n          refresh: null,\n          userState: authState,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: true\n        });\n        return {\n          auth: auth,\n          refresh: null,\n          userState: authState,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: true\n        };\n      }\n      {\n        this.log('checkTokenExist- removing all tokens. Returning null');\n        this.removeAllToken();\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      }\n    } catch (e) {\n      this.removeAllToken();\n      return {\n        auth: null,\n        refresh: null,\n        userState: null,\n        isUsingRefreshToken: this.isUsingRefreshToken,\n        isSignIn: false\n      };\n    }\n  };\n  parseJwt = token => {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  };\n  getExpireDateTime = token => {\n    const jwtData = this.parseJwt(token);\n    if (Object.prototype.hasOwnProperty.call(jwtData, 'exp')) {\n      const d = new Date(0);\n      d.setUTCSeconds(jwtData.exp);\n      return d;\n    } else {\n      throw new _errors.AuthError('JWT has no exp param');\n    }\n  };\n  syncTokens = authState => {\n    if (authState.auth) {\n      this.setAuthToken(authState.auth.token, authState.auth.type, authState.userState);\n    } else {\n      this.removeAuth();\n    }\n    if (!!authState.refresh && this.isUsingRefreshToken) {\n      this.setRefreshToken(authState.refresh.token);\n    } else {\n      this.removeRefresh();\n    }\n  };\n  setAuthToken = (authToken, authTokenType, authState) => {\n    if (this.authStorageType === 'cookie') {\n      const expiresAt = this.getExpireDateTime(authToken);\n      _jsCookie.default.set(this.authStorageName, authToken, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n      _jsCookie.default.set(this.authStorageTypeName, authTokenType, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n      if (authState) {\n        _jsCookie.default.set(this.stateStorageName, JSON.stringify(authState), {\n          expires: expiresAt,\n          domain: this.cookieDomain,\n          secure: this.cookieSecure\n        });\n      }\n    } else {\n      window.localStorage.setItem(this.authStorageName, authToken);\n      window.localStorage.setItem(this.authStorageTypeName, authTokenType);\n      if (authState) {\n        window.localStorage.setItem(this.stateStorageName, JSON.stringify(authState));\n      }\n    }\n  };\n  setRefreshToken = refreshToken => {\n    if (this.authStorageType === 'cookie') {\n      if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n        const refreshTokenExpiresAt = this.getExpireDateTime(refreshToken);\n        _jsCookie.default.set(this.refreshTokenName, refreshToken, {\n          expires: refreshTokenExpiresAt,\n          domain: this.cookieDomain,\n          secure: this.cookieSecure\n        });\n      }\n    } else if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n      localStorage.setItem(this.refreshTokenName, refreshToken);\n    }\n  };\n  removeAllToken = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeAllCookieToken_();\n    } else {\n      this.removeAllLSToken_();\n    }\n  };\n  removeAllCookieToken_ = () => {\n    _jsCookie.default.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      _jsCookie.default.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  removeAllLSToken_ = () => {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n  };\n  removeAuth = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeAuthCookie();\n    } else {\n      this.removeAuthToken();\n    }\n  };\n  removeAuthCookie = () => {\n    _jsCookie.default.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    _jsCookie.default.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n  };\n  removeAuthToken = () => {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n  };\n  removeRefresh = () => {\n    if (this.authStorageType === 'cookie') {\n      this.removeRefreshCookie();\n    } else {\n      this.removeRefreshLocalStorage();\n    }\n  };\n  removeRefreshCookie = () => {\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      _jsCookie.default.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  removeRefreshLocalStorage = () => {\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n  };\n  log = (msg, ...optionalParams) => {\n    if (this.debug) {\n      console.log(`[Auth Kit] - ${msg}`, optionalParams);\n    }\n  };\n}\nvar _default = exports.default = TokenObject;"],"mappings":"AAAA,YAAY;AACZ,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,SAAS,GAAGC,sBAAsB,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;AAC5D,IAAIC,KAAK,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC3B,IAAIE,OAAO,GAAGF,OAAO,CAAC,UAAU,CAAC;AACjC,SAASD,sBAAsBA,CAACI,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEN,OAAO,EAAEM;EAAI,CAAC;AAAE;AAC9F,MAAME,WAAW,CAAC;EAChBC,WAAWA,CAACC,eAAe,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,YAAY,EAAEC,YAAY,EAAE;IACjG,IAAI,CAACL,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACK,gBAAgB,GAAG,GAAGN,eAAe,QAAQ;IAClD,IAAI,CAACE,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACE,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACI,mBAAmB,GAAG,GAAG,IAAI,CAACP,eAAe,OAAO;IACzD,IAAI,CAACQ,mBAAmB,GAAG,CAAC,CAAC,IAAI,CAACN,gBAAgB;IAClD,IAAI,CAACO,SAAS,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;IACrC,IAAI,CAACC,WAAW,GAAG,IAAIjB,KAAK,CAACkB,eAAe,CAAC,IAAI,CAACH,SAAS,CAAC;IAC5D,IAAI,CAACI,GAAG,CAAC,8BAA8B,IAAI,CAACJ,SAAS,EAAE,CAAC;IACxD,IAAI,CAACE,WAAW,CAACG,SAAS,CAAC;MACzBC,IAAI,EAAE,IAAI,CAACC;IACb,CAAC,CAAC;EACJ;EACAF,SAAS,GAAGA,CAACC,IAAI,EAAEE,KAAK,EAAEC,QAAQ,KAAK;IACrC,IAAI,CAACP,WAAW,CAACG,SAAS,CAAC;MACzBC,IAAI,EAAEA,IAAI;MACVE,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACZ,CAAC,CAAC;EACJ,CAAC;EACDC,GAAG,GAAGC,IAAI,IAAI;IACZ,IAAI,CAACP,GAAG,CAAC,6BAA6B,CAAC;IACvC,IAAI,IAAI,CAACV,KAAK,EAAE;MACdkB,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB;IACA,IAAI,CAACP,GAAG,CAAC,uBAAuB,CAAC;IACjC,IAAI,IAAI,CAACV,KAAK,EAAE;MACdkB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjC,KAAK,CAAC;IACzB;IACA,IAAIO,GAAG,GAAG,IAAI,CAACP,KAAK;IACpB,IAAI+B,IAAI,CAACG,SAAS,KAAKC,SAAS,EAAE;MAChC5B,GAAG,CAAC2B,SAAS,GAAGH,IAAI,CAACG,SAAS;IAChC;IACA,IAAIH,IAAI,CAACK,IAAI,EAAE;MACb,IAAI;QACF,MAAMC,GAAG,GAAG,IAAI,CAACC,iBAAiB,CAACP,IAAI,CAACK,IAAI,CAACG,KAAK,CAAC;QACnD,IAAIF,GAAG,GAAG,IAAIG,IAAI,CAAC,CAAC,EAAE;UACpBjC,GAAG,GAAG;YACJ,GAAGA,GAAG;YACN6B,IAAI,EAAE;cACJ,OAAO,EAAEL,IAAI,CAACK,IAAI,CAACG,KAAK;cACxB,MAAM,EAAER,IAAI,CAACK,IAAI,CAACK,IAAI;cACtB,WAAW,EAAEJ;YACf,CAAC;YACDK,QAAQ,EAAE;UACZ,CAAC;QACH,CAAC,MAAM;UACLnC,GAAG,GAAG;YACJ,GAAGA,GAAG;YACN6B,IAAI,EAAE,IAAI;YACVM,QAAQ,EAAE,KAAK;YACfR,SAAS,EAAE;UACb,CAAC;UACD,IAAI5B,OAAO,CAACqC,SAAS,CAAC,sCAAsC,CAAC;QAC/D;MACF,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVrC,GAAG,GAAG;UACJ,GAAGA,GAAG;UACN6B,IAAI,EAAE,IAAI;UACVM,QAAQ,EAAE,KAAK;UACfR,SAAS,EAAE;QACb,CAAC;QACD,IAAI5B,OAAO,CAACqC,SAAS,CAAC,mEAAmE,CAAC;MAC5F;IACF,CAAC,MAAM,IAAIZ,IAAI,CAACK,IAAI,KAAK,IAAI,EAAE;MAC7B7B,GAAG,GAAG;QACJ,GAAGA,GAAG;QACN6B,IAAI,EAAE,IAAI;QACVM,QAAQ,EAAE,KAAK;QACfR,SAAS,EAAE;MACb,CAAC;IACH;IACA,IAAI,IAAI,CAACf,mBAAmB,EAAE;MAC5B,IAAIZ,GAAG,CAAC6B,IAAI,KAAK,IAAI,EAAE;QACrB7B,GAAG,GAAG;UACJ,GAAGA,GAAG;UACNsC,OAAO,EAAE;QACX,CAAC;MACH,CAAC,MAAM,IAAId,IAAI,CAACc,OAAO,EAAE;QACvB,IAAI;UACF,MAAMC,iBAAiB,GAAG,IAAI,CAACR,iBAAiB,CAACP,IAAI,CAACc,OAAO,CAAC;UAC9D,IAAIC,iBAAiB,GAAG,IAAIN,IAAI,CAAC,CAAC,EAAE;YAClCjC,GAAG,GAAG;cACJ,GAAGA,GAAG;cACNsC,OAAO,EAAE;gBACP,OAAO,EAAEd,IAAI,CAACc,OAAO;gBACrB,WAAW,EAAEC;cACf;YACF,CAAC;UACH,CAAC,MAAM;YACLvC,GAAG,GAAG;cACJ,GAAGA,GAAG;cACN6B,IAAI,EAAE,IAAI;cACVM,QAAQ,EAAE,KAAK;cACfR,SAAS,EAAE,IAAI;cACfW,OAAO,EAAE;YACX,CAAC;YACD,IAAIvC,OAAO,CAACqC,SAAS,CAAC,yCAAyC,CAAC;UAClE;QACF,CAAC,CAAC,OAAOC,CAAC,EAAE;UACVrC,GAAG,GAAG;YACJ,GAAGA,GAAG;YACN6B,IAAI,EAAE,IAAI;YACVM,QAAQ,EAAE,KAAK;YACfR,SAAS,EAAE,IAAI;YACfW,OAAO,EAAE;UACX,CAAC;UACD,IAAIvC,OAAO,CAACqC,SAAS,CAAC,+BAA+B,GAAG,sCAAsC,CAAC;QACjG;MACF,CAAC,MAAM,IAAIZ,IAAI,CAACc,OAAO,KAAK,IAAI,EAAE;QAChCtC,GAAG,GAAG;UACJ,GAAGA,GAAG;UACNsC,OAAO,EAAE;QACX,CAAC;MACH;IACF;IACA,IAAI,CAACrB,GAAG,CAAC,oCAAoC,CAAC;IAC9C,IAAI,CAACA,GAAG,CAACjB,GAAG,CAAC;IACb,IAAI,CAACa,SAAS,GAAGb,GAAG;IACpB,IAAI,CAACe,WAAW,CAACI,IAAI,CAACnB,GAAG,CAAC;EAC5B,CAAC;EACD,IAAIP,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACsB,WAAW,CAACtB,KAAK;EAC/B;EACAqB,aAAa,GAAGA,CAAA,KAAM;IACpB,IAAI,IAAI,CAACT,eAAe,KAAK,QAAQ,EAAE;MACrC,OAAO,IAAI,CAACmC,mBAAmB,CAAC,CAAC;IACnC,CAAC,MAAM;MACL,OAAO,IAAI,CAACC,eAAe,CAAC,CAAC;IAC/B;EACF,CAAC;EACDD,mBAAmB,GAAGA,CAAA,KAAM;IAC1B,MAAME,SAAS,GAAG/C,SAAS,CAACD,OAAO,CAACiD,GAAG,CAAC,IAAI,CAACvC,eAAe,CAAC;IAC7D,MAAMwC,aAAa,GAAGjD,SAAS,CAACD,OAAO,CAACiD,GAAG,CAAC,IAAI,CAAChC,mBAAmB,CAAC;IACrE,MAAMkC,WAAW,GAAGlD,SAAS,CAACD,OAAO,CAACiD,GAAG,CAAC,IAAI,CAACjC,gBAAgB,CAAC;IAChE,MAAMoC,YAAY,GAAG,IAAI,CAAClC,mBAAmB,IAAI,IAAI,CAACN,gBAAgB,IAAI,IAAI,GAAGX,SAAS,CAACD,OAAO,CAACiD,GAAG,CAAC,IAAI,CAACrC,gBAAgB,CAAC,GAAG,IAAI;IACpI,OAAO,IAAI,CAACyC,gBAAgB,CAACL,SAAS,EAAEE,aAAa,EAAEC,WAAW,EAAEC,YAAY,CAAC;EACnF,CAAC;EACDL,eAAe,GAAGA,CAAA,KAAM;IACtB,MAAMC,SAAS,GAAGM,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC7C,eAAe,CAAC;IAC5D,MAAMwC,aAAa,GAAGI,YAAY,CAACC,OAAO,CAAC,IAAI,CAACtC,mBAAmB,CAAC;IACpE,MAAMkC,WAAW,GAAGG,YAAY,CAACC,OAAO,CAAC,IAAI,CAACvC,gBAAgB,CAAC;IAC/D,MAAMoC,YAAY,GAAG,IAAI,CAAClC,mBAAmB,IAAI,IAAI,CAACN,gBAAgB,IAAI,IAAI,GAAG0C,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC3C,gBAAgB,CAAC,GAAG,IAAI;IACnI,OAAO,IAAI,CAACyC,gBAAgB,CAACL,SAAS,EAAEE,aAAa,EAAEC,WAAW,EAAEC,YAAY,CAAC;EACnF,CAAC;EACDC,gBAAgB,GAAGA,CAACL,SAAS,EAAEE,aAAa,EAAEC,WAAW,EAAEC,YAAY,KAAK;IAC1E,IAAI,CAAC7B,GAAG,CAAC,4BAA4B,CAAC;IACtC,IAAI,CAACA,GAAG,CAAC,sBAAsByB,SAAS,oBAAoBE,aAAa;AAC7E,qBAAqBC,WAAW,mBAAmBC,YAAY,EAAE,CAAC;IAC9D,IAAI;MACF,IAAIR,OAAO;MACX,IAAI,IAAI,CAAC1B,mBAAmB,IAAI,CAAC,CAACkC,YAAY,EAAE;QAC9C,IAAI,CAAC7B,GAAG,CAAC;AACjB,cAAc,IAAI,CAACL,mBAAmB,kBAAkBkC,YAAY,EAAE,CAAC;QAC/D,MAAMI,qBAAqB,GAAG,IAAI,CAACnB,iBAAiB,CAACe,YAAY,CAAC;QAClE,IAAII,qBAAqB,GAAG,IAAIjB,IAAI,CAAC,CAAC,EAAE;UACtC,IAAI,CAAChB,GAAG,CAAC;AACnB,cAAciC,qBAAqB,IAAI,IAAIjB,IAAI,CAAC,CAAC,EAAE,CAAC;UAC1CK,OAAO,GAAG,IAAI;QAChB,CAAC,MAAM;UACL,IAAI,CAACrB,GAAG,CAAC;AACnB,cAAc6B,YAAY,EAAE,CAAC;UACnBR,OAAO,GAAG;YACRN,KAAK,EAAEc,YAAY;YACnBK,SAAS,EAAED;UACb,CAAC;QACH;MACF,CAAC,MAAM;QACL,IAAI,CAACjC,GAAG,CAAC;AACjB,6BAA6B,IAAI,CAACL,mBAAmB,IAAIkC,YAAY,EAAE,CAAC;QAChER,OAAO,GAAG,IAAI;MAChB;MACA,IAAI,IAAI,CAAC1B,mBAAmB,IAAI,CAAC0B,OAAO,EAAE;QACxC,IAAI,CAACrB,GAAG,CAAC,0CAA0C,CAAC;QACpD,IAAI,CAACmC,cAAc,CAAC,CAAC;QACrB,OAAO;UACLvB,IAAI,EAAE,IAAI;UACVS,OAAO,EAAE,IAAI;UACbX,SAAS,EAAE,IAAI;UACff,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;UAC7CuB,QAAQ,EAAE;QACZ,CAAC;MACH;MACA,IAAIN,IAAI;MACR,IAAIwB,SAAS;MACb,IAAI,CAAC,CAACX,SAAS,IAAI,CAAC,CAACE,aAAa,IAAI,CAAC,CAACC,WAAW,EAAE;QACnD,IAAI,CAAC5B,GAAG,CAAC,gEAAgE,CAAC;QAC1E,IAAI;UACF,MAAMkC,SAAS,GAAG,IAAI,CAACpB,iBAAiB,CAACW,SAAS,CAAC;UACnD,IAAIS,SAAS,GAAG,IAAIlB,IAAI,CAAC,CAAC,EAAE;YAC1B,IAAI,CAAChB,GAAG,CAAC;AACrB,gBAAgBkC,SAAS,IAAI,IAAIlB,IAAI,CAAC,CAAC,EAAE,CAAC;YAC9BJ,IAAI,GAAG,IAAI;YACXwB,SAAS,GAAG,IAAI;UAClB,CAAC,MAAM;YACL,IAAI;cACFA,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACV,WAAW,CAACW,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;cACxD3B,IAAI,GAAG;gBACLG,KAAK,EAAEU,SAAS;gBAChBR,IAAI,EAAEU,aAAa;gBACnBO,SAAS,EAAEA;cACb,CAAC;YACH,CAAC,CAAC,OAAOM,GAAG,EAAE;cACZ,IAAI,CAACxC,GAAG,CAAC,kCAAkC,CAAC;cAC5C,IAAI,CAACA,GAAG,CAACwC,GAAG,CAAC;cACb5B,IAAI,GAAG,IAAI;cACXwB,SAAS,GAAG,IAAI;YAClB;UACF;QACF,CAAC,CAAC,OAAOhB,CAAC,EAAE;UACV,IAAI,CAACpB,GAAG,CAAC;AACnB,cAAcyB,SAAS,IAAIG,WAAW,EAAE,CAAC;UAC/B,IAAI,CAAC5B,GAAG,CAACoB,CAAC,CAAC;UACXR,IAAI,GAAG,IAAI;UACXwB,SAAS,GAAG,IAAI;QAClB;MACF,CAAC,MAAM;QACL,IAAI,CAACpC,GAAG,CAAC,kBAAkB,GAAG,wDAAwD,CAAC;QACvFY,IAAI,GAAG,IAAI;QACXwB,SAAS,GAAG,IAAI;MAClB;MACA,IAAIf,OAAO,EAAE;QACX,IAAI,CAAC,CAACT,IAAI,IAAI,CAAC,CAACwB,SAAS,EAAE;UACzB,IAAI,CAACpC,GAAG,CAAC,6CAA6C,CAAC;UACvD,IAAI,CAACA,GAAG,CAAC;YACPY,IAAI,EAAEA,IAAI;YACVS,OAAO,EAAEA,OAAO;YAChBX,SAAS,EAAE0B,SAAS;YACpBzC,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;YAC7CuB,QAAQ,EAAE;UACZ,CAAC,CAAC;UACF,OAAO;YACLN,IAAI,EAAEA,IAAI;YACVS,OAAO,EAAEA,OAAO;YAChBX,SAAS,EAAE0B,SAAS;YACpBzC,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;YAC7CuB,QAAQ,EAAE;UACZ,CAAC;QACH;QACA,IAAI,CAAClB,GAAG,CAAC,uCAAuC,CAAC;QACjD,IAAI,CAACyC,UAAU,CAAC,CAAC;QACjB,IAAI,CAACzC,GAAG,CAAC;UACPY,IAAI,EAAE,IAAI;UACVS,OAAO,EAAEA,OAAO;UAChBX,SAAS,EAAE,IAAI;UACff,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;UAC7CuB,QAAQ,EAAE;QACZ,CAAC,CAAC;QACF,OAAO;UACLN,IAAI,EAAE,IAAI;UACVS,OAAO,EAAEA,OAAO;UAChBX,SAAS,EAAE,IAAI;UACff,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;UAC7CuB,QAAQ,EAAE;QACZ,CAAC;MACH,CAAC,MAAM,IAAI,CAAC,IAAI,CAACvB,mBAAmB,IAAI,CAAC,CAACiB,IAAI,IAAI,CAAC,CAACwB,SAAS,EAAE;QAC7D,IAAI,CAACpC,GAAG,CAAC,kCAAkC,CAAC;QAC5C,IAAI,CAACA,GAAG,CAAC;UACPY,IAAI,EAAEA,IAAI;UACVS,OAAO,EAAE,IAAI;UACbX,SAAS,EAAE0B,SAAS;UACpBzC,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;UAC7CuB,QAAQ,EAAE;QACZ,CAAC,CAAC;QACF,OAAO;UACLN,IAAI,EAAEA,IAAI;UACVS,OAAO,EAAE,IAAI;UACbX,SAAS,EAAE0B,SAAS;UACpBzC,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;UAC7CuB,QAAQ,EAAE;QACZ,CAAC;MACH;MACA;QACE,IAAI,CAAClB,GAAG,CAAC,sDAAsD,CAAC;QAChE,IAAI,CAACmC,cAAc,CAAC,CAAC;QACrB,OAAO;UACLvB,IAAI,EAAE,IAAI;UACVS,OAAO,EAAE,IAAI;UACbX,SAAS,EAAE,IAAI;UACff,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;UAC7CuB,QAAQ,EAAE;QACZ,CAAC;MACH;IACF,CAAC,CAAC,OAAOE,CAAC,EAAE;MACV,IAAI,CAACe,cAAc,CAAC,CAAC;MACrB,OAAO;QACLvB,IAAI,EAAE,IAAI;QACVS,OAAO,EAAE,IAAI;QACbX,SAAS,EAAE,IAAI;QACff,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;QAC7CuB,QAAQ,EAAE;MACZ,CAAC;IACH;EACF,CAAC;EACDwB,QAAQ,GAAG3B,KAAK,IAAI;IAClB,MAAM4B,SAAS,GAAG5B,KAAK,CAAC6B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrC,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;IAC9D,MAAMC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACD,KAAK,CAAC,EAAE,CAAC,CAACM,GAAG,CAAC,UAAUC,CAAC,EAAE;MAC7E,OAAO,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;IACZ,OAAOlB,IAAI,CAACC,KAAK,CAACS,WAAW,CAAC;EAChC,CAAC;EACDjC,iBAAiB,GAAGC,KAAK,IAAI;IAC3B,MAAMyC,OAAO,GAAG,IAAI,CAACd,QAAQ,CAAC3B,KAAK,CAAC;IACpC,IAAI1C,MAAM,CAACoF,SAAS,CAACC,cAAc,CAACC,IAAI,CAACH,OAAO,EAAE,KAAK,CAAC,EAAE;MACxD,MAAMI,CAAC,GAAG,IAAI5C,IAAI,CAAC,CAAC,CAAC;MACrB4C,CAAC,CAACC,aAAa,CAACL,OAAO,CAAC3C,GAAG,CAAC;MAC5B,OAAO+C,CAAC;IACV,CAAC,MAAM;MACL,MAAM,IAAI9E,OAAO,CAACqC,SAAS,CAAC,sBAAsB,CAAC;IACrD;EACF,CAAC;EACDhB,UAAU,GAAGiC,SAAS,IAAI;IACxB,IAAIA,SAAS,CAACxB,IAAI,EAAE;MAClB,IAAI,CAACkD,YAAY,CAAC1B,SAAS,CAACxB,IAAI,CAACG,KAAK,EAAEqB,SAAS,CAACxB,IAAI,CAACK,IAAI,EAAEmB,SAAS,CAAC1B,SAAS,CAAC;IACnF,CAAC,MAAM;MACL,IAAI,CAAC+B,UAAU,CAAC,CAAC;IACnB;IACA,IAAI,CAAC,CAACL,SAAS,CAACf,OAAO,IAAI,IAAI,CAAC1B,mBAAmB,EAAE;MACnD,IAAI,CAACoE,eAAe,CAAC3B,SAAS,CAACf,OAAO,CAACN,KAAK,CAAC;IAC/C,CAAC,MAAM;MACL,IAAI,CAACiD,aAAa,CAAC,CAAC;IACtB;EACF,CAAC;EACDF,YAAY,GAAGA,CAACrC,SAAS,EAAEE,aAAa,EAAES,SAAS,KAAK;IACtD,IAAI,IAAI,CAAChD,eAAe,KAAK,QAAQ,EAAE;MACrC,MAAM8C,SAAS,GAAG,IAAI,CAACpB,iBAAiB,CAACW,SAAS,CAAC;MACnD/C,SAAS,CAACD,OAAO,CAAC6B,GAAG,CAAC,IAAI,CAACnB,eAAe,EAAEsC,SAAS,EAAE;QACrDwC,OAAO,EAAE/B,SAAS;QAClBgC,MAAM,EAAE,IAAI,CAAC3E,YAAY;QACzB4E,MAAM,EAAE,IAAI,CAAC3E;MACf,CAAC,CAAC;MACFd,SAAS,CAACD,OAAO,CAAC6B,GAAG,CAAC,IAAI,CAACZ,mBAAmB,EAAEiC,aAAa,EAAE;QAC7DsC,OAAO,EAAE/B,SAAS;QAClBgC,MAAM,EAAE,IAAI,CAAC3E,YAAY;QACzB4E,MAAM,EAAE,IAAI,CAAC3E;MACf,CAAC,CAAC;MACF,IAAI4C,SAAS,EAAE;QACb1D,SAAS,CAACD,OAAO,CAAC6B,GAAG,CAAC,IAAI,CAACb,gBAAgB,EAAE4C,IAAI,CAAC+B,SAAS,CAAChC,SAAS,CAAC,EAAE;UACtE6B,OAAO,EAAE/B,SAAS;UAClBgC,MAAM,EAAE,IAAI,CAAC3E,YAAY;UACzB4E,MAAM,EAAE,IAAI,CAAC3E;QACf,CAAC,CAAC;MACJ;IACF,CAAC,MAAM;MACL6E,MAAM,CAACtC,YAAY,CAACuC,OAAO,CAAC,IAAI,CAACnF,eAAe,EAAEsC,SAAS,CAAC;MAC5D4C,MAAM,CAACtC,YAAY,CAACuC,OAAO,CAAC,IAAI,CAAC5E,mBAAmB,EAAEiC,aAAa,CAAC;MACpE,IAAIS,SAAS,EAAE;QACbiC,MAAM,CAACtC,YAAY,CAACuC,OAAO,CAAC,IAAI,CAAC7E,gBAAgB,EAAE4C,IAAI,CAAC+B,SAAS,CAAChC,SAAS,CAAC,CAAC;MAC/E;IACF;EACF,CAAC;EACD2B,eAAe,GAAGlC,YAAY,IAAI;IAChC,IAAI,IAAI,CAACzC,eAAe,KAAK,QAAQ,EAAE;MACrC,IAAI,IAAI,CAACO,mBAAmB,IAAI,CAAC,CAAC,IAAI,CAACN,gBAAgB,IAAI,CAAC,CAACwC,YAAY,EAAE;QACzE,MAAMI,qBAAqB,GAAG,IAAI,CAACnB,iBAAiB,CAACe,YAAY,CAAC;QAClEnD,SAAS,CAACD,OAAO,CAAC6B,GAAG,CAAC,IAAI,CAACjB,gBAAgB,EAAEwC,YAAY,EAAE;UACzDoC,OAAO,EAAEhC,qBAAqB;UAC9BiC,MAAM,EAAE,IAAI,CAAC3E,YAAY;UACzB4E,MAAM,EAAE,IAAI,CAAC3E;QACf,CAAC,CAAC;MACJ;IACF,CAAC,MAAM,IAAI,IAAI,CAACG,mBAAmB,IAAI,CAAC,CAAC,IAAI,CAACN,gBAAgB,IAAI,CAAC,CAACwC,YAAY,EAAE;MAChFE,YAAY,CAACuC,OAAO,CAAC,IAAI,CAACjF,gBAAgB,EAAEwC,YAAY,CAAC;IAC3D;EACF,CAAC;EACDM,cAAc,GAAGA,CAAA,KAAM;IACrB,IAAI,IAAI,CAAC/C,eAAe,KAAK,QAAQ,EAAE;MACrC,IAAI,CAACmF,qBAAqB,CAAC,CAAC;IAC9B,CAAC,MAAM;MACL,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAC1B;EACF,CAAC;EACDD,qBAAqB,GAAGA,CAAA,KAAM;IAC5B7F,SAAS,CAACD,OAAO,CAACgG,MAAM,CAAC,IAAI,CAACtF,eAAe,EAAE;MAC7C+E,MAAM,EAAE,IAAI,CAAC3E,YAAY;MACzB4E,MAAM,EAAE,IAAI,CAAC3E;IACf,CAAC,CAAC;IACFd,SAAS,CAACD,OAAO,CAACgG,MAAM,CAAC,IAAI,CAAC/E,mBAAmB,EAAE;MACjDwE,MAAM,EAAE,IAAI,CAAC3E,YAAY;MACzB4E,MAAM,EAAE,IAAI,CAAC3E;IACf,CAAC,CAAC;IACFd,SAAS,CAACD,OAAO,CAACgG,MAAM,CAAC,IAAI,CAAChF,gBAAgB,EAAE;MAC9CyE,MAAM,EAAE,IAAI,CAAC3E,YAAY;MACzB4E,MAAM,EAAE,IAAI,CAAC3E;IACf,CAAC,CAAC;IACF,IAAI,IAAI,CAACG,mBAAmB,IAAI,CAAC,CAAC,IAAI,CAACN,gBAAgB,EAAE;MACvDX,SAAS,CAACD,OAAO,CAACgG,MAAM,CAAC,IAAI,CAACpF,gBAAgB,EAAE;QAC9C6E,MAAM,EAAE,IAAI,CAAC3E,YAAY;QACzB4E,MAAM,EAAE,IAAI,CAAC3E;MACf,CAAC,CAAC;IACJ;EACF,CAAC;EACDgF,iBAAiB,GAAGA,CAAA,KAAM;IACxBzC,YAAY,CAAC2C,UAAU,CAAC,IAAI,CAACvF,eAAe,CAAC;IAC7C4C,YAAY,CAAC2C,UAAU,CAAC,IAAI,CAAChF,mBAAmB,CAAC;IACjDqC,YAAY,CAAC2C,UAAU,CAAC,IAAI,CAACjF,gBAAgB,CAAC;IAC9C,IAAI,IAAI,CAACE,mBAAmB,IAAI,CAAC,CAAC,IAAI,CAACN,gBAAgB,EAAE;MACvD0C,YAAY,CAAC2C,UAAU,CAAC,IAAI,CAACrF,gBAAgB,CAAC;IAChD;EACF,CAAC;EACDoD,UAAU,GAAGA,CAAA,KAAM;IACjB,IAAI,IAAI,CAACrD,eAAe,KAAK,QAAQ,EAAE;MACrC,IAAI,CAACuF,gBAAgB,CAAC,CAAC;IACzB,CAAC,MAAM;MACL,IAAI,CAACC,eAAe,CAAC,CAAC;IACxB;EACF,CAAC;EACDD,gBAAgB,GAAGA,CAAA,KAAM;IACvBjG,SAAS,CAACD,OAAO,CAACgG,MAAM,CAAC,IAAI,CAACtF,eAAe,EAAE;MAC7C+E,MAAM,EAAE,IAAI,CAAC3E,YAAY;MACzB4E,MAAM,EAAE,IAAI,CAAC3E;IACf,CAAC,CAAC;IACFd,SAAS,CAACD,OAAO,CAACgG,MAAM,CAAC,IAAI,CAAC/E,mBAAmB,EAAE;MACjDwE,MAAM,EAAE,IAAI,CAAC3E,YAAY;MACzB4E,MAAM,EAAE,IAAI,CAAC3E;IACf,CAAC,CAAC;IACFd,SAAS,CAACD,OAAO,CAACgG,MAAM,CAAC,IAAI,CAAChF,gBAAgB,EAAE;MAC9CyE,MAAM,EAAE,IAAI,CAAC3E,YAAY;MACzB4E,MAAM,EAAE,IAAI,CAAC3E;IACf,CAAC,CAAC;EACJ,CAAC;EACDoF,eAAe,GAAGA,CAAA,KAAM;IACtB7C,YAAY,CAAC2C,UAAU,CAAC,IAAI,CAACvF,eAAe,CAAC;IAC7C4C,YAAY,CAAC2C,UAAU,CAAC,IAAI,CAAChF,mBAAmB,CAAC;IACjDqC,YAAY,CAAC2C,UAAU,CAAC,IAAI,CAACjF,gBAAgB,CAAC;EAChD,CAAC;EACDuE,aAAa,GAAGA,CAAA,KAAM;IACpB,IAAI,IAAI,CAAC5E,eAAe,KAAK,QAAQ,EAAE;MACrC,IAAI,CAACyF,mBAAmB,CAAC,CAAC;IAC5B,CAAC,MAAM;MACL,IAAI,CAACC,yBAAyB,CAAC,CAAC;IAClC;EACF,CAAC;EACDD,mBAAmB,GAAGA,CAAA,KAAM;IAC1B,IAAI,IAAI,CAAClF,mBAAmB,IAAI,CAAC,CAAC,IAAI,CAACN,gBAAgB,EAAE;MACvDX,SAAS,CAACD,OAAO,CAACgG,MAAM,CAAC,IAAI,CAACpF,gBAAgB,EAAE;QAC9C6E,MAAM,EAAE,IAAI,CAAC3E,YAAY;QACzB4E,MAAM,EAAE,IAAI,CAAC3E;MACf,CAAC,CAAC;IACJ;EACF,CAAC;EACDsF,yBAAyB,GAAGA,CAAA,KAAM;IAChC,IAAI,IAAI,CAACnF,mBAAmB,IAAI,CAAC,CAAC,IAAI,CAACN,gBAAgB,EAAE;MACvD0C,YAAY,CAAC2C,UAAU,CAAC,IAAI,CAACrF,gBAAgB,CAAC;IAChD;EACF,CAAC;EACDW,GAAG,GAAGA,CAAC+E,GAAG,EAAE,GAAGC,cAAc,KAAK;IAChC,IAAI,IAAI,CAAC1F,KAAK,EAAE;MACdkB,OAAO,CAACR,GAAG,CAAC,gBAAgB+E,GAAG,EAAE,EAAEC,cAAc,CAAC;IACpD;EACF,CAAC;AACH;AACA,IAAIC,QAAQ,GAAG1G,OAAO,CAACE,OAAO,GAAGQ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}