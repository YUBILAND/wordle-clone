{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\wordle-clone\\\\src\\\\components\\\\Keys.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Keyboard from 'react-simple-keyboard';\nimport \"react-simple-keyboard/build/css/index.css\";\nimport './Keys.css';\nimport BackspaceOutlinedIcon from '@mui/icons-material/BackspaceOutlined';\nimport inputMask from \"simple-keyboard-input-mask\";\nimport { renderToString } from 'react-dom/server';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Keys = ({\n  colorIn\n}) => {\n  _s();\n  const [word, setWord] = useState('');\n  console.log(word);\n  const change = event => {\n    if (event.target.value.length <= 3 && word.length < 3) {\n      setWord(event.target.value);\n    }\n  };\n  const kbChange = input => {\n    console.log(input);\n  };\n  //   const backspaceIconString = renderToString(<BackspaceOutlinedIcon />);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto w-[500px] mb-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: word\n      //   onChange={change}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n      onChange: kbChange\n      // input => \n\n      // setWord( input.length > word.length ? input : word)}\n      ,\n      modules: [inputMask],\n      inputMask: {\n        default: {\n          mask: '1235',\n          regex: /^[a-zA-Z0-9_-]*$/\n        }\n      },\n      layout: {\n        default: ['q w e r t y u i o p', 'a s d f g h j k l', 'ENTER z x c v b n m DEL']\n      },\n      buttonTheme: [{\n        class: \"buttons\",\n        buttons: 'q w e r t y u i o p a s d f g h j k l ENTER z x c v b n m DEL'\n      }],\n      theme: \"hg-theme-default board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Keys, \"dgb3KQ6Q+AMS0s5B3iC46BecusU=\");\n_c = Keys;\nexport default Keys;\nvar _c;\n$RefreshReg$(_c, \"Keys\");","map":{"version":3,"names":["React","useState","Keyboard","BackspaceOutlinedIcon","inputMask","renderToString","jsxDEV","_jsxDEV","Keys","colorIn","_s","word","setWord","console","log","change","event","target","value","length","kbChange","input","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","onChange","modules","default","mask","regex","layout","buttonTheme","class","buttons","theme","_c","$RefreshReg$"],"sources":["C:/Users/david/wordle-clone/src/components/Keys.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport \"react-simple-keyboard/build/css/index.css\";\r\nimport './Keys.css'\r\nimport BackspaceOutlinedIcon from '@mui/icons-material/BackspaceOutlined';\r\nimport inputMask from \"simple-keyboard-input-mask\";\r\nimport { renderToString } from 'react-dom/server';\r\n\r\nconst Keys = ( {colorIn} ) => {\r\n\r\n  const [word, setWord] = useState('');\r\n  console.log(word)\r\n\r\n  const change = (event) => {\r\n    if (event.target.value.length <= 3 && word.length < 3) {\r\n      setWord(event.target.value);\r\n    }\r\n  }\r\n\r\n  const kbChange = (input) => {\r\n    console.log(input)\r\n  }\r\n//   const backspaceIconString = renderToString(<BackspaceOutlinedIcon />);\r\n\r\n  return (\r\n    <div className='mx-auto w-[500px] mb-2'>\r\n      <input \r\n      type=\"text\"\r\n      value={word}\r\n    //   onChange={change}\r\n      \r\n      />\r\n      \r\n      <Keyboard \r\n      onChange={kbChange}\r\n        // input => \r\n        \r\n        // setWord( input.length > word.length ? input : word)}\r\n      modules = {[inputMask]}\r\n      inputMask ={{\r\n        default: {\r\n          mask: '1235',\r\n          regex: /^[a-zA-Z0-9_-]*$/\r\n        }\r\n      }}\r\n      layout={{\r\n        default : [\r\n          'q w e r t y u i o p',\r\n          'a s d f g h j k l',\r\n          'ENTER z x c v b n m DEL'\r\n        ]\r\n      }}\r\n      buttonTheme={[\r\n        {\r\n          class: \"buttons\",\r\n          buttons: 'q w e r t y u i o p a s d f g h j k l ENTER z x c v b n m DEL'\r\n        }\r\n      ]}\r\n      theme=\"hg-theme-default board\"\r\n      \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Keys"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,2CAA2C;AAClD,OAAO,YAAY;AACnB,OAAOC,qBAAqB,MAAM,uCAAuC;AACzE,OAAOC,SAAS,MAAM,4BAA4B;AAClD,SAASC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,IAAI,GAAGA,CAAE;EAACC;AAAO,CAAC,KAAM;EAAAC,EAAA;EAE5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpCY,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjB,MAAMI,MAAM,GAAIC,KAAK,IAAK;IACxB,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,IAAI,CAAC,IAAIR,IAAI,CAACQ,MAAM,GAAG,CAAC,EAAE;MACrDP,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7B;EACF,CAAC;EAED,MAAME,QAAQ,GAAIC,KAAK,IAAK;IAC1BR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;EACpB,CAAC;EACH;;EAEE,oBACEd,OAAA;IAAKe,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrChB,OAAA;MACAiB,IAAI,EAAC,MAAM;MACXN,KAAK,EAAEP;MACT;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG,CAAC,eAEFrB,OAAA,CAACL,QAAQ;MACT2B,QAAQ,EAAET;MACR;;MAEA;MAAA;MACFU,OAAO,EAAI,CAAC1B,SAAS,CAAE;MACvBA,SAAS,EAAG;QACV2B,OAAO,EAAE;UACPC,IAAI,EAAE,MAAM;UACZC,KAAK,EAAE;QACT;MACF,CAAE;MACFC,MAAM,EAAE;QACNH,OAAO,EAAG,CACR,qBAAqB,EACrB,mBAAmB,EACnB,yBAAyB;MAE7B,CAAE;MACFI,WAAW,EAAE,CACX;QACEC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CACD;MACFC,KAAK,EAAC;IAAwB;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAvDKF,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAyDV,eAAeA,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}