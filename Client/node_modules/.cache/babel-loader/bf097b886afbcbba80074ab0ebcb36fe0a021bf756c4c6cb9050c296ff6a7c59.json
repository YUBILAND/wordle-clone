{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\wordle-clone\\\\src\\\\components\\\\Grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useContext } from 'react';\nimport raw from '../assets/wordle-La.txt';\nimport { KeyboardContext } from '../Contexts/KeyboardContext';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport ShareIcon from '@mui/icons-material/Share';\nimport './Grid.css';\nimport Statistics from './Statistics';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Grid = () => {\n  _s();\n  // const [kbColor, setKbColor] = useState({});\n\n  const {\n    setKbColor\n  } = useContext(KeyboardContext);\n  const {\n    winPage,\n    setWinPage\n  } = useContext(KeyboardContext);\n  const [winCompliment, setWinCompliment] = useState(false);\n  const [win, setWin] = useState(false);\n  const [notEnough, setNotEnough] = useState(false);\n  const [wrongWord, setWrongWord] = useState(false);\n  const [wordleList, setWordleList] = useState([]);\n  const [firstDone, setFirstDone] = useState(false);\n  const [secondDone, setSecondDone] = useState(false);\n  const [thirdDone, setThirdDone] = useState(false);\n  const [fourthDone, setFourthDone] = useState(false);\n  const [fifthDone, setFifthDone] = useState(false);\n  const [sixthDone, setSixthDone] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [correctWord, setCorrectWord] = useState('');\n  const [guesses, setGuesses] = useState({\n    first: '',\n    second: '',\n    third: '',\n    fourth: '',\n    fifth: '',\n    sixth: ''\n  });\n  const [dummyWords, setDummyWords] = useState({\n    first: '',\n    second: '',\n    third: '',\n    fourth: '',\n    fifth: '',\n    sixth: ''\n  });\n  useEffect(() => {\n    const fetchWords = async () => {\n      const response = await fetch(raw);\n      const text = await response.text();\n      const lines = text.split('\\n').slice(0, 2315);\n      setWordleList(lines);\n    };\n    fetchWords();\n  }, []);\n  useEffect(() => {\n    if (wordleList.length > 0) {\n      setCorrectWord(wordleList[Math.floor(Math.random() * 2315)].toUpperCase());\n      console.log(wordleList);\n      // setCorrectWord(\"ELBOW\")\n      setLoading(false);\n    }\n  }, [wordleList]);\n  useEffect(() => {\n    setDummyWords({\n      first: correctWord\n    });\n    console.log(correctWord);\n  }, [correctWord]);\n  var guessLength = 0;\n  useEffect(() => {\n    const onPress = event => {\n      if (event.key === 'Backspace') {\n        if (!firstDone && guessLength > 0) {\n          guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            first: prevGuess.first.slice(0, prevGuess.first.length - 1)\n          }));\n        } else if (!secondDone && guessLength > 0) {\n          guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            second: prevGuess.second.slice(0, prevGuess.second.length - 1)\n          }));\n        } else if (!thirdDone && guessLength > 0) {\n          guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            third: prevGuess.third.slice(0, prevGuess.third.length - 1)\n          }));\n        } else if (!fourthDone && guessLength > 0) {\n          guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fourth: prevGuess.fourth.slice(0, prevGuess.fourth.length - 1)\n          }));\n        } else if (!fifthDone && guessLength > 0) {\n          guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fifth: prevGuess.fifth.slice(0, prevGuess.fifth.length - 1)\n          }));\n        } else if (!sixthDone && guessLength > 0) {\n          guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            sixth: prevGuess.sixth.slice(0, prevGuess.sixth.length - 1)\n          }));\n        }\n      } else if (event.key.match(/[a-zA-Z]/) && event.key.length === 1) {\n        if (!firstDone && guessLength < 5) {\n          guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            first: prevGuess.first + event.key.toUpperCase()\n          }));\n        } else if (!secondDone && guessLength < 5) {\n          guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            second: prevGuess.second + event.key.toUpperCase()\n          }));\n        } else if (!thirdDone && guessLength < 5) {\n          guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            third: prevGuess.third + event.key.toUpperCase()\n          }));\n        } else if (!fourthDone && guessLength < 5) {\n          guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fourth: prevGuess.fourth + event.key.toUpperCase()\n          }));\n        } else if (!fifthDone && guessLength < 5) {\n          guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fifth: prevGuess.fifth + event.key.toUpperCase()\n          }));\n        } else if (!sixthDone && guessLength < 5) {\n          guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            sixth: prevGuess.sixth + event.key.toUpperCase()\n          }));\n        }\n      }\n    };\n    if (!win) {\n      // Attach event listener\n      document.addEventListener('keydown', onPress);\n\n      // Cleanup function to remove event listener\n      return () => {\n        document.removeEventListener('keydown', onPress);\n      };\n    }\n  }, [firstDone, secondDone, thirdDone, fourthDone, fifthDone, sixthDone, win]); // Depend only on the completion status\n\n  const [firstCanEnter, setFirstCanEnter] = useState(false);\n  const [secondCanEnter, setSecondCanEnter] = useState(false);\n  const [thirdCanEnter, setThirdCanEnter] = useState(false);\n  const [fourthCanEnter, setFourthCanEnter] = useState(false);\n  const [fifthCanEnter, setFifthCanEnter] = useState(false);\n  const [sixthCanEnter, setSixthCanEnter] = useState(false);\n  useEffect(() => {\n    const onPress = event => {\n      if (event.key === 'Enter') {\n        if (!firstDone) {\n          if (firstCanEnter) {\n            if (wordleList.includes(guesses.first.toLowerCase())) {\n              setFirstDone(true);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!secondDone) {\n          if (secondCanEnter) {\n            if (wordleList.includes(guesses.second.toLowerCase())) {\n              setSecondDone(true);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!thirdDone) {\n          if (thirdCanEnter) {\n            if (wordleList.includes(guesses.third.toLowerCase())) {\n              setThirdDone(true);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!fourthDone) {\n          if (fourthCanEnter) {\n            if (wordleList.includes(guesses.fourth.toLowerCase())) {\n              setFourthDone(true);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!fifthDone) {\n          if (fifthCanEnter) {\n            if (wordleList.includes(guesses.fifth.toLowerCase())) {\n              setFifthDone(true);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!sixthDone) {\n          if (sixthCanEnter) {\n            if (wordleList.includes(guesses.sixth.toLowerCase())) {\n              setSixthDone(true);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        }\n      }\n    };\n    if (!win) {\n      document.addEventListener('keydown', onPress);\n      return () => {\n        document.removeEventListener('keydown', onPress);\n      };\n    }\n  }, [firstDone, secondDone, thirdDone, fourthDone, fifthDone, sixthDone, firstCanEnter, secondCanEnter, thirdCanEnter, fourthCanEnter, fifthCanEnter, sixthCanEnter, win]);\n  const compareString = (str1, str2) => {\n    var indexMatch = '';\n    for (let i = 0; i < str1.length; i++) {\n      if (str1[i] == str2[i]) {\n        indexMatch += i;\n      }\n    }\n    return indexMatch;\n  };\n  useEffect(() => {\n    if (!firstDone) {\n      if (guesses.first.length == 5) setFirstCanEnter(true);else setFirstCanEnter(false);\n    } else if (!secondDone) {\n      if (guesses.second.length == 5) setSecondCanEnter(true);else setSecondCanEnter(false);\n    } else if (!thirdDone) {\n      if (guesses.third.length == 5) setThirdCanEnter(true);else setThirdCanEnter(false);\n    } else if (!fourthDone) {\n      if (guesses.fourth.length == 5) setFourthCanEnter(true);else setFourthCanEnter(false);\n    } else if (!fifthDone) {\n      if (guesses.fifth.length == 5) setFifthCanEnter(true);else setFifthCanEnter(false);\n    } else if (!sixthDone) {\n      if (guesses.sixth.length == 5) setSixthCanEnter(true);else setSixthCanEnter(false);\n    }\n  }, [guesses]);\n  const greenLetter = (dummyWord, guessedWord) => {\n    const greenIndex = compareString(correctWord, guessedWord);\n    var offset = 0;\n    for (let i = 0; i < greenIndex.length; i++) {\n      dummyWord = dummyWord.slice(0, [parseInt(greenIndex[i]) - offset]) + dummyWord.slice(parseInt(greenIndex[i]) + 1 - offset);\n      console.log(dummyWord);\n      offset++;\n    }\n    return dummyWord;\n  };\n  const evalGuess = (dummyWord, letter, pos) => {\n    if (letter == correctWord[pos]) {\n      return 'green';\n    } else if (dummyWord.includes(letter)) {\n      return 'yellow';\n    } else {\n      return 'gray';\n    }\n  };\n  const [guessResults, setGuessResults] = useState({\n    first: [],\n    second: [],\n    third: [],\n    fourth: [],\n    fifth: [],\n    sixth: []\n  });\n  const firstRef = useRef(false);\n  const secondRef = useRef(false);\n  const thirdRef = useRef(false);\n  const fourthRef = useRef(false);\n  const fifthRef = useRef(false);\n  const sixthRef = useRef(false);\n  var cheatVar;\n  const evaluteGuess = (res, ind) => {\n    if (guessResults.first) {\n      const newCheatVar = cheatVar;\n      cheatVar = cheatVar.replace(res, '');\n      return evalGuess(newCheatVar, res, ind); //check for green, yellow and gray\n    }\n  };\n  var newKbColor;\n  useEffect(() => {\n    if (firstDone && !firstRef.current) {\n      //player has made first guess\n\n      cheatVar = greenLetter(correctWord, guesses.first);\n      const colorGuess = guesses.first.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        first: [...prevResults.first, ...colorGuess]\n      }));\n      let newKbColor = guesses.first.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n      }\n      firstRef.current = true;\n    }\n    if (secondDone && !secondRef.current) {\n      //player has made second guess\n      cheatVar = greenLetter(correctWord, guesses.second);\n      const colorGuess = guesses.second.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        second: [...prevResults.second, ...colorGuess]\n      }));\n      let newKbColor = guesses.second.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n      }\n      secondRef.current = true;\n    }\n    if (thirdDone && !thirdRef.current) {\n      //player has made first guess\n      cheatVar = greenLetter(correctWord, guesses.third);\n      const colorGuess = guesses.third.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        third: [...prevResults.third, ...colorGuess]\n      }));\n      let newKbColor = guesses.third.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n      }\n      thirdRef.current = true;\n    }\n    if (fourthDone && !fourthRef.current) {\n      //player has made first guess\n      cheatVar = greenLetter(correctWord, guesses.fourth);\n      const colorGuess = guesses.fourth.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        fourth: [...prevResults.fourth, ...colorGuess]\n      }));\n      let newKbColor = guesses.fourth.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n      }\n      fourthRef.current = true;\n    }\n    if (fifthDone && !fifthRef.current) {\n      //player has made first guess\n      cheatVar = greenLetter(correctWord, guesses.fifth);\n      const colorGuess = guesses.fifth.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        fifth: [...prevResults.fifth, ...colorGuess]\n      }));\n      let newKbColor = guesses.fifth.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n      }\n      fifthRef.current = true;\n    }\n    if (sixthDone && !sixthRef.current) {\n      //player has made first guess\n      cheatVar = greenLetter(correctWord, guesses.sixth);\n      const colorGuess = guesses.sixth.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        sixth: [...prevResults.sixth, ...colorGuess]\n      }));\n      let newKbColor = guesses.sixth.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n      }\n      sixthRef.current = true;\n    }\n    // Repeat this pattern for the remaining guesses (third, fourth, etc.)\n  }, [firstDone, secondDone, thirdDone, fourthDone, fifthDone, sixthDone]);\n  useEffect(() => {\n    if (win) {\n      setWinCompliment(true);\n      setTimeout(() => {\n        /* Code to run after 4 seconds */\n        // alert('wow you have brain')\n        setWinPage(true);\n        // const allExceptDiv = document.querySelectorAll(\"body > *:not(#stats):not(#stats *)\");\n        // allExceptDiv.forEach(el => el.classList.add(\"unfocus\"))\n      }, 1000);\n    }\n  }, [win]);\n\n  // if (loading) {\n  //     return <div>Loading...</div>; // Show a loading indicator while data is being fetched\n  // }\n\n  if (winCompliment) {\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setWinCompliment(false);\n    }, 5000);\n  }\n  if (notEnough) {\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setNotEnough(false);\n    }, 5000);\n  }\n  if (wrongWord) {\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setWrongWord(false);\n    }, 5000);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto w-[500px] opacity-100 mb-[110px]\",\n    children: [winCompliment && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: \"Magnificent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 113\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 27\n    }, this), notEnough && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: \"Not enough letters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 109\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 23\n    }, this), wrongWord && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: \"Not in word list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 109\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 23\n    }, this), winPage && /*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 w-[340px] mx-auto gap-2 \",\n      children: [firstDone && firstRef.current ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: guessResults.first.map((res, ind) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `border-2  ${res == 'green' ? 'bg-[#6aaa64]' : res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white`,\n          children: guesses['first'][ind] || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 21\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [0, 1, 2, 3, 4].map(res => guesses['first'][res] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\",\n          children: guesses['first'][res]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 21\n        }, this)\n\n        // <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\n        //     {guesses['first'][res] || ''}\n        // </div>\n        )\n      }, void 0, false), secondDone ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: guessResults.second.map((res, ind) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `border-2  ${res == 'green' ? 'bg-[#6aaa64]' : res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white`,\n          children: guesses['second'][ind] || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 21\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [0, 1, 2, 3, 4].map(res => guesses['second'][res] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\",\n          children: guesses['second'][res]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 21\n        }, this))\n      }, void 0, false), thirdDone ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: guessResults.third.map((res, ind) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `border-2  ${res == 'green' ? 'bg-[#6aaa64]' : res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white`,\n          children: guesses.third[ind] || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 21\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [0, 1, 2, 3, 4].map(res => guesses['third'][res] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\",\n          children: guesses['third'][res]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 21\n        }, this))\n      }, void 0, false), fourthDone ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: guessResults.fourth.map((res, ind) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `border-2  ${res == 'green' ? 'bg-[#6aaa64]' : res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white`,\n          children: guesses.fourth[ind] || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 21\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [0, 1, 2, 3, 4].map(res => guesses['fourth'][res] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\",\n          children: guesses['fourth'][res]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 21\n        }, this))\n      }, void 0, false), fifthDone ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: guessResults.fifth.map((res, ind) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `border-2  ${res == 'green' ? 'bg-[#6aaa64]' : res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white`,\n          children: guesses.fifth[ind] || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 21\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [0, 1, 2, 3, 4].map(res => guesses['fifth'][res] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\",\n          children: guesses['fifth'][res]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 21\n        }, this))\n      }, void 0, false), sixthDone ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: guessResults.sixth.map((res, ind) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `border-2  ${res == 'green' ? 'bg-[#6aaa64]' : res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white`,\n          children: guesses.sixth[ind] || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 21\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [0, 1, 2, 3, 4].map(res => guesses['sixth'][res] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\",\n          children: guesses['sixth'][res]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 21\n        }, this))\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 503,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"U7mPz8GxJ4Z+lNJjC8tygWXbAso=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useContext","raw","KeyboardContext","CloseIcon","ReplayIcon","ShareIcon","Statistics","jsxDEV","_jsxDEV","Fragment","_Fragment","Grid","_s","setKbColor","winPage","setWinPage","winCompliment","setWinCompliment","win","setWin","notEnough","setNotEnough","wrongWord","setWrongWord","wordleList","setWordleList","firstDone","setFirstDone","secondDone","setSecondDone","thirdDone","setThirdDone","fourthDone","setFourthDone","fifthDone","setFifthDone","sixthDone","setSixthDone","loading","setLoading","correctWord","setCorrectWord","guesses","setGuesses","first","second","third","fourth","fifth","sixth","dummyWords","setDummyWords","fetchWords","response","fetch","text","lines","split","slice","length","Math","floor","random","toUpperCase","console","log","guessLength","onPress","event","key","prevGuess","match","document","addEventListener","removeEventListener","firstCanEnter","setFirstCanEnter","secondCanEnter","setSecondCanEnter","thirdCanEnter","setThirdCanEnter","fourthCanEnter","setFourthCanEnter","fifthCanEnter","setFifthCanEnter","sixthCanEnter","setSixthCanEnter","includes","toLowerCase","compareString","str1","str2","indexMatch","i","greenLetter","dummyWord","guessedWord","greenIndex","offset","parseInt","evalGuess","letter","pos","guessResults","setGuessResults","firstRef","secondRef","thirdRef","fourthRef","fifthRef","sixthRef","cheatVar","evaluteGuess","res","ind","newCheatVar","replace","newKbColor","current","colorGuess","map","prevResults","reduce","acc","set","Set","Object","values","size","setTimeout","getElementById","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/david/wordle-clone/src/components/Grid.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport raw from '../assets/wordle-La.txt'\r\nimport { KeyboardContext } from '../Contexts/KeyboardContext';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport './Grid.css'\r\nimport Statistics from './Statistics';\r\n\r\nconst Grid = () => {\r\n\r\n    \r\n    // const [kbColor, setKbColor] = useState({});\r\n\r\n    const {setKbColor} = useContext(KeyboardContext);\r\n    const {winPage, setWinPage} = useContext(KeyboardContext);\r\n\r\n    const [winCompliment, setWinCompliment] = useState(false);\r\n    const [win, setWin] = useState(false);\r\n\r\n    const [notEnough, setNotEnough] = useState(false);\r\n\r\n    const [wrongWord, setWrongWord] = useState(false);\r\n\r\n    const [wordleList, setWordleList] = useState([]);\r\n    const [firstDone, setFirstDone] = useState(false);\r\n    const [secondDone, setSecondDone] = useState(false);\r\n    const [thirdDone, setThirdDone] = useState(false);\r\n    const [fourthDone, setFourthDone] = useState(false);\r\n    const [fifthDone, setFifthDone] = useState(false);\r\n    const [sixthDone, setSixthDone] = useState(false);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [correctWord, setCorrectWord] = useState('');\r\n\r\n    const[guesses, setGuesses] = useState({first: '', second: '', third: '', fourth: '', fifth: '', sixth: ''});\r\n    const [dummyWords, setDummyWords] = useState({first: '', second: '', third: '', fourth: '', fifth: '', sixth: ''});\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchWords = async () => { \r\n            const response = await fetch(raw);\r\n            const text = await response.text();\r\n            const lines = text.split('\\n').slice(0, 2315);\r\n            setWordleList(lines)\r\n        };\r\n        fetchWords();\r\n\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if (wordleList.length > 0) {\r\n        setCorrectWord(wordleList[Math.floor(Math.random() * 2315)].toUpperCase());\r\n        console.log(wordleList)\r\n        // setCorrectWord(\"ELBOW\")\r\n        setLoading(false);\r\n        }\r\n    }, [wordleList])\r\n\r\n    useEffect(() => {\r\n        setDummyWords({first: correctWord})\r\n        console.log(correctWord)\r\n    }, [correctWord])\r\n\r\n\r\n    var guessLength = 0;\r\n\r\n    useEffect(() => {\r\n        \r\n        const onPress = (event) => {\r\n          if (event.key === 'Backspace') {\r\n            if (!firstDone && guessLength > 0) {\r\n                guessLength -= 1;\r\n              setGuesses( prevGuess => ({ ...prevGuess, first: (prevGuess.first.slice(0, prevGuess.first.length - 1))}))\r\n            } \r\n            else if (!secondDone && guessLength > 0) {\r\n                guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, second: (prevGuess.second.slice(0, prevGuess.second.length - 1))}))\r\n            } \r\n            else if (!thirdDone && guessLength > 0) {\r\n                guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, third: (prevGuess.third.slice(0, prevGuess.third.length - 1))}))\r\n            } \r\n            else if (!fourthDone && guessLength > 0) {\r\n                guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fourth: (prevGuess.fourth.slice(0, prevGuess.fourth.length - 1))}))\r\n            } \r\n            else if (!fifthDone && guessLength > 0) {\r\n                guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fifth: (prevGuess.fifth.slice(0, prevGuess.fifth.length - 1))}))\r\n            } \r\n            else if (!sixthDone && guessLength > 0) {\r\n                guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, sixth: (prevGuess.sixth.slice(0, prevGuess.sixth.length - 1))}))\r\n            } \r\n          } else if (event.key.match(/[a-zA-Z]/) && event.key.length === 1) {\r\n            if (!firstDone && guessLength < 5) {\r\n                guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, first: (prevGuess.first + event.key.toUpperCase())}))\r\n            }\r\n            else if (!secondDone && guessLength < 5) {\r\n                guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, second: (prevGuess.second + event.key.toUpperCase())}))\r\n            } \r\n            else if (!thirdDone && guessLength < 5) {\r\n                guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, third: (prevGuess.third + event.key.toUpperCase())}))\r\n            } \r\n            else if (!fourthDone && guessLength < 5) {\r\n                guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fourth: (prevGuess.fourth + event.key.toUpperCase())}))\r\n            } \r\n            else if (!fifthDone && guessLength < 5) {\r\n                guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fifth: (prevGuess.fifth + event.key.toUpperCase())}))\r\n            } \r\n            else if (!sixthDone && guessLength < 5) {\r\n                guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, sixth: (prevGuess.sixth + event.key.toUpperCase())}))\r\n            }\r\n          } \r\n        };\r\n        if(!win) {\r\n            // Attach event listener\r\n            document.addEventListener('keydown', onPress);\r\n        \r\n            // Cleanup function to remove event listener\r\n            return () => {\r\n            document.removeEventListener('keydown', onPress);\r\n            };\r\n        }\r\n      }, [firstDone, secondDone, thirdDone, fourthDone, fifthDone, sixthDone, win]); // Depend only on the completion status\r\n\r\n    const [firstCanEnter, setFirstCanEnter] = useState(false);\r\n    const [secondCanEnter, setSecondCanEnter] = useState(false);\r\n    const [thirdCanEnter, setThirdCanEnter] = useState(false);\r\n    const [fourthCanEnter, setFourthCanEnter] = useState(false);\r\n    const [fifthCanEnter, setFifthCanEnter] = useState(false);\r\n    const [sixthCanEnter, setSixthCanEnter] = useState(false);\r\n\r\n      useEffect(() => {\r\n        const onPress = (event) => {\r\n            if (event.key === 'Enter') {\r\n                if (!firstDone) {\r\n                    if (firstCanEnter) {\r\n                        if (wordleList.includes(guesses.first.toLowerCase())) {\r\n                            setFirstDone(true);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!secondDone) {\r\n                    if (secondCanEnter) {\r\n                        if (wordleList.includes(guesses.second.toLowerCase())) {\r\n                            setSecondDone(true);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!thirdDone) {\r\n                    if (thirdCanEnter) {\r\n                        if (wordleList.includes(guesses.third.toLowerCase())) {\r\n                            setThirdDone(true);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!fourthDone) {\r\n                    if (fourthCanEnter) {\r\n                        if (wordleList.includes(guesses.fourth.toLowerCase())) {\r\n                            setFourthDone(true);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!fifthDone) {\r\n                    if (fifthCanEnter) {\r\n                        if (wordleList.includes(guesses.fifth.toLowerCase())) {\r\n                            setFifthDone(true);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!sixthDone) {\r\n                    if (sixthCanEnter) {\r\n                        if (wordleList.includes(guesses.sixth.toLowerCase())) {\r\n                            setSixthDone(true);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n            }\r\n        }\r\n        if (!win) {\r\n            document.addEventListener('keydown', onPress);\r\n            return () => {\r\n            document.removeEventListener('keydown', onPress);\r\n            };\r\n        }\r\n    },[firstDone, secondDone, thirdDone, fourthDone, fifthDone, sixthDone, firstCanEnter, secondCanEnter, thirdCanEnter, fourthCanEnter, fifthCanEnter, sixthCanEnter, win])\r\n    \r\n\r\n    const compareString = (str1, str2) => {\r\n        var indexMatch = '';\r\n        for (let i = 0; i < str1.length; i++) {\r\n            if (str1[i] == str2[i]) {\r\n                indexMatch += i;\r\n            }\r\n        } return indexMatch;\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        if (!firstDone) {\r\n            if (guesses.first.length == 5) setFirstCanEnter(true);\r\n            else setFirstCanEnter(false);\r\n        }\r\n        else if (!secondDone) {\r\n            if (guesses.second.length == 5) setSecondCanEnter(true);\r\n            else setSecondCanEnter(false);\r\n        }\r\n        else if (!thirdDone) {\r\n            if (guesses.third.length == 5) setThirdCanEnter(true);\r\n            else setThirdCanEnter(false);\r\n        }\r\n        else if (!fourthDone) {\r\n            if (guesses.fourth.length == 5) setFourthCanEnter(true);\r\n            else setFourthCanEnter(false);\r\n        }\r\n        else if (!fifthDone) {\r\n            if (guesses.fifth.length == 5) setFifthCanEnter(true);\r\n            else setFifthCanEnter(false);\r\n        }\r\n        else if (!sixthDone) {\r\n            if (guesses.sixth.length == 5) setSixthCanEnter(true);\r\n            else setSixthCanEnter(false);\r\n        }\r\n    }, [guesses])\r\n\r\n    const greenLetter = (dummyWord, guessedWord) => {\r\n        const greenIndex = compareString(correctWord, guessedWord);\r\n        var offset = 0;\r\n        for (let i = 0; i < greenIndex.length; i++) {\r\n            dummyWord = dummyWord.slice(0, [parseInt(greenIndex[i]) - offset]) + dummyWord.slice(parseInt(greenIndex[i]) + 1 - offset);\r\n            console.log(dummyWord)\r\n            offset++;\r\n        }\r\n        return dummyWord;\r\n    }\r\n\r\n    const evalGuess = (dummyWord, letter, pos) => {\r\n        if (letter == correctWord[pos]) {\r\n            return 'green';\r\n        } else if (dummyWord.includes(letter)) {\r\n            return 'yellow';\r\n        } else {\r\n            return 'gray';\r\n        }\r\n    }\r\n    \r\n    const [guessResults, setGuessResults] = useState({first: [], second: [], third: [], fourth: [], fifth: [], sixth: []})\r\n    const firstRef = useRef(false);\r\n    const secondRef = useRef(false);\r\n    const thirdRef = useRef(false);\r\n    const fourthRef = useRef(false);\r\n    const fifthRef = useRef(false);\r\n    const sixthRef = useRef(false);\r\n\r\n    var cheatVar;\r\n\r\n    const evaluteGuess = (res, ind) => {\r\n        if (guessResults.first) {\r\n            \r\n            const newCheatVar = cheatVar;\r\n            cheatVar = cheatVar.replace(res, '')\r\n            return evalGuess(newCheatVar, res, ind) //check for green, yellow and gray\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    \r\n\r\n    var newKbColor;\r\n    useEffect(() => {\r\n        if (firstDone && !firstRef.current) { //player has made first guess\r\n\r\n            cheatVar = greenLetter(correctWord, guesses.first)\r\n            const colorGuess = guesses.first.split('').map((res, ind) => (\r\n                \r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                first: [...prevResults.first, ...colorGuess]\r\n            }));\r\n\r\n            let newKbColor = guesses.first.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n                \r\n            }, {});\r\n\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n            }\r\n            \r\n            firstRef.current = true;\r\n        }\r\n        if (secondDone && !secondRef.current) { //player has made second guess\r\n            cheatVar = greenLetter(correctWord, guesses.second)\r\n            const colorGuess = guesses.second.split('').map((res, ind) => (\r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                second: [...prevResults.second, ...colorGuess]\r\n            }));\r\n\r\n            let newKbColor = guesses.second.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n                \r\n            }, {});\r\n\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n            }\r\n\r\n            secondRef.current = true;\r\n        }\r\n        if (thirdDone && !thirdRef.current) { //player has made first guess\r\n            cheatVar = greenLetter(correctWord, guesses.third)\r\n            const colorGuess = guesses.third.split('').map((res, ind) => (\r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                third: [...prevResults.third, ...colorGuess]\r\n            }));\r\n\r\n            let newKbColor = guesses.third.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n                \r\n            }, {});\r\n\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n            }\r\n\r\n            thirdRef.current = true;\r\n        }\r\n        if (fourthDone && !fourthRef.current) { //player has made first guess\r\n            cheatVar = greenLetter(correctWord, guesses.fourth)\r\n            const colorGuess = guesses.fourth.split('').map((res, ind) => (\r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                fourth: [...prevResults.fourth, ...colorGuess]\r\n            }));\r\n\r\n            let newKbColor = guesses.fourth.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n                \r\n            }, {});\r\n\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n            }\r\n\r\n            fourthRef.current = true;\r\n        }\r\n        if (fifthDone && !fifthRef.current) { //player has made first guess\r\n            cheatVar = greenLetter(correctWord, guesses.fifth)\r\n            const colorGuess = guesses.fifth.split('').map((res, ind) => (\r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                fifth: [...prevResults.fifth, ...colorGuess]\r\n            }));\r\n\r\n            let newKbColor = guesses.fifth.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n                \r\n            }, {});\r\n\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n            }\r\n\r\n            fifthRef.current = true;\r\n        }\r\n        if (sixthDone && !sixthRef.current) { //player has made first guess\r\n            cheatVar = greenLetter(correctWord, guesses.sixth)\r\n            const colorGuess = guesses.sixth.split('').map((res, ind) => (\r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                sixth: [...prevResults.sixth, ...colorGuess]\r\n            }));\r\n\r\n            let newKbColor = guesses.sixth.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n                \r\n            }, {});\r\n\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n            }\r\n\r\n            sixthRef.current = true;\r\n        }\r\n        // Repeat this pattern for the remaining guesses (third, fourth, etc.)\r\n    }, [firstDone, secondDone, thirdDone, fourthDone, fifthDone, sixthDone]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (win) {\r\n            setWinCompliment(true);\r\n            setTimeout(() => {\r\n                /* Code to run after 4 seconds */\r\n                // alert('wow you have brain')\r\n                setWinPage(true);\r\n                // const allExceptDiv = document.querySelectorAll(\"body > *:not(#stats):not(#stats *)\");\r\n                // allExceptDiv.forEach(el => el.classList.add(\"unfocus\"))\r\n\r\n            }, 1000)\r\n            \r\n        }\r\n\r\n    }, [win])\r\n\r\n        // if (loading) {\r\n        //     return <div>Loading...</div>; // Show a loading indicator while data is being fetched\r\n        // }\r\n\r\n    if(winCompliment) {\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setWinCompliment(false);\r\n            }, 5000);\r\n    }\r\n\r\n    if(notEnough) {\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setNotEnough(false);\r\n\r\n            }, 5000);\r\n\r\n    }\r\n\r\n    if (wrongWord) {\r\n         setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setWrongWord(false);\r\n\r\n            }, 5000);\r\n    }\r\n    \r\n    \r\n\r\n  return (\r\n    <div className='mx-auto w-[500px] opacity-100 mb-[110px]'>\r\n\r\n        {winCompliment && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>Magnificent</span> </div>}\r\n\r\n        {notEnough && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>Not enough letters</span> </div>}\r\n\r\n        {wrongWord && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>Not in word list</span> </div>}\r\n\r\n        {winPage && <Statistics /> }\r\n\r\n        <div className='grid grid-cols-5 w-[340px] mx-auto gap-2 '>\r\n\r\n            { (firstDone && firstRef.current) ? \r\n            <>\r\n                {guessResults.first.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses['first'][ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['first'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['first'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                    \r\n                    // <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    //     {guesses['first'][res] || ''}\r\n                    // </div>\r\n                ))}\r\n            </>\r\n            }\r\n\r\n            { secondDone ? \r\n            <>\r\n                {guessResults.second.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses['second'][ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['second'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['second'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                ))}\r\n            </>\r\n            }\r\n\r\n            { thirdDone ? \r\n            <>\r\n                {guessResults.third.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses.third[ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['third'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['third'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                ))}\r\n            </>\r\n            }\r\n            { fourthDone ? \r\n            <>\r\n                {guessResults.fourth.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses.fourth[ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['fourth'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['fourth'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                ))}\r\n            </>\r\n            }\r\n            { fifthDone ? \r\n            <>\r\n                {guessResults.fifth.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses.fifth[ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['fifth'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['fifth'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                ))}\r\n            </>\r\n            }\r\n            { sixthDone ? \r\n            <>\r\n                {guessResults.sixth.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses.sixth[ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['sixth'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['sixth'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                ))}\r\n            </>\r\n            }\r\n        </div>\r\n         \r\n        \r\n\r\n        \r\n\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}