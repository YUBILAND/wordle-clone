{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\wordle-clone\\\\Client\\\\src\\\\components\\\\Grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useContext } from 'react';\nimport raw from '../assets/wordle-La.txt';\nimport { KeyboardContext } from '../Contexts/KeyboardContext';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport ShareIcon from '@mui/icons-material/Share';\nimport './Grid.css';\nimport Statistics from './Statistics';\nimport axios from 'axios';\nimport Zoom from '@mui/material/Zoom';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Grid = () => {\n  _s();\n  const {\n    darkMode\n  } = useContext(KeyboardContext);\n  const {\n    colorBlind,\n    setColorBlind\n  } = useContext(KeyboardContext);\n  const {\n    profilePage,\n    showProfilePage\n  } = useContext(KeyboardContext);\n  const {\n    tutorial,\n    showTutorial\n  } = useContext(KeyboardContext);\n  const {\n    leaderBoard,\n    showLeaderBoard\n  } = useContext(KeyboardContext);\n  const {\n    settings,\n    showSettings\n  } = useContext(KeyboardContext);\n  const {\n    userMode,\n    setUserMode\n  } = useContext(KeyboardContext);\n  const {\n    userID,\n    setUserID\n  } = useContext(KeyboardContext);\n  const {\n    kbColor,\n    setKbColor\n  } = useContext(KeyboardContext);\n  const {\n    winPage,\n    setWinPage\n  } = useContext(KeyboardContext);\n  const {\n    guessWon,\n    setGuessWon\n  } = useContext(KeyboardContext);\n  const [winCompliment, setWinCompliment] = useState(false);\n  const {\n    win,\n    setWin\n  } = useContext(KeyboardContext);\n  const {\n    answer,\n    showAnswer\n  } = useContext(KeyboardContext);\n  const {\n    notEnough,\n    setNotEnough\n  } = useContext(KeyboardContext);\n  const {\n    wrongWord,\n    setWrongWord\n  } = useContext(KeyboardContext);\n  const {\n    wordleList,\n    setWordleList\n  } = useContext(KeyboardContext);\n  const {\n    doneHash,\n    setDoneHash\n  } = useContext(KeyboardContext);\n  const {\n    canEnterHash,\n    setCanEnterHash\n  } = useContext(KeyboardContext);\n  const [guessResults, setGuessResults] = useState(() => {\n    const existingguessResults = JSON.parse(localStorage.getItem('guessResults'));\n    return existingguessResults || {\n      first: [],\n      second: [],\n      third: [],\n      fourth: [],\n      fifth: [],\n      sixth: []\n    };\n  });\n  const refHash = useRef({\n    first: false,\n    second: false,\n    third: false,\n    fourth: false,\n    fifth: false,\n    sixth: false\n  });\n  const [loading, setLoading] = useState(true);\n  const [correctWord, setCorrectWord] = useState('');\n  const {\n    guesses,\n    setGuesses\n  } = useContext(KeyboardContext);\n  const {\n    clickDisabledLeaderBoard,\n    setClickDisabledLeaderBoard\n  } = useContext(KeyboardContext);\n  const {\n    clickDisabledProfile,\n    setClickDisabledProfile\n  } = useContext(KeyboardContext);\n  const {\n    guestMode,\n    setGuestMode\n  } = useContext(KeyboardContext);\n  const {\n    guessLength,\n    setGuessLength\n  } = useContext(KeyboardContext);\n  const [loss, setLoss] = useState(false);\n  useEffect(() => {\n    //loads wordle list\n    const fetchWords = async () => {\n      const response = await fetch(raw);\n      const text = await response.text();\n      const lines = text.split('\\r\\n').slice(0, 2315);\n      setWordleList(lines);\n    };\n    fetchWords();\n  }, []);\n  useEffect(() => {\n    //chooses random correct word from wordle list\n    if (wordleList.length > 0) {\n      setCorrectWord(wordleList[Math.floor(Math.random() * 2315)].toUpperCase());\n      // setCorrectWord('BLIMP')\n      // console.log(wordleList);\n      setLoading(false);\n    }\n  }, [wordleList]);\n  useEffect(() => {\n    // prints correctWord\n    if (correctWord) console.log('The Correct Word is ' + correctWord);\n  }, [correctWord]);\n  useEffect(() => {\n    //Register key press and save to state, del too\n    const onPress = event => {\n      if (event.key === 'Backspace') {\n        if (!doneHash.firstDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            first: prevGuess.first.slice(0, prevGuess.first.length - 1)\n          }));\n        } else if (!doneHash.secondDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            second: prevGuess.second.slice(0, prevGuess.second.length - 1)\n          }));\n        } else if (!doneHash.thirdDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            third: prevGuess.third.slice(0, prevGuess.third.length - 1)\n          }));\n        } else if (!doneHash.fourthDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fourth: prevGuess.fourth.slice(0, prevGuess.fourth.length - 1)\n          }));\n        } else if (!doneHash.fifthDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fifth: prevGuess.fifth.slice(0, prevGuess.fifth.length - 1)\n          }));\n        } else if (!doneHash.sixthDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            sixth: prevGuess.sixth.slice(0, prevGuess.sixth.length - 1)\n          }));\n        }\n      } else if (event.key.match(/[a-zA-Z]/) && event.key.length === 1) {\n        if (!doneHash.firstDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          // console.log(guessLength);\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            first: prevGuess.first + event.key.toUpperCase()\n          }));\n        } else if (!doneHash.secondDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            second: prevGuess.second + event.key.toUpperCase()\n          }));\n        } else if (!doneHash.thirdDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            third: prevGuess.third + event.key.toUpperCase()\n          }));\n        } else if (!doneHash.fourthDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fourth: prevGuess.fourth + event.key.toUpperCase()\n          }));\n        } else if (!doneHash.fifthDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fifth: prevGuess.fifth + event.key.toUpperCase()\n          }));\n        } else if (!doneHash.sixthDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            sixth: prevGuess.sixth + event.key.toUpperCase()\n          }));\n        }\n      }\n    };\n    if (!win) {\n      // Attach event listener\n      document.addEventListener('keydown', onPress);\n\n      // Cleanup function to remove event listener\n      return () => {\n        document.removeEventListener('keydown', onPress);\n      };\n    }\n  }, [win, guessLength, doneHash]); // Depend only on the completion status\n\n  useEffect(() => {\n    // 'Enter' Key Functionality\n    const onPress = event => {\n      if (event.key === 'Enter') {\n        if (!doneHash.firstDone) {\n          if (canEnterHash.firstCanEnter) {\n            if (wordleList.includes(guesses.first.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                firstDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!doneHash.secondDone) {\n          if (canEnterHash.secondCanEnter) {\n            if (wordleList.includes(guesses.second.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                secondDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!doneHash.thirdDone) {\n          if (canEnterHash.thirdCanEnter) {\n            if (wordleList.includes(guesses.third.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                thirdDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!doneHash.fourthDone) {\n          if (canEnterHash.fourthCanEnter) {\n            if (wordleList.includes(guesses.fourth.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                fourthDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!doneHash.fifthDone) {\n          if (canEnterHash.fifthCanEnter) {\n            if (wordleList.includes(guesses.fifth.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                fifthDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!doneHash.sixthDone) {\n          if (canEnterHash.sixthCanEnter) {\n            if (wordleList.includes(guesses.sixth.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                sixthDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        }\n      }\n    };\n    if (!win) {\n      document.addEventListener('keydown', onPress);\n      return () => {\n        document.removeEventListener('keydown', onPress);\n      };\n    }\n  }, [win, doneHash, canEnterHash]);\n  const compareString = (str1, str2) => {\n    // compare guess to correctword, return arr of index of green ( ex '135' so first third and fifth are green)\n    var indexMatch = [];\n    for (let i = 0; i < str1.length; i++) {\n      if (str1[i] == str2[i]) {\n        indexMatch.push(i);\n      }\n    }\n    return indexMatch;\n  };\n  useEffect(() => {\n    // evaluates whether user can press enter as a valid guess, length 5\n    // console.log(guesses.first)\n    if (!doneHash.firstDone) {\n      if (guesses.first.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        firstCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        firstCanEnter: false\n      }));\n    } else if (!doneHash.secondDone) {\n      if (guesses.second.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        secondCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        secondCanEnter: false\n      }));\n    } else if (!doneHash.thirdDone) {\n      if (guesses.third.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        thirdCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        thirdCanEnter: false\n      }));\n    } else if (!doneHash.fourthDone) {\n      if (guesses.fourth.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        fourthCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        fourthCanEnter: false\n      }));\n    } else if (!doneHash.fifthDone) {\n      if (guesses.fifth.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        fifthCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        fifthCanEnter: false\n      }));\n    } else if (!doneHash.sixthDone) {\n      if (guesses.sixth.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        sixthCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        sixthCanEnter: false\n      }));\n    }\n  }, [guesses]);\n  const greenLetter = (dummyWord, guessedWord) => {\n    //looks for green first\n    const greenIndex = compareString(correctWord, guessedWord); // arry of green index\n    var offset = 0;\n    for (let i = 0; i < greenIndex.length; i++) {\n      dummyWord = dummyWord.slice(0, [parseInt(greenIndex[i]) - offset]) + dummyWord.slice(parseInt(greenIndex[i]) + 1 - offset);\n      // console.log(dummyWord)\n      offset++;\n    }\n    return dummyWord;\n  };\n  const evalGuess = (dummyWord, letter, pos) => {\n    //assign letter green, yellow, or gray\n    if (letter == correctWord[pos]) {\n      return 'green';\n    } else if (dummyWord.includes(letter)) {\n      return 'yellow';\n    } else {\n      return 'gray';\n    }\n  };\n  var cheatVar;\n  const evaluteGuess = (res, ind) => {\n    //helper func for evaluating guess\n    if (guessResults.first) {\n      const newCheatVar = cheatVar;\n      cheatVar = cheatVar.replace(res, '');\n      return evalGuess(newCheatVar, res, ind); //check for green, yellow and gray\n    }\n  };\n  const whichguessacc = useRef(1); // use ref to keep track of variable between useEffect renders\n  useEffect(() => {\n    // evaluates guess, sets when user wins or loses\n\n    Object.entries(doneHash).map(([key, value]) => {\n      const place = key.split('Done')[0]; // removes Done from key like firstDone leaving first to access value of other hashmap\n      if (value && !refHash.current[place]) {\n        //player has made first guess\n\n        cheatVar = greenLetter(correctWord, guesses[place]);\n        const colorGuess = guesses[place].split('').map((res, ind) =>\n        // gets color mapping for each letter guess\n        evaluteGuess(res, ind));\n        setGuessResults(prevResults => ({\n          ...prevResults,\n          [place]: [...prevResults[place], ...colorGuess]\n        }));\n        // console.log(colorGuess)\n        // console.log(guesses.first)\n        let newKbColor = guesses[place].split('').reduce((acc, res, ind) => {\n          //removes duplicates to map to keyboard (ex. plump) only one color for p.\n          if (acc[res] == 'green' || acc[res] == 'yellow') {\n\n            // green and yellow get priority over gray so don't overwrite. \n            // (ex blimp and guess is booby, first b is green so don't overwrite with second b which is gray.)\n            // (ex blimp and guess is poppy, first p is yellow so don't overwrite with second or third p which is gray.)\n          } else acc[res] = colorGuess[ind];\n          return acc;\n        }, {});\n        // console.log(newKbColor)\n        setKbColor(prevResults => [...prevResults, {\n          ...newKbColor\n        }]);\n        const set = new Set(Object.values(newKbColor));\n        const first = [...set][0];\n        if (set.size == 1 && first == 'green') {\n          setWin(true);\n          setGuessWon('guess' + String(whichguessacc.current));\n        } else if (place == \"sixth\") {\n          showAnswer(true);\n          setLoss(true);\n        }\n        whichguessacc.current += 1;\n        refHash.current[place] = true;\n      }\n    });\n  }, [doneHash]);\n  useEffect(() => {\n    const existingDoneHash = JSON.parse(localStorage.getItem('doneHash')) || {\n      firstDone: false,\n      secondDone: false,\n      thirdDone: false,\n      fourthDone: false,\n      fifthDone: false,\n      sixthDone: false\n    };\n    if (JSON.stringify(existingDoneHash) !== JSON.stringify(doneHash)) localStorage.setItem('doneHash', JSON.stringify(doneHash));\n  }, [doneHash]);\n  useEffect(() => {\n    const existingguessResults = JSON.parse(localStorage.getItem('guessResults')) || {\n      first: [],\n      second: [],\n      third: [],\n      fourth: [],\n      fifth: [],\n      sixth: []\n    };\n    if (JSON.stringify(existingguessResults) !== JSON.stringify(guessResults)) localStorage.setItem('guessResults', JSON.stringify(guessResults));\n    localStorage.setItem('guesses', JSON.stringify(guesses));\n  }, [guessResults]);\n  useEffect(() => {\n    localStorage.setItem('kbColor', JSON.stringify(kbColor));\n  }, [kbColor]);\n  useEffect(() => {\n    // update stats after game finish\n    if (win ^ answer) {\n      axios.post('http://localhost:8081/updateStats', {\n        ...userID,\n        win: win,\n        guessWon: guessWon\n      }).then(res => {\n        console.log(res.data.message);\n      }).catch(err => console.log(err));\n    }\n  }, [win, answer]);\n  useEffect(() => {\n    // 1 sec delay after win before stats is shown\n    if (win) {\n      setWinCompliment(true);\n      setTimeout(() => {\n        /* Code to run after 4 seconds */\n        // alert('wow you have brain')\n        setWinPage(true);\n      }, 1000);\n    }\n  }, [win]);\n  if (winCompliment) {\n    // show win compliment and fade out\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setWinCompliment(false);\n    }, 5000);\n  }\n  if (notEnough) {\n    // show not enoguh letters prompt and fade out\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setNotEnough(false);\n    }, 5000);\n  }\n  if (wrongWord) {\n    // show wrong word prompt and fade out\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setWrongWord(false);\n    }, 5000);\n  }\n  if (clickDisabledLeaderBoard) {\n    // show disabled leadeboard prompt and fade out\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setClickDisabledLeaderBoard(false);\n    }, 2000);\n  }\n  if (clickDisabledProfile) {\n    // show disabled profile prompt and fade out\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setClickDisabledProfile(false);\n    }, 2000);\n  }\n  if (loss) {\n    // 1 sec delay after loss before stats is shown\n    setLoss(false);\n    setTimeout(function () {\n      setWinPage(true);\n    }, 1000);\n  }\n  function whichCompliment() {\n    // determines which compliment to give based on how many guesses player took\n    const firstTrueIndex = Object.entries(doneHash).findIndex(([key, value]) => !value);\n    // console.log(doneHash);\n    // console.log(firstTrueIndex);\n    if (firstTrueIndex != -1) {\n      return firstTrueIndex;\n    } else return 6;\n  }\n  const compliments = [\n  // compliment list\n  \"\", \"Genius\", \"Magnificent\", \"Impressive\", \"Splendid\", \"Great\", \"Phew\"];\n  const {\n    delay,\n    setDelay\n  } = useContext(KeyboardContext);\n  useEffect(() => {\n    if (!winPage) {\n      setTimeout(function () {\n        setDelay(false);\n      }, 1000);\n    }\n  }, [winPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto w-[500px] opacity-100 mb-[110px] ${darkMode ? 'bg-[#121213] text-white' : 'bg-white text-black'} z-0`,\n    children: [guestMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-[60px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-green-600 text-2xl rounded-md p-1 font-bold tracking-widest\",\n        children: \"Guest Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 95\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 23\n    }, this), userMode && !tutorial && !leaderBoard && !profilePage && !settings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-[60px] left-0 flex justify-center w-full z-0\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: ` ${darkMode ? 'text-gray-200' : 'text-gray-500'} text-2xl rounded-md p-1 font-bold tracking-widest cursor-default`,\n        children: userID.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 159\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 83\n    }, this), winCompliment && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: compliments[whichCompliment()] || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 113\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 27\n    }, this), notEnough && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: \"Not enough letters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 109\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 23\n    }, this), wrongWord && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: \"Not in word list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 109\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 23\n    }, this), clickDisabledLeaderBoard && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: \"Login to access leaderboards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 124\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 38\n    }, this), clickDisabledProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: \"Login to access profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 120\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 34\n    }, this), (winPage || delay) && /*#__PURE__*/_jsxDEV(Zoom, {\n      in: winPage,\n      timeout: 500,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-[250px] w-[500px] h-fit rounded-md shadow-xl z-20\",\n        children: /*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 9\n    }, this), winPage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute top-0 left-0 w-screen h-[930px] ${darkMode ? 'bg-black/50' : 'bg-white/50'}  z-10`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 21\n    }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: correctWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 93\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 w-[340px] mx-auto gap-2\",\n      children:\n      //displays grid, simplified immensly\n      Object.entries(doneHash).map(([key, value]) =>\n      /*#__PURE__*/\n      // maps how many rows\n      _jsxDEV(\"div\", {\n        className: \"flex col-span-5 gap-2\",\n        children: value ?\n        /*#__PURE__*/\n        //through debuggin there is a time delay between which makes it so value is true but what is displayed is empty div because guessResults is not populated yet\n        _jsxDEV(_Fragment, {\n          children: [\"   \", guessResults[key.split('Done')[0]] && guessResults[key.split('Done')[0]].length > 0 ? guessResults[key.split('Done')[0]].map((res, ind) =>\n          /*#__PURE__*/\n          // maps how many columns (user input)\n          _jsxDEV(\"div\", {\n            className: `border-2  ${res == 'green' ? colorBlind ? 'CBgreen' : 'green' : res == 'yellow' ? colorBlind ? 'CByellow' : 'yellow' : 'gray'} \n                                    flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white`,\n            children: guesses[key.split('Done')[0]][ind] || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 33\n          }, this)) : [0, 1, 2, 3, 4].map(res =>\n          // maps how many columns (empty input)\n          guesses[key.split('Done')[0]][res] ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\",\n            children: guesses[key.split('Done')[0]][res]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [0, 1, 2, 3, 4].map(res =>\n          // maps how many columns (empty input)\n          guesses[key.split('Done')[0]][res] ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\",\n            children: guesses[key.split('Done')[0]][res]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 29\n          }, this))\n        }, void 0, false)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 477,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"oLjPL0tHUG1xyCNxfPq8an1XZS8=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useContext","raw","KeyboardContext","CloseIcon","ReplayIcon","ShareIcon","Statistics","axios","Zoom","ClickAwayListener","jsxDEV","_jsxDEV","Fragment","_Fragment","Grid","_s","darkMode","colorBlind","setColorBlind","profilePage","showProfilePage","tutorial","showTutorial","leaderBoard","showLeaderBoard","settings","showSettings","userMode","setUserMode","userID","setUserID","kbColor","setKbColor","winPage","setWinPage","guessWon","setGuessWon","winCompliment","setWinCompliment","win","setWin","answer","showAnswer","notEnough","setNotEnough","wrongWord","setWrongWord","wordleList","setWordleList","doneHash","setDoneHash","canEnterHash","setCanEnterHash","guessResults","setGuessResults","existingguessResults","JSON","parse","localStorage","getItem","first","second","third","fourth","fifth","sixth","refHash","loading","setLoading","correctWord","setCorrectWord","guesses","setGuesses","clickDisabledLeaderBoard","setClickDisabledLeaderBoard","clickDisabledProfile","setClickDisabledProfile","guestMode","setGuestMode","guessLength","setGuessLength","loss","setLoss","fetchWords","response","fetch","text","lines","split","slice","length","Math","floor","random","toUpperCase","console","log","onPress","event","key","firstDone","prevGuessLen","prevGuess","secondDone","thirdDone","fourthDone","fifthDone","sixthDone","match","document","addEventListener","removeEventListener","firstCanEnter","includes","toLowerCase","prevDone","secondCanEnter","thirdCanEnter","fourthCanEnter","fifthCanEnter","sixthCanEnter","compareString","str1","str2","indexMatch","i","push","prevCanEnter","greenLetter","dummyWord","guessedWord","greenIndex","offset","parseInt","evalGuess","letter","pos","cheatVar","evaluteGuess","res","ind","newCheatVar","replace","whichguessacc","Object","entries","map","value","place","current","colorGuess","prevResults","newKbColor","reduce","acc","set","Set","values","size","String","existingDoneHash","stringify","setItem","post","then","data","message","catch","err","setTimeout","getElementById","id","whichCompliment","firstTrueIndex","findIndex","compliments","delay","setDelay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","in","timeout","_c","$RefreshReg$"],"sources":["C:/Users/david/wordle-clone/Client/src/components/Grid.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport raw from '../assets/wordle-La.txt'\r\nimport { KeyboardContext } from '../Contexts/KeyboardContext';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport './Grid.css'\r\nimport Statistics from './Statistics';\r\nimport axios from 'axios';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\r\n\r\n\r\n\r\nconst Grid = () => {\r\n    \r\n    const {darkMode} = useContext(KeyboardContext);\r\n    const {colorBlind, setColorBlind} = useContext(KeyboardContext);\r\n    const {profilePage, showProfilePage} = useContext(KeyboardContext);\r\n    const {tutorial, showTutorial} = useContext(KeyboardContext);\r\n    const {leaderBoard, showLeaderBoard} = useContext(KeyboardContext);\r\n    const {settings, showSettings} = useContext(KeyboardContext);\r\n    const {userMode, setUserMode} = useContext(KeyboardContext);\r\n    const {userID, setUserID} = useContext(KeyboardContext);\r\n    const {kbColor, setKbColor} = useContext(KeyboardContext);\r\n    const {winPage, setWinPage} = useContext(KeyboardContext);\r\n    const {guessWon, setGuessWon} = useContext(KeyboardContext);\r\n    const [winCompliment, setWinCompliment] = useState(false);\r\n    const {win, setWin} = useContext(KeyboardContext);\r\n    const {answer, showAnswer} = useContext(KeyboardContext);\r\n    const {notEnough, setNotEnough} = useContext(KeyboardContext);\r\n    const {wrongWord, setWrongWord} = useContext(KeyboardContext);\r\n    const {wordleList, setWordleList} = useContext(KeyboardContext);\r\n    const {doneHash, setDoneHash} = useContext(KeyboardContext);\r\n    const {canEnterHash, setCanEnterHash} = useContext(KeyboardContext);\r\n    const [guessResults, setGuessResults] = useState(() => {\r\n        const existingguessResults = JSON.parse(localStorage.getItem('guessResults'));\r\n        return existingguessResults || {\r\n            first: [], \r\n            second: [], \r\n            third: [], \r\n            fourth: [], \r\n            fifth: [], \r\n            sixth: []\r\n        };\r\n    });\r\n\r\n    const refHash = useRef({first: false, second: false, third: false, fourth: false, fifth: false, sixth: false})\r\n    const [loading, setLoading] = useState(true);\r\n    const [correctWord, setCorrectWord] = useState('');\r\n    const {guesses, setGuesses} = useContext(KeyboardContext);\r\n    const {clickDisabledLeaderBoard, setClickDisabledLeaderBoard} = useContext(KeyboardContext);\r\n    const {clickDisabledProfile, setClickDisabledProfile} = useContext(KeyboardContext);\r\n    const {guestMode, setGuestMode} = useContext(KeyboardContext);\r\n    const {guessLength, setGuessLength} = useContext(KeyboardContext);\r\n    const [loss, setLoss] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => { //loads wordle list\r\n        const fetchWords = async () => { \r\n            const response = await fetch(raw);\r\n            const text = await response.text();\r\n            const lines = text.split('\\r\\n').slice(0, 2315);\r\n            setWordleList(lines)\r\n        };\r\n        fetchWords();\r\n    }, []);\r\n    \r\n    useEffect(() => { //chooses random correct word from wordle list\r\n        if (wordleList.length > 0) {\r\n        setCorrectWord(wordleList[Math.floor(Math.random() * 2315)].toUpperCase());\r\n        // setCorrectWord('BLIMP')\r\n        // console.log(wordleList);\r\n        setLoading(false);\r\n        }\r\n    }, [wordleList])\r\n\r\n    useEffect(() => { // prints correctWord\r\n        if( correctWord )\r\n            console.log('The Correct Word is ' + correctWord)\r\n    }, [correctWord])\r\n\r\n\r\n    useEffect(() => { //Register key press and save to state, del too\r\n        const onPress = (event) => {\r\n            if (event.key === 'Backspace') {\r\n            if (!doneHash.firstDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, first: (prevGuess.first.slice(0, prevGuess.first.length - 1))}))\r\n            } \r\n            else if (!doneHash.secondDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, second: (prevGuess.second.slice(0, prevGuess.second.length - 1))}))\r\n            } \r\n            else if (!doneHash.thirdDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, third: (prevGuess.third.slice(0, prevGuess.third.length - 1))}))\r\n            } \r\n            else if (!doneHash.fourthDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fourth: (prevGuess.fourth.slice(0, prevGuess.fourth.length - 1))}))\r\n            } \r\n            else if (!doneHash.fifthDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fifth: (prevGuess.fifth.slice(0, prevGuess.fifth.length - 1))}))\r\n            } \r\n            else if (!doneHash.sixthDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, sixth: (prevGuess.sixth.slice(0, prevGuess.sixth.length - 1))}))\r\n            } \r\n            } else if (event.key.match(/[a-zA-Z]/) && event.key.length === 1) {\r\n            if (!doneHash.firstDone && guessLength < 5) {\r\n\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                // console.log(guessLength);\r\n                setGuesses( prevGuess => ({ ...prevGuess, first: (prevGuess.first + event.key.toUpperCase())}))\r\n            }\r\n            else if (!doneHash.secondDone && guessLength < 5) {\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, second: (prevGuess.second + event.key.toUpperCase())}))\r\n            } \r\n            else if (!doneHash.thirdDone && guessLength < 5) {\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, third: (prevGuess.third + event.key.toUpperCase())}))\r\n            } \r\n            else if (!doneHash.fourthDone && guessLength < 5) {\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fourth: (prevGuess.fourth + event.key.toUpperCase())}))\r\n            } \r\n            else if (!doneHash.fifthDone && guessLength < 5) {\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fifth: (prevGuess.fifth + event.key.toUpperCase())}))\r\n            } \r\n            else if (!doneHash.sixthDone && guessLength < 5) {\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, sixth: (prevGuess.sixth + event.key.toUpperCase())}))\r\n            }\r\n            } \r\n        };\r\n        if(!win) {\r\n            // Attach event listener\r\n            document.addEventListener('keydown', onPress);\r\n        \r\n            // Cleanup function to remove event listener\r\n            return () => {\r\n            document.removeEventListener('keydown', onPress);\r\n            };\r\n        }\r\n    }, [win, guessLength, doneHash]); // Depend only on the completion status\r\n\r\n    useEffect(() => { // 'Enter' Key Functionality\r\n        const onPress = (event) => {\r\n            if (event.key === 'Enter') {\r\n                if (!doneHash.firstDone) {\r\n                    if (canEnterHash.firstCanEnter) {\r\n                        if (wordleList.includes(guesses.first.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, firstDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!doneHash.secondDone) {\r\n                    if (canEnterHash.secondCanEnter) {\r\n                        if (wordleList.includes(guesses.second.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, secondDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!doneHash.thirdDone) {\r\n                    if (canEnterHash.thirdCanEnter) {\r\n                        if (wordleList.includes(guesses.third.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, thirdDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!doneHash.fourthDone) {\r\n                    if (canEnterHash.fourthCanEnter) {\r\n                        if (wordleList.includes(guesses.fourth.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, fourthDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!doneHash.fifthDone) {\r\n                    if (canEnterHash.fifthCanEnter) {\r\n                        if (wordleList.includes(guesses.fifth.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, fifthDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!doneHash.sixthDone) {\r\n                    if (canEnterHash.sixthCanEnter) {\r\n                        if (wordleList.includes(guesses.sixth.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, sixthDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n            }\r\n        }\r\n        if (!win) {\r\n            document.addEventListener('keydown', onPress);\r\n            return () => {\r\n            document.removeEventListener('keydown', onPress);\r\n            };\r\n        }\r\n    },[win, doneHash, canEnterHash])\r\n    \r\n    const compareString = (str1, str2) => { // compare guess to correctword, return arr of index of green ( ex '135' so first third and fifth are green)\r\n        var indexMatch = [];\r\n        for (let i = 0; i < str1.length; i++) {\r\n            if (str1[i] == str2[i]) {\r\n                indexMatch.push(i);\r\n            }\r\n        } return indexMatch;\r\n    }\r\n    \r\n    useEffect(() => { // evaluates whether user can press enter as a valid guess, length 5\r\n        // console.log(guesses.first)\r\n        if (!doneHash.firstDone) {\r\n            if (guesses.first.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, firstCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, firstCanEnter: false}));\r\n        }\r\n        else if (!doneHash.secondDone) {\r\n            if (guesses.second.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, secondCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, secondCanEnter: false}));\r\n        }\r\n        else if (!doneHash.thirdDone) {\r\n            if (guesses.third.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, thirdCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, thirdCanEnter: false}));\r\n        }\r\n        else if (!doneHash.fourthDone) {\r\n            if (guesses.fourth.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, fourthCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, fourthCanEnter: false}));\r\n        }\r\n        else if (!doneHash.fifthDone) {\r\n            if (guesses.fifth.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, fifthCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, fifthCanEnter: false}));\r\n        }\r\n        else if (!doneHash.sixthDone) {\r\n            if (guesses.sixth.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, sixthCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, sixthCanEnter: false}));\r\n        }\r\n    }, [guesses])\r\n\r\n    const greenLetter = (dummyWord, guessedWord) => { //looks for green first\r\n        const greenIndex = compareString(correctWord, guessedWord); // arry of green index\r\n        var offset = 0;\r\n        for (let i = 0; i < greenIndex.length; i++) {\r\n            dummyWord = dummyWord.slice(0, [parseInt(greenIndex[i]) - offset]) + dummyWord.slice(parseInt(greenIndex[i]) + 1 - offset);\r\n            // console.log(dummyWord)\r\n            offset++;\r\n        }\r\n        return dummyWord;\r\n    }\r\n\r\n    const evalGuess = (dummyWord, letter, pos) => { //assign letter green, yellow, or gray\r\n        if (letter == correctWord[pos]) {\r\n            return 'green';\r\n        } else if (dummyWord.includes(letter)) {\r\n            return 'yellow';\r\n        } else {\r\n            return 'gray';\r\n        }\r\n    }\r\n\r\n    var cheatVar;\r\n\r\n    const evaluteGuess = (res, ind) => { //helper func for evaluating guess\r\n        if (guessResults.first) {\r\n            const newCheatVar = cheatVar;\r\n            cheatVar = cheatVar.replace(res, '')\r\n            return evalGuess(newCheatVar, res, ind) //check for green, yellow and gray\r\n        }\r\n    }\r\n\r\n    const whichguessacc = useRef(1); // use ref to keep track of variable between useEffect renders\r\n    useEffect(() => { // evaluates guess, sets when user wins or loses\r\n\r\n\r\n\r\n        Object.entries(doneHash).map(([ key, value ]) => {\r\n            const place = key.split('Done')[0] // removes Done from key like firstDone leaving first to access value of other hashmap\r\n            if (value && !refHash.current[place]) { //player has made first guess\r\n                \r\n                cheatVar = greenLetter(correctWord, guesses[place])\r\n                const colorGuess = guesses[place].split('').map((res, ind) => ( // gets color mapping for each letter guess\r\n                    evaluteGuess(res, ind)\r\n                ))\r\n                setGuessResults(prevResults => ({\r\n                    ...prevResults,\r\n                    [place] : [...prevResults[place], ...colorGuess]\r\n                }));\r\n                // console.log(colorGuess)\r\n                // console.log(guesses.first)\r\n                let newKbColor = guesses[place].split('').reduce((acc, res, ind) => { //removes duplicates to map to keyboard (ex. plump) only one color for p.\r\n                    if ( acc[res] == 'green' || acc[res] == 'yellow') {\r\n                        \r\n                            // green and yellow get priority over gray so don't overwrite. \r\n                            // (ex blimp and guess is booby, first b is green so don't overwrite with second b which is gray.)\r\n                            // (ex blimp and guess is poppy, first p is yellow so don't overwrite with second or third p which is gray.)\r\n                        \r\n                    } else \r\n                    acc[res] = colorGuess[ind];\r\n                    return acc;\r\n                }, {});\r\n                // console.log(newKbColor)\r\n                setKbColor(prevResults => [\r\n                    ...prevResults,\r\n                    { ...newKbColor }\r\n                ])\r\n                const set = new Set(Object.values(newKbColor))\r\n                const first = [...set][0]\r\n                if (set.size == 1 && first == 'green') {\r\n                    setWin(true);\r\n                    setGuessWon('guess' + String(whichguessacc.current));\r\n                } else if ( place == \"sixth\" ){\r\n                    showAnswer(true);\r\n                    setLoss(true);\r\n                }\r\n                whichguessacc.current += 1;\r\n\r\n                refHash.current[place] = true;\r\n            }\r\n        })\r\n       \r\n    }, [doneHash]);\r\n\r\n\r\n    useEffect(() => {\r\n        const existingDoneHash = JSON.parse(localStorage.getItem('doneHash')) || {\r\n            firstDone: false, \r\n            secondDone: false, \r\n            thirdDone: false, \r\n            fourthDone: false, \r\n            fifthDone: false, \r\n            sixthDone: false\r\n        };\r\n        if (JSON.stringify(existingDoneHash) !== JSON.stringify(doneHash)) localStorage.setItem('doneHash', JSON.stringify(doneHash));\r\n    }, [doneHash])\r\n\r\n    useEffect(() => {\r\n        const existingguessResults = JSON.parse(localStorage.getItem('guessResults')) || {\r\n            first: [], \r\n            second: [], \r\n            third: [], \r\n            fourth: [], \r\n            fifth: [], \r\n            sixth: []\r\n        };\r\n        if (JSON.stringify(existingguessResults) !== JSON.stringify(guessResults)) localStorage.setItem('guessResults', JSON.stringify(guessResults));\r\n        localStorage.setItem('guesses', JSON.stringify(guesses));\r\n        \r\n    }, [guessResults])\r\n\r\n    useEffect(() => {\r\n        \r\n        localStorage.setItem('kbColor', JSON.stringify(kbColor));\r\n        \r\n    }, [kbColor])\r\n\r\n    useEffect(() => { // update stats after game finish\r\n        if (win ^ answer) {\r\n            axios.post('http://localhost:8081/updateStats', {...userID, win: win, guessWon: guessWon})\r\n            .then(res => {\r\n                console.log(res.data.message)\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }, [win, answer])\r\n\r\n    useEffect(() => { // 1 sec delay after win before stats is shown\r\n        if (win) {\r\n            setWinCompliment(true);\r\n            setTimeout(() => {\r\n                /* Code to run after 4 seconds */\r\n                // alert('wow you have brain')\r\n                setWinPage(true);\r\n            }, 1000)\r\n        }\r\n    }, [win])\r\n\r\n    if(winCompliment) { // show win compliment and fade out\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setWinCompliment(false);\r\n            }, 5000);\r\n    }\r\n\r\n    if(notEnough) { // show not enoguh letters prompt and fade out\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setNotEnough(false);\r\n\r\n            }, 5000);\r\n\r\n    }\r\n\r\n    if (wrongWord) { // show wrong word prompt and fade out\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setWrongWord(false);\r\n            }, 5000);\r\n    }\r\n\r\n    if (clickDisabledLeaderBoard) { // show disabled leadeboard prompt and fade out\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setClickDisabledLeaderBoard(false);\r\n            }, 2000);\r\n    }\r\n\r\n    if (clickDisabledProfile) { // show disabled profile prompt and fade out\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setClickDisabledProfile(false);\r\n            }, 2000);\r\n    }\r\n\r\n    if (loss) { // 1 sec delay after loss before stats is shown\r\n        setLoss(false);\r\n        setTimeout(function() {\r\n            setWinPage(true);\r\n        }, 1000);\r\n        \r\n    }\r\n\r\n    function whichCompliment() { // determines which compliment to give based on how many guesses player took\r\n        const firstTrueIndex = Object.entries(doneHash).findIndex(([key, value]) => !value);\r\n        // console.log(doneHash);\r\n        // console.log(firstTrueIndex);\r\n        if (firstTrueIndex != -1) {\r\n            return firstTrueIndex;\r\n        } else return 6;\r\n    }\r\n\r\n    const compliments = [ // compliment list\r\n        \"\",               \r\n        \"Genius\",        \r\n        \"Magnificent\",   \r\n        \"Impressive\",    \r\n        \"Splendid\",     \r\n        \"Great\",        \r\n        \"Phew\"          \r\n    ];\r\n\r\n    const {delay, setDelay} = useContext(KeyboardContext);\r\n    \r\n    useEffect(() => {\r\n        if (!winPage) {\r\n            setTimeout(function() {\r\n                setDelay(false);\r\n                }, 1000);\r\n        }\r\n    }, [winPage])\r\n\r\n    \r\n    \r\n\r\n  return (\r\n    <div className={`mx-auto w-[500px] opacity-100 mb-[110px] ${darkMode ? 'bg-[#121213] text-white' : 'bg-white text-black'} z-0`}>\r\n\r\n        {guestMode && <div className='absolute top-[60px] left-0 flex justify-center w-full'> <span className='text-green-600 text-2xl rounded-md p-1 font-bold tracking-widest'>Guest Mode</span> </div>}\r\n\r\n        {userMode && (!tutorial && !leaderBoard && !profilePage && !settings ) && <div className='absolute top-[60px] left-0 flex justify-center w-full z-0'> <button className={` ${darkMode ?'text-gray-200' : 'text-gray-500' } text-2xl rounded-md p-1 font-bold tracking-widest cursor-default`}>{userID.username}</button> </div>}\r\n\r\n        {winCompliment && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>{compliments[whichCompliment()] || ''}</span> </div>}\r\n\r\n        {notEnough && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>Not enough letters</span> </div>}\r\n\r\n        {wrongWord && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>Not in word list</span> </div>}\r\n\r\n        {clickDisabledLeaderBoard && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>Login to access leaderboards</span> </div>}\r\n\r\n        {clickDisabledProfile && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>Login to access profile</span> </div>}\r\n\r\n                \r\n        {/* {winPage && <div className=''> <Statistics /> </div>\r\n        } */}\r\n    {/* {winPage || delay &&  */}\r\n\r\n    {/* <ClickAwayListener onClickAway={handleClickAway}> */}\r\n\r\n        {(winPage || delay )&& \r\n        <Zoom in={winPage} timeout={500}>\r\n            <div className='absolute top-[250px] w-[500px] h-fit rounded-md shadow-xl z-20' >\r\n                <Statistics /> \r\n            </div>\r\n        </Zoom>\r\n        }\r\n\r\n\r\n                {/* {winPage && \r\n                <>  \r\n                    <div className='absolute top-[250px] w-[500px] h-fit rounded-md shadow-xl bg-white z-20' >\r\n                        <Statistics /> \r\n                    </div>\r\n                    <div className='absolute top-0 left-0 w-screen h-[1000px] bg-white/50 z-10'>\r\n                     </div>\r\n                </>\r\n                } */}\r\n\r\n        {/* </ClickAwayListener> */}\r\n\r\n    {/* } */}\r\n\r\n        {winPage && <div className={`absolute top-0 left-0 w-screen h-[930px] ${darkMode ? 'bg-black/50' : 'bg-white/50'}  z-10`}>\r\n            </div> }\r\n\r\n        {answer && <div className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>{correctWord}</span> </div>}\r\n\r\n        <div className='grid grid-cols-5 w-[340px] mx-auto gap-2'>\r\n\r\n            { //displays grid, simplified immensly\r\n            Object.entries(doneHash).map(([key, value]) => ( // maps how many rows\r\n                <div key={key}className='flex col-span-5 gap-2'>\r\n                    {value ? //through debuggin there is a time delay between which makes it so value is true but what is displayed is empty div because guessResults is not populated yet\r\n                    <>   {/* // The div the player guessed in would become 0 because while value == true, guessResults state hadn't updated and so it essentially rendered an empty div which cause the first div to shrink to h-0 and thus only the 2,3,4,5,6 divs rendered, thats why it looked like the bottom div disappeared.*/}\r\n                        {guessResults[key.split('Done')[0]] && guessResults[key.split('Done')[0]].length > 0 ?\r\n                            (guessResults[key.split('Done')[0]].map((res, ind) => ( // maps how many columns (user input)\r\n                                <div  className= { `border-2  ${\r\n                                    res == 'green' ? ( colorBlind ? 'CBgreen' : 'green' ) :  \r\n                                    res == 'yellow' ? ( colorBlind ? 'CByellow' : 'yellow' ) : \r\n                                    'gray' } \r\n                                    flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                                    {guesses[key.split('Done')[0]][ind] || ''}\r\n                                </div>\r\n                            )))  : [0,1,2,3,4].map((res) => ( // maps how many columns (empty input)\r\n                                guesses[key.split('Done')[0]][res]\r\n                                ? \r\n                                <div  className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                                    {guesses[key.split('Done')[0]][res]}\r\n                                </div>\r\n                                : \r\n                                <div  className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                                </div>\r\n                            \r\n                            ))\r\n                            }\r\n                    </>\r\n                    :   \r\n                    <>\r\n                        {[0,1,2,3,4].map((res) => ( // maps how many columns (empty input)\r\n                            guesses[key.split('Done')[0]][res]\r\n                            ? \r\n                            <div  className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                                {guesses[key.split('Done')[0]][res]}\r\n                            </div>\r\n                            : \r\n                            <div  className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                            </div>\r\n                        \r\n                        ))}\r\n                    </>\r\n                    }\r\n                </div>\r\n            ))\r\n        }\r\n        \r\n        </div>\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}