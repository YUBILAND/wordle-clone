{"ast":null,"code":"/*! For license information please see index.js.LICENSE.txt */\n!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define([], e) : \"object\" == typeof exports ? exports.SimpleKeyboardInputMask = e() : t.SimpleKeyboardInputMask = e();\n}(self, () => (() => {\n  \"use strict\";\n\n  var t = {\n      d: (e, n) => {\n        for (var o in n) t.o(n, o) && !t.o(e, o) && Object.defineProperty(e, o, {\n          enumerable: !0,\n          get: n[o]\n        });\n      },\n      o: (t, e) => Object.prototype.hasOwnProperty.call(t, e),\n      r: t => {\n        \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n          value: \"Module\"\n        }), Object.defineProperty(t, \"__esModule\", {\n          value: !0\n        });\n      }\n    },\n    e = {};\n  function n(t, e) {\n    var n = Object.keys(t);\n    if (Object.getOwnPropertySymbols) {\n      var o = Object.getOwnPropertySymbols(t);\n      e && (o = o.filter(function (e) {\n        return Object.getOwnPropertyDescriptor(t, e).enumerable;\n      })), n.push.apply(n, o);\n    }\n    return n;\n  }\n  function o(t) {\n    for (var e, o = 1; o < arguments.length; o++) e = null == arguments[o] ? {} : arguments[o], o % 2 ? n(Object(e), !0).forEach(function (n) {\n      u(t, n, e[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(e)) : n(Object(e)).forEach(function (n) {\n      Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(e, n));\n    });\n    return t;\n  }\n  function i(t) {\n    return i = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (t) {\n      return typeof t;\n    } : function (t) {\n      return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n    }, i(t);\n  }\n  function r(t, e) {\n    for (var n, o = 0; o < e.length; o++) (n = e[o]).enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);\n  }\n  function a(t, e, n) {\n    return e && r(t.prototype, e), n && r(t, n), Object.defineProperty(t, \"prototype\", {\n      writable: !1\n    }), t;\n  }\n  function u(t, e, n) {\n    return e in t ? Object.defineProperty(t, e, {\n      value: n,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : t[e] = n, t;\n  }\n  t.r(e), t.d(e, {\n    default: () => s\n  });\n  const s = a(function t() {\n    (function (t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    })(this, t), u(this, \"init\", function (t) {\n      t.registerModule(\"inputMask\", function (e) {\n        return e.inputClass = t.options.inputMaskTargetClass || \"input\", e.currentButton = \"\", e.fn = {}, t.options.inputMask ? (!t.options.disableCaretPositioning && (console.warn(\"SimpleKeyboardInputMask: Caret placement is not supported in this release. Option disableCaretPositioning will be enabled. To disable this warning, set option disableCaretPositioning to true.\"), t.options.disableCaretPositioning = !0), e.isMaskingEnabled = function () {\n          var e = t.options.inputMask;\n          return !!(\"object\" === i(e) && e[t.options.inputName] && e[t.options.inputName].mask && e[t.options.inputName].regex);\n        }, e.getInputMaskStr = function () {\n          var n = t.options,\n            o = n.inputMask,\n            i = n.inputName;\n          return e.isMaskingEnabled() ? o[i].mask : \"\";\n        }, e.getInputMaskRegex = function () {\n          var n = t.options,\n            o = n.inputMask,\n            i = n.inputName;\n          return e.isMaskingEnabled() ? o[i].regex : \"\";\n        }, e.getMaskedInput = function (n, o, i) {\n          var r = e.autoAddSymbol(i, o, n);\n          o = r.input || o, i = r.caretPos || i;\n          var a = e.fn.getUpdatedInput(n, o, i, i, !1);\n          return e.validateInputProposal(a, i) ? e.fn.getUpdatedInput(n, o, i, i, !0) : t.getInput();\n        }, e.validateInputProposal = function (t, n) {\n          var o = e.getInputMaskStr();\n          if (t && \"string\" == typeof t && o && \"string\" == typeof t) {\n            var i = t.split(\"\");\n            return e.isCharAllowed(i[n || 0]);\n          }\n          return !1;\n        }, e.isCharAllowed = function (t) {\n          return t && !!t.match(e.getInputMaskRegex());\n        }, e.isBksp = function (t) {\n          return \"{bksp}\" === t || \"{backspace}\" === t;\n        }, e.autoAddSymbol = function (n, o, i) {\n          var r = e.getInputMaskStr();\n          n = o.trim() || n ? o.length : 0;\n          var a = r.split(\"\");\n          return void 0 !== a[n] && null === a[n].match(e.getInputMaskRegex()) ? (o = t.utilities.addStringAt(o, a[n], n, n, !0), e.autoAddSymbol(n++, o, i)) : {\n            input: o,\n            caretPos: n\n          };\n        }, e.onKeyPressed = function (n) {\n          if (!e.isMaskingEnabled()) return !1;\n          var o = n.target.classList.contains(e.inputClass);\n          if (!o) return !1;\n          t.options.debug && console.log(\"isInputTarget\", o), t.options.debug && console.log(\"input\", n);\n          var i = t.physicalKeyboard.getSimpleKeyboardLayoutKey(n);\n          i && i.includes(\"numpad\") && (i = i.replace(\"numpad\", \"\"));\n          var r = t.getButtonElement(i) || t.getButtonElement(\"{\".concat(i, \"}\"));\n          if (r) {\n            var a = r.classList.contains(\"hg-functionBtn\"),\n              u = a ? \"{\".concat(i, \"}\") : i;\n            if (a && (i.includes(\"shift\") || i.includes(\"caps\"))) return !1;\n            t.options.debug && console.log(\"layoutKeyFormatted\", u), t.handleButtonClicked(u), n.target.value = \"\", n.target.value = t.getInput();\n          }\n          t.options.debug && console.log(i, r);\n        }, e.initInputHandling = function () {\n          document.addEventListener(\"keyup\", e.onKeyPressed);\n        }, e.destroy = function () {\n          document.removeEventListener(\"keyup\", e.onKeyPressed);\n        }, e.fn.getUpdatedInput = t.utilities.getUpdatedInput, t.utilities.getUpdatedInput = function (n, i, r, a) {\n          var s = !!(4 < arguments.length && void 0 !== arguments[4]) && arguments[4];\n          if (e.isMaskingEnabled() && !e.isBksp(n)) {\n            var p = t.options,\n              l = p.maxLength,\n              c = void 0 === l ? {} : l,\n              d = p.inputName;\n            t.setOptions({\n              maxLength: o(o({}, c), {}, u({}, d, e.getInputMaskStr().length))\n            });\n            var f = e.getMaskedInput(n, i, r);\n            return f;\n          }\n          return e.fn.getUpdatedInput(n, i, r, a, s);\n        }, void (t.options.inputMaskPhysicalKeyboardHandling && e.initInputHandling())) : (console.warn(\"SimpleKeyboardInputMask: You must provide the inputMask option with your input mask\"), !1);\n      });\n    });\n  });\n  return e;\n})());","map":{"version":3,"names":["t","e","exports","module","define","amd","SimpleKeyboardInputMask","self","d","__webpack_require__","n","o","Object","defineProperty","enumerable","get","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","arguments","length","forEach","u","getOwnPropertyDescriptors","defineProperties","i","iterator","constructor","configurable","writable","key","a","default","s","TypeError","registerModule","inputClass","options","inputMaskTargetClass","currentButton","fn","inputMask","disableCaretPositioning","console","warn","isMaskingEnabled","inputName","mask","regex","getInputMaskStr","getInputMaskRegex","getMaskedInput","autoAddSymbol","input","caretPos","getUpdatedInput","validateInputProposal","getInput","split","isCharAllowed","match","isBksp","trim","utilities","addStringAt","onKeyPressed","target","classList","contains","debug","log","physicalKeyboard","getSimpleKeyboardLayoutKey","includes","replace","getButtonElement","concat","handleButtonClicked","initInputHandling","document","addEventListener","destroy","removeEventListener","p","l","maxLength","c","setOptions","f","inputMaskPhysicalKeyboardHandling"],"sources":["webpack://SimpleKeyboardInputMask/webpack/universalModuleDefinition","webpack://SimpleKeyboardInputMask/webpack/bootstrap","webpack://SimpleKeyboardInputMask/webpack/runtime/define property getters","webpack://SimpleKeyboardInputMask/webpack/runtime/hasOwnProperty shorthand","webpack://SimpleKeyboardInputMask/webpack/runtime/make namespace object","webpack://SimpleKeyboardInputMask/src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleKeyboardInputMask\"] = factory();\n\telse\n\t\troot[\"SimpleKeyboardInputMask\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","class SimpleKeyboardInputMask {\n  init = keyboard => {\n    keyboard.registerModule(\"inputMask\", module => {\n      module.inputClass = keyboard.options.inputMaskTargetClass || \"input\";\n      module.currentButton = \"\";\n      module.fn = {};\n\n      if (!keyboard.options.inputMask) {\n        console.warn(\n          \"SimpleKeyboardInputMask: You must provide the inputMask option with your input mask\"\n        );\n        return false;\n      }\n\n      if (!keyboard.options.disableCaretPositioning) {\n        console.warn(\n          \"SimpleKeyboardInputMask: Caret placement is not supported in this release. Option disableCaretPositioning will be enabled. To disable this warning, set option disableCaretPositioning to true.\"\n        );\n        keyboard.options.disableCaretPositioning = true;\n      }\n\n      module.isMaskingEnabled = () => {\n        const { inputMask } = keyboard.options;\n        return !!(\n          typeof inputMask === \"object\" &&\n          inputMask[keyboard.options.inputName] &&\n          inputMask[keyboard.options.inputName].mask &&\n          inputMask[keyboard.options.inputName].regex\n        );\n      };\n\n      module.getInputMaskStr = () => {\n        const { inputMask, inputName } = keyboard.options;\n        return module.isMaskingEnabled() ? inputMask[inputName].mask : \"\";\n      };\n\n      module.getInputMaskRegex = () => {\n        const { inputMask, inputName } = keyboard.options;\n        return module.isMaskingEnabled() ? inputMask[inputName].regex : \"\";\n      };\n\n      /**\n       * getMaskedInput\n       */\n      module.getMaskedInput = (button, input, caretPos) => {\n        let overrides = module.autoAddSymbol(caretPos, input, button);\n        let resultingInput = \"\";\n\n        input = overrides.input || input;\n        caretPos = overrides.caretPos || caretPos;\n\n        let inputProposal = module.fn.getUpdatedInput(\n          button,\n          input,\n          caretPos,\n          caretPos,\n          false\n        );\n\n        if (module.validateInputProposal(inputProposal, caretPos)) {\n          resultingInput = module.fn.getUpdatedInput(\n            button,\n            input,\n            caretPos,\n            caretPos,\n            true\n          );\n        } else {\n          resultingInput = keyboard.getInput();\n        }\n\n        return resultingInput;\n      };\n\n      module.validateInputProposal = (inputProposal, caretPos) => {\n        const inputMask = module.getInputMaskStr();\n\n        if (\n          inputProposal &&\n          typeof inputProposal === \"string\" &&\n          inputMask &&\n          typeof inputProposal === \"string\"\n        ) {\n          let inputPropArr = inputProposal.split(\"\");\n          let i = caretPos || 0;\n\n          return module.isCharAllowed(inputPropArr[i]);\n        } else {\n          return false;\n        }\n      };\n\n      module.isCharAllowed = character => {\n        return character && !!character.match(module.getInputMaskRegex());\n      };\n\n      module.isBksp = button => {\n        return button === \"{bksp}\" || button === \"{backspace}\";\n      };\n\n      /**\n       * autoAddSymbol\n       */\n      module.autoAddSymbol = (caretPos, input, button) => {\n        const inputMaskStr = module.getInputMaskStr();\n\n        if (!input.trim() && !caretPos) {\n          caretPos = 0;\n        } else {\n          caretPos = input.length;\n        }\n\n        let inputMaskArr = inputMaskStr.split(\"\");\n\n        //for (let i = caretPos; i < inputMaskArr.length; i++) {\n        if (\n          // If exists in mask\n          typeof inputMaskArr[caretPos] !== \"undefined\" &&\n          // But it is not according to regex\n          inputMaskArr[caretPos].match(module.getInputMaskRegex()) === null\n        ) {\n          input = keyboard.utilities.addStringAt(\n            input,\n            inputMaskArr[caretPos],\n            caretPos,\n            caretPos,\n            true\n          );\n\n          // if (!keyboard.options.disableCaretPositioning) {\n          //   keyboard.setCaretPosition(i);\n          // }\n\n          return module.autoAddSymbol(caretPos++, input, button);\n        } else {\n          return {\n            input,\n            caretPos\n          };\n        }\n        //}\n      };\n\n      module.onKeyPressed = e => {\n        if (!module.isMaskingEnabled()) return false;\n\n        let isInputTarget = e.target.classList.contains(module.inputClass);\n        if (!isInputTarget) return false;\n\n        if (keyboard.options.debug) console.log(\"isInputTarget\", isInputTarget);\n        if (keyboard.options.debug) console.log(\"input\", e);\n\n        let layoutKey = keyboard.physicalKeyboard.getSimpleKeyboardLayoutKey(e);\n        if (layoutKey && layoutKey.includes(\"numpad\"))\n          layoutKey = layoutKey.replace(\"numpad\", \"\");\n\n        let buttonElement =\n          keyboard.getButtonElement(layoutKey) ||\n          keyboard.getButtonElement(`{${layoutKey}}`);\n\n        if (buttonElement) {\n          let isFctBtn = buttonElement.classList.contains(\"hg-functionBtn\");\n          let layoutKeyFormatted = isFctBtn ? `{${layoutKey}}` : layoutKey;\n\n          if (\n            isFctBtn &&\n            (layoutKey.includes(\"shift\") || layoutKey.includes(\"caps\"))\n          ) {\n            return false;\n          }\n\n          if (keyboard.options.debug)\n            console.log(\"layoutKeyFormatted\", layoutKeyFormatted);\n\n          keyboard.handleButtonClicked(layoutKeyFormatted);\n\n          e.target.value = \"\";\n          e.target.value = keyboard.getInput();\n        }\n\n        if (keyboard.options.debug) console.log(layoutKey, buttonElement);\n      };\n\n      module.initInputHandling = () => {\n        document.addEventListener(\"keyup\", module.onKeyPressed);\n      };\n\n      module.destroy = () => {\n        document.removeEventListener(\"keyup\", module.onKeyPressed);\n      };\n\n      module.fn.getUpdatedInput = keyboard.utilities.getUpdatedInput;\n      keyboard.utilities.getUpdatedInput = (\n        button,\n        input,\n        caretPos,\n        caretPosEnd,\n        moveCaret = false\n      ) => {\n        /**\n         * If masking is enabled for input\n         */\n        if (module.isMaskingEnabled() && !module.isBksp(button)) {\n          /**\n           * Enforce maxLength\n           */\n          const { maxLength = {}, inputName } = keyboard.options;\n          keyboard.setOptions({\n            maxLength: {\n              ...maxLength,\n              [inputName]: module.getInputMaskStr().length\n            }\n          });\n\n          var ipt = module.getMaskedInput(button, input, caretPos);\n          return ipt;\n        } else {\n          return module.fn.getUpdatedInput(\n            button,\n            input,\n            caretPos,\n            caretPosEnd,\n            moveCaret\n          );\n        }\n      };\n\n      /**\n       * Initializing listeners\n       */\n      if (keyboard.options.inputMaskPhysicalKeyboardHandling) {\n        module.initInputHandling();\n      }\n    });\n  };\n}\n\nexport default SimpleKeyboardInputMask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}