{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\wordle-clone\\\\Client\\\\src\\\\components\\\\Grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useContext } from 'react';\nimport raw from '../assets/wordle-La.txt';\nimport { KeyboardContext } from '../Contexts/KeyboardContext';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport ShareIcon from '@mui/icons-material/Share';\nimport './Grid.css';\nimport Statistics from './Statistics';\nimport axios from 'axios';\nimport Zoom from '@mui/material/Zoom';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Grid = () => {\n  _s();\n  // const [kbColor, setKbColor] = useState({});\n  const {\n    darkMode\n  } = useContext(KeyboardContext);\n  const {\n    userMode,\n    setUserMode\n  } = useContext(KeyboardContext);\n  const {\n    userID,\n    setUserID\n  } = useContext(KeyboardContext);\n  const {\n    setKbColor\n  } = useContext(KeyboardContext);\n  const {\n    winPage,\n    setWinPage\n  } = useContext(KeyboardContext);\n  const {\n    guessWon,\n    setGuessWon\n  } = useContext(KeyboardContext);\n  const [winCompliment, setWinCompliment] = useState(false);\n  const {\n    win,\n    setWin\n  } = useContext(KeyboardContext);\n  const [answer, showAnswer] = useState(false);\n  const {\n    notEnough,\n    setNotEnough\n  } = useContext(KeyboardContext);\n  const {\n    wrongWord,\n    setWrongWord\n  } = useContext(KeyboardContext);\n  const {\n    wordleList,\n    setWordleList\n  } = useContext(KeyboardContext);\n  const {\n    doneHash,\n    setDoneHash\n  } = useContext(KeyboardContext);\n  const {\n    canEnterHash,\n    setCanEnterHash\n  } = useContext(KeyboardContext);\n  const [guessResults, setGuessResults] = useState({\n    first: [],\n    second: [],\n    third: [],\n    fourth: [],\n    fifth: [],\n    sixth: []\n  });\n  const firstRef = useRef(false);\n  const secondRef = useRef(false);\n  const thirdRef = useRef(false);\n  const fourthRef = useRef(false);\n  const fifthRef = useRef(false);\n  const sixthRef = useRef(false);\n  const [loading, setLoading] = useState(true);\n  const [correctWord, setCorrectWord] = useState('');\n\n  // const[guesses, setGuesses] = useState({first: '', second: '', third: '', fourth: '', fifth: '', sixth: ''});\n  const {\n    guesses,\n    setGuesses\n  } = useContext(KeyboardContext);\n  const [dummyWords, setDummyWords] = useState({\n    first: '',\n    second: '',\n    third: '',\n    fourth: '',\n    fifth: '',\n    sixth: ''\n  });\n  const {\n    clickDisabledLeaderBoard,\n    setClickDisabledLeaderBoard\n  } = useContext(KeyboardContext);\n  const {\n    clickDisabledProfile,\n    setClickDisabledProfile\n  } = useContext(KeyboardContext);\n  const {\n    guestMode,\n    setGuestMode\n  } = useContext(KeyboardContext);\n  useEffect(() => {\n    const fetchWords = async () => {\n      const response = await fetch(raw);\n      const text = await response.text();\n      const lines = text.split('\\r\\n').slice(0, 2315);\n      setWordleList(lines);\n    };\n    fetchWords();\n  }, []);\n  useEffect(() => {\n    if (wordleList.length > 0) {\n      setCorrectWord(wordleList[Math.floor(Math.random() * 2315)].toUpperCase());\n      console.log(wordleList);\n      setLoading(false);\n    }\n  }, [wordleList]);\n  useEffect(() => {\n    setDummyWords({\n      first: correctWord\n    });\n    if (correctWord) console.log(correctWord);\n  }, [correctWord]);\n  const {\n    guessLength,\n    setGuessLength\n  } = useContext(KeyboardContext);\n\n  // var guessLength = 0;\n\n  useEffect(() => {\n    const onPress = event => {\n      if (event.key === 'Backspace') {\n        if (!doneHash.firstDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            first: prevGuess.first.slice(0, prevGuess.first.length - 1)\n          }));\n        } else if (!doneHash.secondDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            second: prevGuess.second.slice(0, prevGuess.second.length - 1)\n          }));\n        } else if (!doneHash.thirdDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            third: prevGuess.third.slice(0, prevGuess.third.length - 1)\n          }));\n        } else if (!doneHash.fourthDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fourth: prevGuess.fourth.slice(0, prevGuess.fourth.length - 1)\n          }));\n        } else if (!doneHash.fifthDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fifth: prevGuess.fifth.slice(0, prevGuess.fifth.length - 1)\n          }));\n        } else if (!doneHash.sixthDone && guessLength > 0) {\n          setGuessLength(prevGuessLen => prevGuessLen - 1);\n          // guessLength -= 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            sixth: prevGuess.sixth.slice(0, prevGuess.sixth.length - 1)\n          }));\n        }\n      } else if (event.key.match(/[a-zA-Z]/) && event.key.length === 1) {\n        if (!doneHash.firstDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          // console.log(guessLength);\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            first: prevGuess.first + event.key.toUpperCase()\n          }));\n        } else if (!doneHash.secondDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            second: prevGuess.second + event.key.toUpperCase()\n          }));\n        } else if (!doneHash.thirdDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            third: prevGuess.third + event.key.toUpperCase()\n          }));\n        } else if (!doneHash.fourthDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fourth: prevGuess.fourth + event.key.toUpperCase()\n          }));\n        } else if (!doneHash.fifthDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            fifth: prevGuess.fifth + event.key.toUpperCase()\n          }));\n        } else if (!doneHash.sixthDone && guessLength < 5) {\n          setGuessLength(prevGuessLen => prevGuessLen + 1);\n          // guessLength += 1;\n          setGuesses(prevGuess => ({\n            ...prevGuess,\n            sixth: prevGuess.sixth + event.key.toUpperCase()\n          }));\n        }\n      }\n    };\n    if (!win) {\n      // Attach event listener\n      document.addEventListener('keydown', onPress);\n\n      // Cleanup function to remove event listener\n      return () => {\n        document.removeEventListener('keydown', onPress);\n      };\n    }\n  }, [win, guessLength, doneHash]); // Depend only on the completion status\n\n  useEffect(() => {\n    const onPress = event => {\n      if (event.key === 'Enter') {\n        if (!doneHash.firstDone) {\n          if (canEnterHash.firstCanEnter) {\n            if (wordleList.includes(guesses.first.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                firstDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!doneHash.secondDone) {\n          if (canEnterHash.secondCanEnter) {\n            if (wordleList.includes(guesses.second.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                secondDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!doneHash.thirdDone) {\n          if (canEnterHash.thirdCanEnter) {\n            if (wordleList.includes(guesses.third.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                thirdDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!doneHash.fourthDone) {\n          if (canEnterHash.fourthCanEnter) {\n            if (wordleList.includes(guesses.fourth.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                fourthDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!doneHash.fifthDone) {\n          if (canEnterHash.fifthCanEnter) {\n            if (wordleList.includes(guesses.fifth.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                fifthDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        } else if (!doneHash.sixthDone) {\n          if (canEnterHash.sixthCanEnter) {\n            if (wordleList.includes(guesses.sixth.toLowerCase())) {\n              setDoneHash(prevDone => ({\n                ...prevDone,\n                sixthDone: true\n              }));\n              setGuessLength(0);\n            } else setWrongWord(true);\n          } else setNotEnough(true);\n        }\n      }\n    };\n    if (!win) {\n      document.addEventListener('keydown', onPress);\n      return () => {\n        document.removeEventListener('keydown', onPress);\n      };\n    }\n  }, [win, doneHash, canEnterHash]);\n  const compareString = (str1, str2) => {\n    var indexMatch = '';\n    for (let i = 0; i < str1.length; i++) {\n      if (str1[i] == str2[i]) {\n        indexMatch += i;\n      }\n    }\n    return indexMatch;\n  };\n  useEffect(() => {\n    if (!doneHash.firstDone) {\n      if (guesses.first.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        firstCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        firstCanEnter: false\n      }));\n    } else if (!doneHash.secondDone) {\n      if (guesses.second.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        secondCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        secondCanEnter: false\n      }));\n    } else if (!doneHash.thirdDone) {\n      if (guesses.third.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        thirdCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        thirdCanEnter: false\n      }));\n    } else if (!doneHash.fourthDone) {\n      if (guesses.fourth.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        fourthCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        fourthCanEnter: false\n      }));\n    } else if (!doneHash.fifthDone) {\n      if (guesses.fifth.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        fifthCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        fifthCanEnter: false\n      }));\n    } else if (!doneHash.sixthDone) {\n      if (guesses.sixth.length == 5) setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        sixthCanEnter: true\n      }));else setCanEnterHash(prevCanEnter => ({\n        ...prevCanEnter,\n        sixthCanEnter: false\n      }));\n    }\n  }, [guesses]);\n  const greenLetter = (dummyWord, guessedWord) => {\n    const greenIndex = compareString(correctWord, guessedWord);\n    var offset = 0;\n    for (let i = 0; i < greenIndex.length; i++) {\n      dummyWord = dummyWord.slice(0, [parseInt(greenIndex[i]) - offset]) + dummyWord.slice(parseInt(greenIndex[i]) + 1 - offset);\n      console.log(dummyWord);\n      offset++;\n    }\n    return dummyWord;\n  };\n  const evalGuess = (dummyWord, letter, pos) => {\n    if (letter == correctWord[pos]) {\n      return 'green';\n    } else if (dummyWord.includes(letter)) {\n      return 'yellow';\n    } else {\n      return 'gray';\n    }\n  };\n  var cheatVar;\n  const evaluteGuess = (res, ind) => {\n    if (guessResults.first) {\n      const newCheatVar = cheatVar;\n      cheatVar = cheatVar.replace(res, '');\n      return evalGuess(newCheatVar, res, ind); //check for green, yellow and gray\n    }\n  };\n  useEffect(() => {\n    if (doneHash.firstDone && !firstRef.current) {\n      //player has made first guess\n      cheatVar = greenLetter(correctWord, guesses.first);\n      const colorGuess = guesses.first.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        first: [...prevResults.first, ...colorGuess]\n      }));\n      let newKbColor = guesses.first.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n        setGuessWon('guess1');\n      }\n      firstRef.current = true;\n    }\n    if (doneHash.secondDone && !secondRef.current) {\n      //player has made second guess\n      cheatVar = greenLetter(correctWord, guesses.second);\n      const colorGuess = guesses.second.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        second: [...prevResults.second, ...colorGuess]\n      }));\n      let newKbColor = guesses.second.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n        setGuessWon('guess2');\n      }\n      secondRef.current = true;\n    }\n    if (doneHash.thirdDone && !thirdRef.current) {\n      //player has made first guess\n      cheatVar = greenLetter(correctWord, guesses.third);\n      const colorGuess = guesses.third.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        third: [...prevResults.third, ...colorGuess]\n      }));\n      let newKbColor = guesses.third.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n        setGuessWon('guess3');\n      }\n      thirdRef.current = true;\n    }\n    if (doneHash.fourthDone && !fourthRef.current) {\n      //player has made first guess\n      cheatVar = greenLetter(correctWord, guesses.fourth);\n      const colorGuess = guesses.fourth.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        fourth: [...prevResults.fourth, ...colorGuess]\n      }));\n      let newKbColor = guesses.fourth.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n        setGuessWon('guess4');\n      }\n      fourthRef.current = true;\n    }\n    if (doneHash.fifthDone && !fifthRef.current) {\n      //player has made first guess\n      cheatVar = greenLetter(correctWord, guesses.fifth);\n      const colorGuess = guesses.fifth.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        fifth: [...prevResults.fifth, ...colorGuess]\n      }));\n      let newKbColor = guesses.fifth.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n        setGuessWon('guess5');\n      }\n      fifthRef.current = true;\n    }\n    if (doneHash.sixthDone && !sixthRef.current) {\n      //player has made final guess\n      cheatVar = greenLetter(correctWord, guesses.sixth);\n      const colorGuess = guesses.sixth.split('').map((res, ind) => evaluteGuess(res, ind));\n      setGuessResults(prevResults => ({\n        ...prevResults,\n        sixth: [...prevResults.sixth, ...colorGuess]\n      }));\n      let newKbColor = guesses.sixth.split('').reduce((acc, res, ind) => {\n        acc[res] = colorGuess[ind];\n        return acc;\n      }, {});\n      setKbColor(prevResults => [...prevResults, {\n        ...newKbColor\n      }]);\n      const set = new Set(Object.values(newKbColor));\n      const first = [...set][0];\n      if (set.size == 1 && first == 'green') {\n        setWin(true);\n        setGuessWon('guess6');\n      } else {\n        showAnswer(true);\n      }\n      sixthRef.current = true;\n    }\n    // Repeat this pattern for the remaining guesses (third, fourth, etc.)\n  }, [doneHash]);\n  useEffect(() => {\n    if (win ^ answer) {\n      console.log(userID.id);\n      axios.post('http://localhost:8081/updateStats', {\n        ...userID,\n        win: win,\n        guessWon: guessWon\n      }).then(res => {\n        console.log(res.data.message);\n      }).catch(err => console.log(err));\n    }\n  }, [win, answer]);\n  useEffect(() => {\n    if (win) {\n      setWinCompliment(true);\n      setTimeout(() => {\n        /* Code to run after 4 seconds */\n        // alert('wow you have brain')\n        setWinPage(true);\n      }, 1000);\n    }\n  }, [win]);\n  if (winCompliment) {\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setWinCompliment(false);\n    }, 5000);\n  }\n  if (notEnough) {\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setNotEnough(false);\n    }, 5000);\n  }\n  if (wrongWord) {\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setWrongWord(false);\n    }, 5000);\n  }\n  if (clickDisabledLeaderBoard) {\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setClickDisabledLeaderBoard(false);\n    }, 2000);\n  }\n  if (clickDisabledProfile) {\n    setTimeout(function () {\n      document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\n      setClickDisabledProfile(false);\n    }, 2000);\n  }\n  if (answer) {\n    setTimeout(function () {\n      setWinPage(true);\n    }, 1000);\n  }\n  function whichCompliment() {\n    const firstTrueIndex = Object.entries(doneHash).findIndex(([key, value]) => !value);\n    // console.log(doneHash);\n    // console.log(firstTrueIndex);\n    if (firstTrueIndex != -1) {\n      return firstTrueIndex;\n    } else return 6;\n  }\n  const compliments = [\"\", \"Genius\", \"Magnificent\", \"Impressive\", \"Splendid\", \"Great\", \"Phew\"];\n  const {\n    delay,\n    setDelay\n  } = useContext(KeyboardContext);\n\n  // const handleClickAway = () => {\n  //     setWinPage(false);\n  //     setDelay(true);\n\n  //     setTimeout(function() {\n  //         setDelay(false);\n  //         }, 1000);\n  // }\n\n  useEffect(() => {\n    if (!winPage) {\n      setTimeout(function () {\n        setDelay(false);\n      }, 1000);\n    }\n  }, [winPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto w-[500px] opacity-100 mb-[110px] ${darkMode ? 'bg-[#121213] text-white' : 'bg-white text-black'}`,\n    children: [guestMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-[60px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-green-600 text-2xl rounded-md p-1 font-bold tracking-widest\",\n        children: \"Guest Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 95\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 23\n    }, this), userMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-[60px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: ` ${darkMode ? 'text-gray-200' : 'text-gray-500'} text-2xl rounded-md p-1 font-bold tracking-widest`,\n        children: userID.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 94\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 22\n    }, this), winCompliment && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: compliments[whichCompliment()] || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 113\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 27\n    }, this), notEnough && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: \"Not enough letters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 109\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 23\n    }, this), wrongWord && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: \"Not in word list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 109\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 23\n    }, this), clickDisabledLeaderBoard && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: \"Login to access leaderboards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 124\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 38\n    }, this), clickDisabledProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"hidePls\",\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: \"Login to access profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 120\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 34\n    }, this), (winPage || delay) && /*#__PURE__*/_jsxDEV(Zoom, {\n      in: winPage,\n      timeout: 500,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-[250px] w-[500px] h-fit rounded-md shadow-xl z-20\",\n        children: /*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 9\n    }, this), winPage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute top-0 left-0 w-screen h-[1000px] ${darkMode ? 'bg-black/50' : 'bg-white/50'}  z-10`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 21\n    }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-[120px] left-0 flex justify-center w-full\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]\",\n        children: correctWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 93\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 w-[340px] mx-auto gap-2 \",\n      children: Object.entries(doneHash).map(([key, value]) => value ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: guessResults[[key].split('Done', 0)].map((res, ind) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `border-2  ${res == 'green' ? 'bg-[#6aaa64]' : res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white`,\n          children: guesses[key.split('Done', 0)][ind] || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 25\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [0, 1, 2, 3, 4].map(res => guesses[key.split('Done', 0)][res] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\",\n          children: guesses[key.split('Done', 0)][res]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 25\n        }, this))\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 563,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"YLpu9SLX9d+9j0RoSb02766ptns=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useContext","raw","KeyboardContext","CloseIcon","ReplayIcon","ShareIcon","Statistics","axios","Zoom","ClickAwayListener","jsxDEV","_jsxDEV","Fragment","_Fragment","Grid","_s","darkMode","userMode","setUserMode","userID","setUserID","setKbColor","winPage","setWinPage","guessWon","setGuessWon","winCompliment","setWinCompliment","win","setWin","answer","showAnswer","notEnough","setNotEnough","wrongWord","setWrongWord","wordleList","setWordleList","doneHash","setDoneHash","canEnterHash","setCanEnterHash","guessResults","setGuessResults","first","second","third","fourth","fifth","sixth","firstRef","secondRef","thirdRef","fourthRef","fifthRef","sixthRef","loading","setLoading","correctWord","setCorrectWord","guesses","setGuesses","dummyWords","setDummyWords","clickDisabledLeaderBoard","setClickDisabledLeaderBoard","clickDisabledProfile","setClickDisabledProfile","guestMode","setGuestMode","fetchWords","response","fetch","text","lines","split","slice","length","Math","floor","random","toUpperCase","console","log","guessLength","setGuessLength","onPress","event","key","firstDone","prevGuessLen","prevGuess","secondDone","thirdDone","fourthDone","fifthDone","sixthDone","match","document","addEventListener","removeEventListener","firstCanEnter","includes","toLowerCase","prevDone","secondCanEnter","thirdCanEnter","fourthCanEnter","fifthCanEnter","sixthCanEnter","compareString","str1","str2","indexMatch","i","prevCanEnter","greenLetter","dummyWord","guessedWord","greenIndex","offset","parseInt","evalGuess","letter","pos","cheatVar","evaluteGuess","res","ind","newCheatVar","replace","current","colorGuess","map","prevResults","newKbColor","reduce","acc","set","Set","Object","values","size","id","post","then","data","message","catch","err","setTimeout","getElementById","whichCompliment","firstTrueIndex","entries","findIndex","value","compliments","delay","setDelay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","in","timeout","_c","$RefreshReg$"],"sources":["C:/Users/david/wordle-clone/Client/src/components/Grid.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport raw from '../assets/wordle-La.txt'\r\nimport { KeyboardContext } from '../Contexts/KeyboardContext';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport './Grid.css'\r\nimport Statistics from './Statistics';\r\nimport axios from 'axios';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\r\n\r\n\r\n\r\nconst Grid = () => {\r\n\r\n    \r\n    // const [kbColor, setKbColor] = useState({});\r\n    const {darkMode} = useContext(KeyboardContext);\r\n    const {userMode, setUserMode} = useContext(KeyboardContext);\r\n    const {userID, setUserID} = useContext(KeyboardContext);\r\n    const {setKbColor} = useContext(KeyboardContext);\r\n    const {winPage, setWinPage} = useContext(KeyboardContext);\r\n    const {guessWon, setGuessWon} = useContext(KeyboardContext);\r\n    const [winCompliment, setWinCompliment] = useState(false);\r\n    const {win, setWin} = useContext(KeyboardContext);\r\n    const [answer, showAnswer] = useState(false);\r\n    const {notEnough, setNotEnough} = useContext(KeyboardContext);\r\n    const {wrongWord, setWrongWord} = useContext(KeyboardContext);\r\n    const {wordleList, setWordleList} = useContext(KeyboardContext);\r\n    const {doneHash, setDoneHash} = useContext(KeyboardContext);\r\n    const {canEnterHash, setCanEnterHash} = useContext(KeyboardContext);\r\n    const [guessResults, setGuessResults] = useState({first: [], second: [], third: [], fourth: [], fifth: [], sixth: []})\r\n    const firstRef = useRef(false);\r\n    const secondRef = useRef(false);\r\n    const thirdRef = useRef(false);\r\n    const fourthRef = useRef(false);\r\n    const fifthRef = useRef(false);\r\n    const sixthRef = useRef(false);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [correctWord, setCorrectWord] = useState('');\r\n\r\n    // const[guesses, setGuesses] = useState({first: '', second: '', third: '', fourth: '', fifth: '', sixth: ''});\r\n    const{guesses, setGuesses} = useContext(KeyboardContext);\r\n\r\n    const [dummyWords, setDummyWords] = useState({first: '', second: '', third: '', fourth: '', fifth: '', sixth: ''});\r\n\r\n    const {clickDisabledLeaderBoard, setClickDisabledLeaderBoard} = useContext(KeyboardContext);\r\n\r\n    const {clickDisabledProfile, setClickDisabledProfile} = useContext(KeyboardContext);\r\n\r\n    const {guestMode, setGuestMode} = useContext(KeyboardContext);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchWords = async () => { \r\n            const response = await fetch(raw);\r\n            const text = await response.text();\r\n            const lines = text.split('\\r\\n').slice(0, 2315);\r\n            setWordleList(lines)\r\n        };\r\n        fetchWords();\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if (wordleList.length > 0) {\r\n        setCorrectWord(wordleList[Math.floor(Math.random() * 2315)].toUpperCase());\r\n        console.log(wordleList);\r\n        setLoading(false);\r\n        }\r\n    }, [wordleList])\r\n\r\n    useEffect(() => {\r\n        setDummyWords({first: correctWord})\r\n        if( correctWord )\r\n            console.log(correctWord)\r\n    }, [correctWord])\r\n\r\n    const {guessLength, setGuessLength} = useContext(KeyboardContext);\r\n\r\n    // var guessLength = 0;\r\n\r\n    useEffect(() => {\r\n        const onPress = (event) => {\r\n            if (event.key === 'Backspace') {\r\n            if (!doneHash.firstDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, first: (prevGuess.first.slice(0, prevGuess.first.length - 1))}))\r\n            } \r\n            else if (!doneHash.secondDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, second: (prevGuess.second.slice(0, prevGuess.second.length - 1))}))\r\n            } \r\n            else if (!doneHash.thirdDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, third: (prevGuess.third.slice(0, prevGuess.third.length - 1))}))\r\n            } \r\n            else if (!doneHash.fourthDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fourth: (prevGuess.fourth.slice(0, prevGuess.fourth.length - 1))}))\r\n            } \r\n            else if (!doneHash.fifthDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fifth: (prevGuess.fifth.slice(0, prevGuess.fifth.length - 1))}))\r\n            } \r\n            else if (!doneHash.sixthDone && guessLength > 0) {\r\n                setGuessLength(prevGuessLen => prevGuessLen - 1);\r\n                // guessLength -= 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, sixth: (prevGuess.sixth.slice(0, prevGuess.sixth.length - 1))}))\r\n            } \r\n            } else if (event.key.match(/[a-zA-Z]/) && event.key.length === 1) {\r\n            if (!doneHash.firstDone && guessLength < 5) {\r\n\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                // console.log(guessLength);\r\n                setGuesses( prevGuess => ({ ...prevGuess, first: (prevGuess.first + event.key.toUpperCase())}))\r\n            }\r\n            else if (!doneHash.secondDone && guessLength < 5) {\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, second: (prevGuess.second + event.key.toUpperCase())}))\r\n            } \r\n            else if (!doneHash.thirdDone && guessLength < 5) {\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, third: (prevGuess.third + event.key.toUpperCase())}))\r\n            } \r\n            else if (!doneHash.fourthDone && guessLength < 5) {\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fourth: (prevGuess.fourth + event.key.toUpperCase())}))\r\n            } \r\n            else if (!doneHash.fifthDone && guessLength < 5) {\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, fifth: (prevGuess.fifth + event.key.toUpperCase())}))\r\n            } \r\n            else if (!doneHash.sixthDone && guessLength < 5) {\r\n                setGuessLength(prevGuessLen => prevGuessLen + 1);\r\n                // guessLength += 1;\r\n                setGuesses( prevGuess => ({ ...prevGuess, sixth: (prevGuess.sixth + event.key.toUpperCase())}))\r\n            }\r\n            } \r\n        };\r\n        if(!win) {\r\n            // Attach event listener\r\n            document.addEventListener('keydown', onPress);\r\n        \r\n            // Cleanup function to remove event listener\r\n            return () => {\r\n            document.removeEventListener('keydown', onPress);\r\n            };\r\n        }\r\n    }, [win, guessLength, doneHash]); // Depend only on the completion status\r\n\r\n\r\n    useEffect(() => {\r\n        const onPress = (event) => {\r\n            if (event.key === 'Enter') {\r\n                if (!doneHash.firstDone) {\r\n                    if (canEnterHash.firstCanEnter) {\r\n                        if (wordleList.includes(guesses.first.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, firstDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!doneHash.secondDone) {\r\n                    if (canEnterHash.secondCanEnter) {\r\n                        if (wordleList.includes(guesses.second.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, secondDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!doneHash.thirdDone) {\r\n                    if (canEnterHash.thirdCanEnter) {\r\n                        if (wordleList.includes(guesses.third.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, thirdDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!doneHash.fourthDone) {\r\n                    if (canEnterHash.fourthCanEnter) {\r\n                        if (wordleList.includes(guesses.fourth.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, fourthDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!doneHash.fifthDone) {\r\n                    if (canEnterHash.fifthCanEnter) {\r\n                        if (wordleList.includes(guesses.fifth.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, fifthDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n                else if (!doneHash.sixthDone) {\r\n                    if (canEnterHash.sixthCanEnter) {\r\n                        if (wordleList.includes(guesses.sixth.toLowerCase())) {\r\n                            setDoneHash(prevDone => ({ ...prevDone, sixthDone: true}));\r\n                            setGuessLength(0);\r\n                        } else setWrongWord(true);\r\n                    } else setNotEnough(true);\r\n                }\r\n            }\r\n        }\r\n        if (!win) {\r\n            document.addEventListener('keydown', onPress);\r\n            return () => {\r\n            document.removeEventListener('keydown', onPress);\r\n            };\r\n        }\r\n    },[win, doneHash, canEnterHash])\r\n    \r\n    const compareString = (str1, str2) => {\r\n        var indexMatch = '';\r\n        for (let i = 0; i < str1.length; i++) {\r\n            if (str1[i] == str2[i]) {\r\n                indexMatch += i;\r\n            }\r\n        } return indexMatch;\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (!doneHash.firstDone) {\r\n            if (guesses.first.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, firstCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, firstCanEnter: false}));\r\n        }\r\n        else if (!doneHash.secondDone) {\r\n            if (guesses.second.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, secondCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, secondCanEnter: false}));\r\n        }\r\n        else if (!doneHash.thirdDone) {\r\n            if (guesses.third.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, thirdCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, thirdCanEnter: false}));\r\n        }\r\n        else if (!doneHash.fourthDone) {\r\n            if (guesses.fourth.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, fourthCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, fourthCanEnter: false}));\r\n        }\r\n        else if (!doneHash.fifthDone) {\r\n            if (guesses.fifth.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, fifthCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, fifthCanEnter: false}));\r\n        }\r\n        else if (!doneHash.sixthDone) {\r\n            if (guesses.sixth.length == 5) setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, sixthCanEnter: true}));\r\n            else setCanEnterHash(prevCanEnter => ({ ...prevCanEnter, sixthCanEnter: false}));\r\n        }\r\n    }, [guesses])\r\n\r\n    const greenLetter = (dummyWord, guessedWord) => {\r\n        const greenIndex = compareString(correctWord, guessedWord);\r\n        var offset = 0;\r\n        for (let i = 0; i < greenIndex.length; i++) {\r\n            dummyWord = dummyWord.slice(0, [parseInt(greenIndex[i]) - offset]) + dummyWord.slice(parseInt(greenIndex[i]) + 1 - offset);\r\n            console.log(dummyWord)\r\n            offset++;\r\n        }\r\n        return dummyWord;\r\n    }\r\n\r\n    const evalGuess = (dummyWord, letter, pos) => {\r\n        if (letter == correctWord[pos]) {\r\n            return 'green';\r\n        } else if (dummyWord.includes(letter)) {\r\n            return 'yellow';\r\n        } else {\r\n            return 'gray';\r\n        }\r\n    }\r\n\r\n    var cheatVar;\r\n\r\n    const evaluteGuess = (res, ind) => {\r\n        if (guessResults.first) {\r\n            \r\n            const newCheatVar = cheatVar;\r\n            cheatVar = cheatVar.replace(res, '')\r\n            return evalGuess(newCheatVar, res, ind) //check for green, yellow and gray\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (doneHash.firstDone && !firstRef.current) { //player has made first guess\r\n            cheatVar = greenLetter(correctWord, guesses.first)\r\n            const colorGuess = guesses.first.split('').map((res, ind) => (\r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                first: [...prevResults.first, ...colorGuess]\r\n            }));\r\n            let newKbColor = guesses.first.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n            }, {});\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n                setGuessWon('guess1');\r\n            }\r\n            firstRef.current = true;\r\n        }\r\n        if (doneHash.secondDone && !secondRef.current) { //player has made second guess\r\n            cheatVar = greenLetter(correctWord, guesses.second)\r\n            const colorGuess = guesses.second.split('').map((res, ind) => (\r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                second: [...prevResults.second, ...colorGuess]\r\n            }));\r\n            let newKbColor = guesses.second.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n            }, {});\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n                setGuessWon('guess2');\r\n            }\r\n            secondRef.current = true;\r\n        }\r\n        if (doneHash.thirdDone && !thirdRef.current) { //player has made first guess\r\n            cheatVar = greenLetter(correctWord, guesses.third)\r\n            const colorGuess = guesses.third.split('').map((res, ind) => (\r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                third: [...prevResults.third, ...colorGuess]\r\n            }));\r\n            let newKbColor = guesses.third.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n            }, {});\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n                setGuessWon('guess3');\r\n            }\r\n            thirdRef.current = true;\r\n        }\r\n        if (doneHash.fourthDone && !fourthRef.current) { //player has made first guess\r\n            cheatVar = greenLetter(correctWord, guesses.fourth)\r\n            const colorGuess = guesses.fourth.split('').map((res, ind) => (\r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                fourth: [...prevResults.fourth, ...colorGuess]\r\n            }));\r\n            let newKbColor = guesses.fourth.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n            }, {});\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n                setGuessWon('guess4');\r\n            }\r\n            fourthRef.current = true;\r\n        }\r\n        if (doneHash.fifthDone && !fifthRef.current) { //player has made first guess\r\n            cheatVar = greenLetter(correctWord, guesses.fifth)\r\n            const colorGuess = guesses.fifth.split('').map((res, ind) => (\r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                fifth: [...prevResults.fifth, ...colorGuess]\r\n            }));\r\n\r\n            let newKbColor = guesses.fifth.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n                \r\n            }, {});\r\n\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n                setGuessWon('guess5');\r\n            }\r\n            fifthRef.current = true;\r\n        }\r\n        if (doneHash.sixthDone && !sixthRef.current) { //player has made final guess\r\n            cheatVar = greenLetter(correctWord, guesses.sixth)\r\n            const colorGuess = guesses.sixth.split('').map((res, ind) => (\r\n                evaluteGuess(res, ind)\r\n            ))\r\n            setGuessResults(prevResults => ({\r\n                ...prevResults,\r\n                sixth: [...prevResults.sixth, ...colorGuess]\r\n            }));\r\n            let newKbColor = guesses.sixth.split('').reduce((acc, res, ind) => {\r\n                acc[res] = colorGuess[ind];\r\n                return acc;\r\n            }, {});\r\n            setKbColor(prevResults => [\r\n                ...prevResults,\r\n                { ...newKbColor }\r\n            ])\r\n            const set = new Set(Object.values(newKbColor))\r\n            const first = [...set][0]\r\n            if (set.size == 1 && first == 'green') {\r\n                setWin(true);\r\n                setGuessWon('guess6');\r\n\r\n            } else {\r\n                showAnswer(true);\r\n            }\r\n            sixthRef.current = true;\r\n        }\r\n        // Repeat this pattern for the remaining guesses (third, fourth, etc.)\r\n    }, [doneHash]);\r\n\r\n    useEffect(() => {\r\n        if (win ^ answer) {\r\n            console.log(userID.id)\r\n            \r\n            axios.post('http://localhost:8081/updateStats', {...userID, win: win, guessWon: guessWon})\r\n            .then(res => {\r\n                console.log(res.data.message)\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }, [win, answer])\r\n\r\n    useEffect(() => {\r\n\r\n        if (win) {\r\n            setWinCompliment(true);\r\n            setTimeout(() => {\r\n                /* Code to run after 4 seconds */\r\n                // alert('wow you have brain')\r\n                setWinPage(true);\r\n            }, 1000)\r\n            \r\n        }\r\n\r\n    }, [win])\r\n\r\n    if(winCompliment) {\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setWinCompliment(false);\r\n            }, 5000);\r\n    }\r\n\r\n    if(notEnough) {\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setNotEnough(false);\r\n\r\n            }, 5000);\r\n\r\n    }\r\n\r\n    if (wrongWord) {\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setWrongWord(false);\r\n            }, 5000);\r\n    }\r\n\r\n    if (clickDisabledLeaderBoard) {\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setClickDisabledLeaderBoard(false);\r\n            }, 2000);\r\n    }\r\n\r\n    if (clickDisabledProfile) {\r\n        setTimeout(function() {\r\n            document.getElementById('hidePls') && (document.getElementById('hidePls').id = 'waa');\r\n            setClickDisabledProfile(false);\r\n            }, 2000);\r\n    }\r\n\r\n    if (answer) {\r\n        setTimeout(function() {\r\n            setWinPage(true);\r\n        }, 1000);\r\n    }\r\n\r\n    function whichCompliment() {\r\n        const firstTrueIndex = Object.entries(doneHash).findIndex(([key, value]) => !value);\r\n        // console.log(doneHash);\r\n        // console.log(firstTrueIndex);\r\n        if (firstTrueIndex != -1) {\r\n            return firstTrueIndex;\r\n        } else return 6;\r\n    }\r\n\r\n    const compliments = [\r\n        \"\",               \r\n        \"Genius\",        \r\n        \"Magnificent\",   \r\n        \"Impressive\",    \r\n        \"Splendid\",     \r\n        \"Great\",        \r\n        \"Phew\"          \r\n    ];\r\n\r\n    const {delay, setDelay} = useContext(KeyboardContext);\r\n\r\n    // const handleClickAway = () => {\r\n    //     setWinPage(false);\r\n    //     setDelay(true);\r\n        \r\n\r\n    //     setTimeout(function() {\r\n    //         setDelay(false);\r\n    //         }, 1000);\r\n    // }\r\n    \r\n    useEffect(() => {\r\n        if (!winPage) {\r\n            setTimeout(function() {\r\n                setDelay(false);\r\n                }, 1000);\r\n        }\r\n    }, [winPage])\r\n    \r\n\r\n  return (\r\n    <div className={`mx-auto w-[500px] opacity-100 mb-[110px] ${darkMode ? 'bg-[#121213] text-white' : 'bg-white text-black'}`}>\r\n\r\n        {guestMode && <div className='absolute top-[60px] left-0 flex justify-center w-full'> <span className='text-green-600 text-2xl rounded-md p-1 font-bold tracking-widest'>Guest Mode</span> </div>}\r\n\r\n        {userMode && <div className='absolute top-[60px] left-0 flex justify-center w-full'> <span className={` ${darkMode ?'text-gray-200' : 'text-gray-500' } text-2xl rounded-md p-1 font-bold tracking-widest`}>{userID.username}</span> </div>}\r\n\r\n        {winCompliment && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>{compliments[whichCompliment()] || ''}</span> </div>}\r\n\r\n        {notEnough && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>Not enough letters</span> </div>}\r\n\r\n        {wrongWord && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>Not in word list</span> </div>}\r\n\r\n        {clickDisabledLeaderBoard && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>Login to access leaderboards</span> </div>}\r\n\r\n        {clickDisabledProfile && <div id='hidePls' className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>Login to access profile</span> </div>}\r\n\r\n                \r\n        {/* {winPage && <div className=''> <Statistics /> </div>\r\n        } */}\r\n    {/* {winPage || delay &&  */}\r\n\r\n    {/* <ClickAwayListener onClickAway={handleClickAway}> */}\r\n\r\n        {(winPage || delay )&& \r\n        <Zoom in={winPage} timeout={500}>\r\n            <div className='absolute top-[250px] w-[500px] h-fit rounded-md shadow-xl z-20' >\r\n                <Statistics /> \r\n            </div>\r\n        </Zoom>\r\n        }\r\n\r\n\r\n\r\n       \r\n                {/* {winPage && \r\n                <>  \r\n                    <div className='absolute top-[250px] w-[500px] h-fit rounded-md shadow-xl bg-white z-20' >\r\n                        <Statistics /> \r\n                    </div>\r\n                    <div className='absolute top-0 left-0 w-screen h-[1000px] bg-white/50 z-10'>\r\n                     </div>\r\n                </>\r\n                } */}\r\n\r\n        {/* </ClickAwayListener> */}\r\n\r\n    {/* } */}\r\n\r\n        {winPage && <div className={`absolute top-0 left-0 w-screen h-[1000px] ${darkMode ? 'bg-black/50' : 'bg-white/50'}  z-10`}>\r\n            </div> }\r\n\r\n        {answer && <div className='absolute top-[120px] left-0 flex justify-center w-full'> <span className='bg-black rounded-md text-white p-3 font-bold tracking-[0.5px]'>{correctWord}</span> </div>}\r\n\r\n        <div className='grid grid-cols-5 w-[340px] mx-auto gap-2 '>\r\n\r\n            { \r\n\r\n            Object.entries(doneHash).map(([key, value]) => (\r\n                (value) ? \r\n                <>\r\n                    {guessResults[[key].split('Done', 0)].map((res, ind) => (\r\n                        <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                            {guesses[key.split('Done', 0)][ind] || ''}\r\n                        </div>\r\n                    ))}\r\n                </>\r\n                :   \r\n                <>\r\n                    {[0,1,2,3,4].map((res) => (\r\n                        guesses[key.split('Done', 0)][res]\r\n                        ? \r\n                        <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                            {guesses[key.split('Done', 0)][res]}\r\n                        </div>\r\n                        : \r\n                        <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        </div>\r\n                    \r\n                    ))}\r\n                </>\r\n            ))\r\n        }\r\n\r\n\r\n            {/* {\r\n            (doneHash.firstDone && firstRef.current) ? \r\n            <>\r\n                {guessResults.first.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses['first'][ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['first'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['first'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                \r\n                ))}\r\n            </>\r\n\r\n            }\r\n\r\n            \r\n\r\n            { doneHash.secondDone ? \r\n            <>\r\n                {guessResults.second.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses['second'][ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['second'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['second'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                ))}\r\n            </>\r\n            }\r\n\r\n            { doneHash.thirdDone ? \r\n            <>\r\n                {guessResults.third.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses.third[ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['third'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['third'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                ))}\r\n            </>\r\n            }\r\n            { doneHash.fourthDone ? \r\n            <>\r\n                {guessResults.fourth.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses.fourth[ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['fourth'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['fourth'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                ))}\r\n            </>\r\n            }\r\n            { doneHash.fifthDone ? \r\n            <>\r\n                {guessResults.fifth.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses.fifth[ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['fifth'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['fifth'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                ))}\r\n            </>\r\n            }\r\n            { doneHash.sixthDone ? \r\n            <>\r\n                {guessResults.sixth.map((res, ind) => (\r\n                    <div className= { `border-2  ${res == 'green' ? 'bg-[#6aaa64]' :  res == 'yellow' ? 'bg-[#c9b458]' : 'bg-[#787c7e]'} flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold text-white` }>\r\n                        {guesses.sixth[ind] || ''}\r\n                    </div>\r\n                ))}\r\n            </>\r\n            :   \r\n            <>\r\n                {[0,1,2,3,4].map((res) => (\r\n                    guesses['sixth'][res]\r\n                    ? \r\n                    <div className='border-2 border-gray-500 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                        {guesses['sixth'][res]}\r\n                    </div>\r\n                    : \r\n                    <div className='border-2 border-gray-300 flex items-center justify-center w-[64px] h-[64px] uppercase text-4xl font-bold'>\r\n                    </div>\r\n                ))}\r\n            </>\r\n            } */}\r\n        </div>\r\n         \r\n        \r\n\r\n        \r\n\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}