{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\wordle-clone\\\\Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport Grid from './components/Grid';\nimport Header from './components/Header';\nimport Keys from './components/Keys';\nimport { KeyboardContext } from './Contexts/KeyboardContext';\nimport Login from './components/Login';\nimport LandingPage from './components/LandingPage';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const[ letterColor, setLetterColor] = useState([]);\n\n  const [kbColor, setKbColor] = useState(() => {\n    const existingKbColor = JSON.parse(localStorage.getItem('kbColor'));\n    return existingKbColor || [];\n  });\n  const [winPage, setWinPage] = useState(false);\n  const [tutorial, showTutorial] = useState(false);\n  const [settings, showSettings] = useState(false);\n  const [guestMode, setGuestMode] = useState(false);\n  const [userMode, setUserMode] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [loginPage, showLoginPage] = useState(false);\n  const [registerPage, showRegisterPage] = useState(false);\n  const [userID, setUserID] = useState({\n    id: 0,\n    username: ''\n  });\n  const [win, setWin] = useState(() => {\n    const existingWin = JSON.parse(localStorage.getItem('win'));\n    return existingWin || false;\n  });\n  const [guessWon, setGuessWon] = useState(() => {\n    const existingGuessWon = JSON.parse(localStorage.getItem('guessWon'));\n    return existingGuessWon || 0;\n  });\n  const [isAuth, setIsAuth] = useState(false);\n  const [checkingAuth, setCheckingAuth] = useState(true);\n  const [guesses, setGuesses] = useState(() => {\n    // Load initial state from localStorage or default to the initial object\n    const existingGuesses = JSON.parse(localStorage.getItem('guesses'));\n    return existingGuesses || {\n      first: '',\n      second: '',\n      third: '',\n      fourth: '',\n      fifth: '',\n      sixth: ''\n    };\n  });\n  const [guessLength, setGuessLength] = useState(0);\n  const [doneHash, setDoneHash] = useState(() => {\n    // Load initial state from localStorage or default to the initial object\n    const existingDoneHash = JSON.parse(localStorage.getItem('doneHash'));\n    return existingDoneHash || {\n      firstDone: false,\n      secondDone: false,\n      thirdDone: false,\n      fourthDone: false,\n      fifthDone: false,\n      sixthDone: false\n    };\n  });\n  const [canEnterHash, setCanEnterHash] = useState({\n    firstCanEnter: false,\n    secondCanEnter: false,\n    thirdCanEnter: false,\n    fourthCanEnter: false,\n    fifthCanEnter: false,\n    sixthCanEnter: false\n  });\n  const [wordleList, setWordleList] = useState([]);\n  const [notEnough, setNotEnough] = useState(false);\n  const [wrongWord, setWrongWord] = useState(false);\n  const [leaderBoard, showLeaderBoard] = useState(false);\n  const [accessLeaderBoard, setAccessLeaderBoard] = useState(false);\n  const [clickDisabledLeaderBoard, setClickDisabledLeaderBoard] = useState(false);\n  const [userPfpPath, setUserPfpPath] = useState('');\n  const [profilePage, showProfilePage] = useState(false);\n  const [accessProfile, setAccessProfile] = useState(false);\n  const [clickDisabledProfile, setClickDisabledProfile] = useState(false);\n  const [delay, setDelay] = useState(false);\n  const [colorBlind, setColorBlind] = useState(false);\n  const [answer, showAnswer] = useState(() => {\n    const existingAnswer = JSON.parse(localStorage.getItem('answer'));\n    return existingAnswer || false;\n  });\n  const [settingsLoading, setSettingsLoading] = useState(true);\n  const enterPressed = useRef(false);\n  const [removeStyle, setRemoveStyle] = useState(false);\n  const checkAuth = async () => {\n    try {\n      const res = await axios.get('http://localhost:8081/check-auth', {\n        withCredentials: true\n      });\n      setUserMode(true);\n      setSettingsLoading(true);\n      setCheckingAuth(false);\n      setUserID({\n        id: res.data.id,\n        username: res.data.username\n      });\n    } catch (err) {\n      setUserMode(false);\n      setGuestMode(false);\n      setCheckingAuth(false);\n      console.error('Authentication check failed');\n    }\n  };\n  useEffect(() => {\n    //check token when refreshing\n    checkAuth();\n  }, []);\n  useEffect(() => {\n    //get user pfp\n    if (userID.id) {\n      //if not 0 ie guest mode\n      axios.get('http://localhost:8081/getPfp', {\n        params: {\n          ...userID\n        }\n      }).then(res => {\n        if (res.data.message == \"Retrieved pfp\") {\n          setUserPfpPath('http://localhost:8081/uploads/' + res.data.pfp);\n        } else {\n          setUserPfpPath('https://nationalkidneypartners.com/wp-content/uploads/2023/05/headshot-placeholder.webp'); //default pfp\n        }\n      });\n      axios.get('http://localhost:8081/fetchSettings', {\n        params: {\n          ...userID\n        }\n      }) //get user settings\n      .then(res => {\n        if (res.data.message == \"Fetched settings\") {\n          setDarkMode(res.data.dark === 1);\n          setColorBlind(res.data.color === 1);\n          setSettingsLoading(false);\n          // setDarkMode(res.data.dark)\n          // setDarkMode(res.data.dark)\n        }\n      });\n    }\n  }, [userID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App  ${darkMode ? 'bg-[#121213] text-white' : 'bg-white text-black'}`,\n    children: /*#__PURE__*/_jsxDEV(KeyboardContext.Provider, {\n      value: {\n        kbColor,\n        setKbColor,\n        winPage,\n        setWinPage,\n        tutorial,\n        showTutorial,\n        settings,\n        showSettings,\n        guestMode,\n        setGuestMode,\n        userMode,\n        setUserMode,\n        darkMode,\n        setDarkMode,\n        loginPage,\n        showLoginPage,\n        registerPage,\n        showRegisterPage,\n        userID,\n        setUserID,\n        win,\n        setWin,\n        guessWon,\n        setGuessWon,\n        isAuth,\n        setIsAuth,\n        checkingAuth,\n        setCheckingAuth,\n        guesses,\n        setGuesses,\n        guessLength,\n        setGuessLength,\n        doneHash,\n        setDoneHash,\n        canEnterHash,\n        setCanEnterHash,\n        wordleList,\n        setWordleList,\n        notEnough,\n        setNotEnough,\n        wrongWord,\n        setWrongWord,\n        leaderBoard,\n        showLeaderBoard,\n        accessLeaderBoard,\n        setAccessLeaderBoard,\n        clickDisabledLeaderBoard,\n        setClickDisabledLeaderBoard,\n        profilePage,\n        showProfilePage,\n        userPfpPath,\n        setUserPfpPath,\n        accessProfile,\n        setAccessProfile,\n        clickDisabledProfile,\n        setClickDisabledProfile,\n        delay,\n        setDelay,\n        colorBlind,\n        setColorBlind,\n        answer,\n        showAnswer,\n        settingsLoading,\n        setSettingsLoading,\n        enterPressed,\n        removeStyle,\n        setRemoveStyle\n      },\n      children: !(guestMode || userMode) || settingsLoading ? /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 56\n      }, this) :\n      /*#__PURE__*/\n      //settings loading defualt true so settings like dark mode are fetched hidden while spinning circle displayed.\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `absolute top-0 left-0 w-full z-[-10] ${darkMode ? 'bg-[#121213]' : 'bg-white'} h-[946px]`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Keys, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vwr6LNZIxYKNBy1Yy7ES8UD0xWI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Grid","Header","Keys","KeyboardContext","Login","LandingPage","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","kbColor","setKbColor","existingKbColor","JSON","parse","localStorage","getItem","winPage","setWinPage","tutorial","showTutorial","settings","showSettings","guestMode","setGuestMode","userMode","setUserMode","darkMode","setDarkMode","loginPage","showLoginPage","registerPage","showRegisterPage","userID","setUserID","id","username","win","setWin","existingWin","guessWon","setGuessWon","existingGuessWon","isAuth","setIsAuth","checkingAuth","setCheckingAuth","guesses","setGuesses","existingGuesses","first","second","third","fourth","fifth","sixth","guessLength","setGuessLength","doneHash","setDoneHash","existingDoneHash","firstDone","secondDone","thirdDone","fourthDone","fifthDone","sixthDone","canEnterHash","setCanEnterHash","firstCanEnter","secondCanEnter","thirdCanEnter","fourthCanEnter","fifthCanEnter","sixthCanEnter","wordleList","setWordleList","notEnough","setNotEnough","wrongWord","setWrongWord","leaderBoard","showLeaderBoard","accessLeaderBoard","setAccessLeaderBoard","clickDisabledLeaderBoard","setClickDisabledLeaderBoard","userPfpPath","setUserPfpPath","profilePage","showProfilePage","accessProfile","setAccessProfile","clickDisabledProfile","setClickDisabledProfile","delay","setDelay","colorBlind","setColorBlind","answer","showAnswer","existingAnswer","settingsLoading","setSettingsLoading","enterPressed","removeStyle","setRemoveStyle","checkAuth","res","get","withCredentials","data","err","console","error","params","then","message","pfp","dark","color","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/david/wordle-clone/Client/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport Grid from './components/Grid';\r\nimport Header from './components/Header';\r\nimport Keys from './components/Keys';\r\nimport { KeyboardContext } from './Contexts/KeyboardContext';\r\nimport Login from './components/Login';\r\nimport LandingPage from './components/LandingPage';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction App() {\r\n  // const[ letterColor, setLetterColor] = useState([]);\r\n\r\n  const [kbColor, setKbColor] = useState(() => {\r\n    const existingKbColor = JSON.parse(localStorage.getItem('kbColor'));\r\n    return existingKbColor || [];\r\n});\r\n  const [winPage, setWinPage] = useState(false)\r\n  const [tutorial, showTutorial] = useState(false);\r\n  const [settings, showSettings] = useState(false);\r\n  const [guestMode, setGuestMode] = useState(false);\r\n  const [userMode, setUserMode] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [loginPage, showLoginPage] = useState(false);\r\n  const [registerPage, showRegisterPage] = useState(false);\r\n  const [userID, setUserID] = useState({id: 0, username : ''});\r\n  const [win, setWin] = useState(() => {\r\n    const existingWin = JSON.parse(localStorage.getItem('win'));\r\n    return existingWin || false;\r\n});\r\n  const [guessWon, setGuessWon] = useState(() => {\r\n    const existingGuessWon = JSON.parse(localStorage.getItem('guessWon'));\r\n    return existingGuessWon || 0;\r\n});\r\n\r\n\r\n\r\n\r\n\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const [checkingAuth, setCheckingAuth] = useState(true);\r\n  const [guesses, setGuesses] = useState(() => {\r\n    // Load initial state from localStorage or default to the initial object\r\n    const existingGuesses = JSON.parse(localStorage.getItem('guesses'));\r\n    return existingGuesses || { \r\n        first: '',\r\n        second: '',\r\n        third: '',\r\n        fourth: '',\r\n        fifth: '',\r\n        sixth: '',\r\n    };\r\n});\r\n  const [guessLength, setGuessLength] = useState(0);\r\n  const [doneHash, setDoneHash] = useState(() => {\r\n        // Load initial state from localStorage or default to the initial object\r\n        const existingDoneHash = JSON.parse(localStorage.getItem('doneHash'));\r\n        return existingDoneHash || {\r\n            firstDone: false,\r\n            secondDone: false,\r\n            thirdDone: false,\r\n            fourthDone: false,\r\n            fifthDone: false,\r\n            sixthDone: false,\r\n        };\r\n    });\r\n\r\n  const [canEnterHash, setCanEnterHash] = useState({\r\n            firstCanEnter: false, \r\n            secondCanEnter: false, \r\n            thirdCanEnter: false, \r\n            fourthCanEnter: false, \r\n            fifthCanEnter: false, \r\n            sixthCanEnter: false\r\n          })\r\n  const [wordleList, setWordleList] = useState([]);\r\n  const [notEnough, setNotEnough] = useState(false);\r\n  const [wrongWord, setWrongWord] = useState(false);\r\n  const [leaderBoard, showLeaderBoard] = useState(false);\r\n  const [accessLeaderBoard, setAccessLeaderBoard] = useState(false);\r\n  const [clickDisabledLeaderBoard, setClickDisabledLeaderBoard] = useState(false);\r\n  const [userPfpPath, setUserPfpPath] = useState('');\r\n\r\n  const [profilePage, showProfilePage] = useState(false);\r\n  const [accessProfile, setAccessProfile] = useState(false);\r\n  const [clickDisabledProfile, setClickDisabledProfile] = useState(false);\r\n\r\n  const [delay, setDelay] = useState(false);\r\n\r\n  const [colorBlind, setColorBlind] = useState(false);\r\n  const [answer, showAnswer] = useState(() => {\r\n    const existingAnswer = JSON.parse(localStorage.getItem('answer'));\r\n    return existingAnswer || false;\r\n});\r\n\r\n  const [settingsLoading, setSettingsLoading] = useState(true);\r\n\r\n  const enterPressed = useRef(false)\r\n  const [removeStyle, setRemoveStyle] = useState(false);\r\n\r\n\r\n\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:8081/check-auth', { withCredentials: true });\r\n\r\n      setUserMode(true);\r\n      setSettingsLoading(true);\r\n      setCheckingAuth(false);\r\n      setUserID({id: res.data.id, username : res.data.username})\r\n    }\r\n    catch (err) {\r\n      setUserMode(false);\r\n      setGuestMode(false);\r\n      setCheckingAuth(false);\r\n      console.error('Authentication check failed');\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(() => { //check token when refreshing\r\n    checkAuth();\r\n  }, [])\r\n\r\n  useEffect(() => { //get user pfp\r\n    if(userID.id) { //if not 0 ie guest mode\r\n      axios.get('http://localhost:8081/getPfp', { params: { ...userID } })\r\n      .then(res => {\r\n        if (res.data.message == \"Retrieved pfp\") {\r\n          setUserPfpPath('http://localhost:8081/uploads/' + res.data.pfp);\r\n        }\r\n        else {\r\n          setUserPfpPath('https://nationalkidneypartners.com/wp-content/uploads/2023/05/headshot-placeholder.webp'); //default pfp\r\n        }\r\n      })\r\n\r\n      axios.get('http://localhost:8081/fetchSettings', { params: { ...userID } }) //get user settings\r\n      .then(res => {\r\n        if (res.data.message == \"Fetched settings\") {\r\n          setDarkMode(res.data.dark === 1)\r\n          setColorBlind(res.data.color === 1);\r\n          setSettingsLoading(false);\r\n          // setDarkMode(res.data.dark)\r\n          // setDarkMode(res.data.dark)\r\n\r\n        }\r\n      })\r\n\r\n\r\n    }\r\n  }, [userID])\r\n\r\n \r\n\r\n  return (\r\n    <div className={`App  ${darkMode ? 'bg-[#121213] text-white' : 'bg-white text-black'}`}>\r\n      \r\n      <KeyboardContext.Provider value={{kbColor, setKbColor, winPage, setWinPage, tutorial, showTutorial, settings, showSettings, guestMode, setGuestMode, userMode, setUserMode, darkMode, setDarkMode, loginPage, showLoginPage, registerPage, showRegisterPage, userID, setUserID, win, setWin, guessWon, setGuessWon, isAuth, setIsAuth, checkingAuth, setCheckingAuth, guesses, setGuesses, guessLength, setGuessLength, doneHash, setDoneHash, canEnterHash, setCanEnterHash, wordleList, setWordleList, notEnough, setNotEnough, wrongWord, setWrongWord, leaderBoard, showLeaderBoard, accessLeaderBoard, setAccessLeaderBoard, clickDisabledLeaderBoard, setClickDisabledLeaderBoard, profilePage, showProfilePage, userPfpPath, setUserPfpPath, accessProfile, setAccessProfile, clickDisabledProfile, setClickDisabledProfile, delay, setDelay, colorBlind, setColorBlind, answer, showAnswer, settingsLoading, setSettingsLoading, enterPressed, removeStyle, setRemoveStyle}}>\r\n      \r\n      \r\n        {!(guestMode || userMode) || settingsLoading ? <LandingPage /> : //settings loading defualt true so settings like dark mode are fetched hidden while spinning circle displayed.\r\n        <>\r\n          <div className={`absolute top-0 left-0 w-full z-[-10] ${darkMode ? 'bg-[#121213]' : 'bg-white' } h-[946px]`}/>\r\n\r\n          <Header />\r\n          <Grid />\r\n          <Keys />\r\n\r\n        </>\r\n        }\r\n\r\n\r\n      </KeyboardContext.Provider>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;;EAEA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,MAAM;IAC3C,MAAMkB,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IACnE,OAAOJ,eAAe,IAAI,EAAE;EAChC,CAAC,CAAC;EACA,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,QAAQ,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAM,CAAC2B,QAAQ,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiC,QAAQ,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmC,SAAS,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAClD,MAAM,CAACqC,YAAY,EAAEC,gBAAgB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACxD,MAAM,CAACuC,MAAM,EAAEC,SAAS,CAAC,GAAGxC,QAAQ,CAAC;IAACyC,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAG;EAAE,CAAC,CAAC;EAC5D,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAG5C,QAAQ,CAAC,MAAM;IACnC,MAAM6C,WAAW,GAAG1B,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3D,OAAOuB,WAAW,IAAI,KAAK;EAC/B,CAAC,CAAC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG/C,QAAQ,CAAC,MAAM;IAC7C,MAAMgD,gBAAgB,GAAG7B,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IACrE,OAAO0B,gBAAgB,IAAI,CAAC;EAChC,CAAC,CAAC;EAMA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACmD,YAAY,EAAEC,eAAe,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACqD,OAAO,EAAEC,UAAU,CAAC,GAAGtD,QAAQ,CAAC,MAAM;IAC3C;IACA,MAAMuD,eAAe,GAAGpC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IACnE,OAAOiC,eAAe,IAAI;MACtBC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACX,CAAC;EACL,CAAC,CAAC;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgE,QAAQ,EAAEC,WAAW,CAAC,GAAGjE,QAAQ,CAAC,MAAM;IACzC;IACA,MAAMkE,gBAAgB,GAAG/C,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IACrE,OAAO4C,gBAAgB,IAAI;MACvBC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE;IACf,CAAC;EACL,CAAC,CAAC;EAEJ,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG1E,QAAQ,CAAC;IACvC2E,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,KAAK;IACrBC,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,KAAK;IACrBC,aAAa,EAAE,KAAK;IACpBC,aAAa,EAAE;EACjB,CAAC,CAAC;EACV,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlF,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmF,SAAS,EAAEC,YAAY,CAAC,GAAGpF,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqF,SAAS,EAAEC,YAAY,CAAC,GAAGtF,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACuF,WAAW,EAAEC,eAAe,CAAC,GAAGxF,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM,CAACyF,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1F,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC2F,wBAAwB,EAAEC,2BAA2B,CAAC,GAAG5F,QAAQ,CAAC,KAAK,CAAC;EAC/E,MAAM,CAAC6F,WAAW,EAAEC,cAAc,CAAC,GAAG9F,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAAC+F,WAAW,EAAEC,eAAe,CAAC,GAAGhG,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM,CAACiG,aAAa,EAAEC,gBAAgB,CAAC,GAAGlG,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACmG,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGpG,QAAQ,CAAC,KAAK,CAAC;EAEvE,MAAM,CAACqG,KAAK,EAAEC,QAAQ,CAAC,GAAGtG,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAM,CAACuG,UAAU,EAAEC,aAAa,CAAC,GAAGxG,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACyG,MAAM,EAAEC,UAAU,CAAC,GAAG1G,QAAQ,CAAC,MAAM;IAC1C,MAAM2G,cAAc,GAAGxF,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACjE,OAAOqF,cAAc,IAAI,KAAK;EAClC,CAAC,CAAC;EAEA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG7G,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM8G,YAAY,GAAG5G,MAAM,CAAC,KAAK,CAAC;EAClC,MAAM,CAAC6G,WAAW,EAAEC,cAAc,CAAC,GAAGhH,QAAQ,CAAC,KAAK,CAAC;EAKrD,MAAMiH,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMzG,KAAK,CAAC0G,GAAG,CAAC,kCAAkC,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;MAE1FpF,WAAW,CAAC,IAAI,CAAC;MACjB6E,kBAAkB,CAAC,IAAI,CAAC;MACxBzD,eAAe,CAAC,KAAK,CAAC;MACtBZ,SAAS,CAAC;QAACC,EAAE,EAAEyE,GAAG,CAACG,IAAI,CAAC5E,EAAE;QAAEC,QAAQ,EAAGwE,GAAG,CAACG,IAAI,CAAC3E;MAAQ,CAAC,CAAC;IAC5D,CAAC,CACD,OAAO4E,GAAG,EAAE;MACVtF,WAAW,CAAC,KAAK,CAAC;MAClBF,YAAY,CAAC,KAAK,CAAC;MACnBsB,eAAe,CAAC,KAAK,CAAC;MACtBmE,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;IAE9C;EACF,CAAC;EAEDvH,SAAS,CAAC,MAAM;IAAE;IAChBgH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENhH,SAAS,CAAC,MAAM;IAAE;IAChB,IAAGsC,MAAM,CAACE,EAAE,EAAE;MAAE;MACdhC,KAAK,CAAC0G,GAAG,CAAC,8BAA8B,EAAE;QAAEM,MAAM,EAAE;UAAE,GAAGlF;QAAO;MAAE,CAAC,CAAC,CACnEmF,IAAI,CAACR,GAAG,IAAI;QACX,IAAIA,GAAG,CAACG,IAAI,CAACM,OAAO,IAAI,eAAe,EAAE;UACvC7B,cAAc,CAAC,gCAAgC,GAAGoB,GAAG,CAACG,IAAI,CAACO,GAAG,CAAC;QACjE,CAAC,MACI;UACH9B,cAAc,CAAC,yFAAyF,CAAC,CAAC,CAAC;QAC7G;MACF,CAAC,CAAC;MAEFrF,KAAK,CAAC0G,GAAG,CAAC,qCAAqC,EAAE;QAAEM,MAAM,EAAE;UAAE,GAAGlF;QAAO;MAAE,CAAC,CAAC,CAAC;MAAA,CAC3EmF,IAAI,CAACR,GAAG,IAAI;QACX,IAAIA,GAAG,CAACG,IAAI,CAACM,OAAO,IAAI,kBAAkB,EAAE;UAC1CzF,WAAW,CAACgF,GAAG,CAACG,IAAI,CAACQ,IAAI,KAAK,CAAC,CAAC;UAChCrB,aAAa,CAACU,GAAG,CAACG,IAAI,CAACS,KAAK,KAAK,CAAC,CAAC;UACnCjB,kBAAkB,CAAC,KAAK,CAAC;UACzB;UACA;QAEF;MACF,CAAC,CAAC;IAGJ;EACF,CAAC,EAAE,CAACtE,MAAM,CAAC,CAAC;EAIZ,oBACE5B,OAAA;IAAKoH,SAAS,EAAE,QAAQ9F,QAAQ,GAAG,yBAAyB,GAAG,qBAAqB,EAAG;IAAA+F,QAAA,eAErFrH,OAAA,CAACL,eAAe,CAAC2H,QAAQ;MAACC,KAAK,EAAE;QAAClH,OAAO;QAAEC,UAAU;QAAEM,OAAO;QAAEC,UAAU;QAAEC,QAAQ;QAAEC,YAAY;QAAEC,QAAQ;QAAEC,YAAY;QAAEC,SAAS;QAAEC,YAAY;QAAEC,QAAQ;QAAEC,WAAW;QAAEC,QAAQ;QAAEC,WAAW;QAAEC,SAAS;QAAEC,aAAa;QAAEC,YAAY;QAAEC,gBAAgB;QAAEC,MAAM;QAAEC,SAAS;QAAEG,GAAG;QAAEC,MAAM;QAAEE,QAAQ;QAAEC,WAAW;QAAEE,MAAM;QAAEC,SAAS;QAAEC,YAAY;QAAEC,eAAe;QAAEC,OAAO;QAAEC,UAAU;QAAEQ,WAAW;QAAEC,cAAc;QAAEC,QAAQ;QAAEC,WAAW;QAAEQ,YAAY;QAAEC,eAAe;QAAEO,UAAU;QAAEC,aAAa;QAAEC,SAAS;QAAEC,YAAY;QAAEC,SAAS;QAAEC,YAAY;QAAEC,WAAW;QAAEC,eAAe;QAAEC,iBAAiB;QAAEC,oBAAoB;QAAEC,wBAAwB;QAAEC,2BAA2B;QAAEG,WAAW;QAAEC,eAAe;QAAEH,WAAW;QAAEC,cAAc;QAAEG,aAAa;QAAEC,gBAAgB;QAAEC,oBAAoB;QAAEC,uBAAuB;QAAEC,KAAK;QAAEC,QAAQ;QAAEC,UAAU;QAAEC,aAAa;QAAEC,MAAM;QAAEC,UAAU;QAAEE,eAAe;QAAEC,kBAAkB;QAAEC,YAAY;QAAEC,WAAW;QAAEC;MAAc,CAAE;MAAAgB,QAAA,EAGj7B,EAAEnG,SAAS,IAAIE,QAAQ,CAAC,IAAI6E,eAAe,gBAAGjG,OAAA,CAACH,WAAW;QAAA2H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAA;MAAG;MACjE3H,OAAA,CAAAE,SAAA;QAAAmH,QAAA,gBACErH,OAAA;UAAKoH,SAAS,EAAE,wCAAwC9F,QAAQ,GAAG,cAAc,GAAG,UAAU;QAAc;UAAAkG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAE9G3H,OAAA,CAACP,MAAM;UAAA+H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACV3H,OAAA,CAACR,IAAI;UAAAgI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACR3H,OAAA,CAACN,IAAI;UAAA8H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eAER;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIqB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExB,CAAC;AAEV;AAACvH,EAAA,CAvKQD,GAAG;AAAAyH,EAAA,GAAHzH,GAAG;AAyKZ,eAAeA,GAAG;AAAC,IAAAyH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}